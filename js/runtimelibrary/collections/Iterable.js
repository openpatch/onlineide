import { Method, Parameterlist } from "../../compiler/types/Types.js";
import { Interface } from "../../compiler/types/Class.js";
export class IterableClass extends Interface {
    constructor(module) {
        super("Iterable", module, "Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)");
        let typeE = module.typeStore.getType("Object").clone();
        typeE.identifier = "E";
        typeE.isTypeVariable = true;
        let tvE = {
            identifier: "E",
            scopeFrom: { line: 1, column: 1, length: 1 },
            scopeTo: { line: 1, column: 1, length: 1 },
            type: typeE
        };
        this.typeVariables.push(tvE);
        let iteratorType = module.typeStore.getType("Iterator").clone();
        iteratorType.typeVariables = [tvE];
        this.addMethod(new Method("iterator", new Parameterlist([]), iteratorType, null, // no implementation!
        true, false, "Gibt einen Iterator über die Elemente dieser Collection zurück."));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXRlcmFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY2xpZW50L3J1bnRpbWVsaWJyYXJ5L2NvbGxlY3Rpb25zL0l0ZXJhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxNQUFNLEVBQUUsYUFBYSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDdEUsT0FBTyxFQUFFLFNBQVMsRUFBdUIsTUFBTSwrQkFBK0IsQ0FBQztBQUcvRSxNQUFNLE9BQU8sYUFBYyxTQUFRLFNBQVM7SUFFeEMsWUFBWSxNQUFjO1FBRXRCLEtBQUssQ0FBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLDhFQUE4RSxDQUFDLENBQUM7UUFFMUcsSUFBSSxLQUFLLEdBQWtCLE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3ZFLEtBQUssQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDO1FBQ3ZCLEtBQUssQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBRTVCLElBQUksR0FBRyxHQUFpQjtZQUNwQixVQUFVLEVBQUUsR0FBRztZQUNmLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFDO1lBQzFDLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFDO1lBQ3hDLElBQUksRUFBRSxLQUFLO1NBQ2QsQ0FBQztRQUNGLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTdCLElBQUksWUFBWSxHQUFXLE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3pFLFlBQVksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUduQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksTUFBTSxDQUFDLFVBQVUsRUFBRSxJQUFJLGFBQWEsQ0FBQyxFQUN2RCxDQUFDLEVBQUUsWUFBWSxFQUNaLElBQUksRUFBRyxxQkFBcUI7UUFDNUIsSUFBSSxFQUFFLEtBQUssRUFBRSxpRUFBaUUsQ0FBQyxDQUFDLENBQUM7SUFFekYsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlIH0gZnJvbSBcIi4uLy4uL2NvbXBpbGVyL3BhcnNlci9Nb2R1bGUuanNcIjtcclxuaW1wb3J0IHsgTWV0aG9kLCBQYXJhbWV0ZXJsaXN0IH0gZnJvbSBcIi4uLy4uL2NvbXBpbGVyL3R5cGVzL1R5cGVzLmpzXCI7XHJcbmltcG9ydCB7IEludGVyZmFjZSwgVHlwZVZhcmlhYmxlLCBLbGFzcyB9IGZyb20gXCIuLi8uLi9jb21waWxlci90eXBlcy9DbGFzcy5qc1wiO1xyXG5pbXBvcnQgeyB2b2lkUHJpbWl0aXZlVHlwZSwgYm9vbGVhblByaW1pdGl2ZVR5cGUsIGludFByaW1pdGl2ZVR5cGUgfSBmcm9tIFwiLi4vLi4vY29tcGlsZXIvdHlwZXMvUHJpbWl0aXZlVHlwZXMuanNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBJdGVyYWJsZUNsYXNzIGV4dGVuZHMgSW50ZXJmYWNlIHtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihtb2R1bGU6IE1vZHVsZSkge1xyXG4gICAgICAgIFxyXG4gICAgICAgIHN1cGVyKFwiSXRlcmFibGVcIiwgbW9kdWxlLCBcIkludGVyZmFjZSBtaXQgRnVua3Rpb25hbGl0w6R0IHp1bSBpdGVyaWVyZW4gKGQuaC4gRHVyY2hsYXVmZW4gYWxsZXIgRWxlbWVudGUpXCIpO1xyXG5cclxuICAgICAgICBsZXQgdHlwZUU6IEtsYXNzID0gKDxLbGFzcz5tb2R1bGUudHlwZVN0b3JlLmdldFR5cGUoXCJPYmplY3RcIikpLmNsb25lKCk7XHJcbiAgICAgICAgdHlwZUUuaWRlbnRpZmllciA9IFwiRVwiO1xyXG4gICAgICAgIHR5cGVFLmlzVHlwZVZhcmlhYmxlID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgbGV0IHR2RTogVHlwZVZhcmlhYmxlID0ge1xyXG4gICAgICAgICAgICBpZGVudGlmaWVyOiBcIkVcIixcclxuICAgICAgICAgICAgc2NvcGVGcm9tOiB7bGluZTogMSwgY29sdW1uOiAxLCBsZW5ndGg6IDF9LFxyXG4gICAgICAgICAgICBzY29wZVRvOiB7bGluZTogMSwgY29sdW1uOiAxLCBsZW5ndGg6IDF9LFxyXG4gICAgICAgICAgICB0eXBlOiB0eXBlRVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy50eXBlVmFyaWFibGVzLnB1c2godHZFKTtcclxuXHJcbiAgICAgICAgbGV0IGl0ZXJhdG9yVHlwZSA9ICg8S2xhc3M+bW9kdWxlLnR5cGVTdG9yZS5nZXRUeXBlKFwiSXRlcmF0b3JcIikpLmNsb25lKCk7XHJcbiAgICAgICAgaXRlcmF0b3JUeXBlLnR5cGVWYXJpYWJsZXMgPSBbdHZFXTtcclxuXHJcblxyXG4gICAgICAgIHRoaXMuYWRkTWV0aG9kKG5ldyBNZXRob2QoXCJpdGVyYXRvclwiLCBuZXcgUGFyYW1ldGVybGlzdChbXHJcbiAgICAgICAgXSksIGl0ZXJhdG9yVHlwZSxcclxuICAgICAgICAgICAgbnVsbCwgIC8vIG5vIGltcGxlbWVudGF0aW9uIVxyXG4gICAgICAgICAgICB0cnVlLCBmYWxzZSwgXCJHaWJ0IGVpbmVuIEl0ZXJhdG9yIMO8YmVyIGRpZSBFbGVtZW50ZSBkaWVzZXIgQ29sbGVjdGlvbiB6dXLDvGNrLlwiKSk7XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=