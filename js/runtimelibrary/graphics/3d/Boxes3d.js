export class Boxes3d {
    static createCube3d(material = new Pixi3d.StandardMaterial()) {
        return new Pixi3d.Mesh3D(this.createCube3dMesh(), material);
    }
    static createCube3dMesh() {
        return Object.assign(new Pixi3d.MeshGeometry3D(), {
            positions: {
                buffer: new Float32Array([-1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,
                    -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1,
                    1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1,
                    1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1,
                    1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1,
                    -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23
            },
            indices: {
                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])
            },
            normals: {
                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])
            },
            uvs: [{
                    buffer: new Float32Array([
                        0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00,
                        0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00,
                        0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00,
                        0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00,
                        0, 0, 0.33333, 0.25, 0.33333, 0, 0, 0.25,
                        0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00
                    ])
                    // buffer: new Float32Array([0.66666, 1, 0.33333, 0.75, 0.33333, 1,   0.66666, 0.75, 0.66666, 0.75, 0.33333, 0.5, 0.33333, 0.75, 0.66666, 0.5, 
                    //  0.66666, 0.5, 0.33333, 0.25, 0.33333, 0.5, 0.66666, 0.25, 0.66666, 0.25, 0.33333, 0, 0.33333, 0.25, 0.66666, 0, 
                    //  0.33333, 0.25, 0.125, 0.5, 0.33333, 0.5, 0.125, 0.25, 
                    //1.0, 0.25, 0.66666, 0.5, 1.0, 0.5, 0.66666, 0.25])
                }],
            tangents: {
                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])
            }
        });
    }
    static createHalfheightCube3d(material = new Pixi3d.StandardMaterial()) {
        return new Pixi3d.Mesh3D(this.createHalfheightCube3dMesh(), material);
    }
    static createHalfheightCube3dMesh() {
        return Object.assign(new Pixi3d.MeshGeometry3D(), {
            positions: {
                buffer: new Float32Array([-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, -1,
                    -1, 1, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1,
                    1, 1, -1, 1, 0, 1, 1, 0, -1, 1, 1, 1,
                    1, 1, 1, -1, 0, 1, 1, 0, 1, -1, 1, 1,
                    1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 0, 1,
                    -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23
            },
            indices: {
                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])
            },
            normals: {
                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])
            },
            uvs: [{
                    buffer: new Float32Array([
                        0.66666, 0.00, 0.33333, 0.50, 0.66666, 0.50, 0.33333, 0.00,
                        0.66666, 0.00, 0.33333, 0.50, 0.66666, 0.50, 0.33333, 0.00,
                        0.66666, 0.00, 0.33333, 0.50, 0.66666, 0.50, 0.33333, 0.00,
                        0.66666, 0.00, 0.33333, 0.50, 0.66666, 0.50, 0.33333, 0.00,
                        0, 0, 0.33333, 0.25, 0.33333, 0, 0, 0.25,
                        0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00
                    ])
                    // buffer: new Float32Array([0.6, 1, 0.4, 0.75, 0.4, 1, 0.6, 0.75, 0.6, 0.75, 0.4, 0.5, 0.4, 0.75, 
                    //                           0.6, 0.5, 0.6, 0.5, 0.4, 0.25, 0.4, 0.5, 0.6, 0.25, 0.6, 0.25, 0.4, 0, 
                    //                           0.4, 0.25, 0.6, 0, 0.4, 0.25, 0.125, 0.5, 0.4, 0.5, 0.125, 0.25, 1.0, 0.25, 0.6, 
                    //                           0.5, 1.0, 0.5, 0.6, 0.25])
                }],
            tangents: {
                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])
            }
        });
    }
    static createPlane3d(repeatTextureU = 1, repeatTextureV = 1, material = new Pixi3d.StandardMaterial()) {
        return new Pixi3d.Mesh3D(this.createPlane3dMesh(repeatTextureU, repeatTextureV), material);
    }
    static createPlane3dMesh(repeatTextureU = 1, repeatTextureV = 1) {
        return Object.assign(new Pixi3d.MeshGeometry3D(), {
            positions: {
                buffer: new Float32Array([-1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, 1])
            },
            indices: {
                buffer: new Uint8Array([0, 1, 2, 0, 3, 1])
            },
            normals: {
                buffer: new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])
            },
            uvs: [{
                    buffer: new Float32Array([0, repeatTextureV, repeatTextureU, 0, 0, 0, repeatTextureU, repeatTextureV])
                }]
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm94ZXMzZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jbGllbnQvcnVudGltZWxpYnJhcnkvZ3JhcGhpY3MvM2QvQm94ZXMzZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLE9BQU8sT0FBTztJQUNULE1BQU0sQ0FBQyxZQUFZLENBQUMsV0FBNEIsSUFBSSxNQUFNLENBQUMsZ0JBQWdCLEVBQUU7UUFDaEYsT0FBTyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUNNLE1BQU0sQ0FBQyxnQkFBZ0I7UUFDMUIsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksTUFBTSxDQUFDLGNBQWMsRUFBRSxFQUFFO1lBQzlDLFNBQVMsRUFBRTtnQkFDUCxNQUFNLEVBQUUsSUFBSSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO29CQUNwRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO29CQUN0QyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztvQkFDdEMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7b0JBQ3RDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUM7b0JBQzlDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLGlCQUFpQjthQUM3RDtZQUNELE9BQU8sRUFBRTtnQkFDTCxNQUFNLEVBQUUsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO2FBQzNKO1lBQ0QsT0FBTyxFQUFFO2dCQUNMLE1BQU0sRUFBRSxJQUFJLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDalE7WUFDRCxHQUFHLEVBQUUsQ0FBQztvQkFDRixNQUFNLEVBQUUsSUFBSSxZQUFZLENBQUM7d0JBQ3JCLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRyxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJO3dCQUMzRCxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSTt3QkFDMUQsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUk7d0JBQzFELE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJO3dCQUMxRCxDQUFDLEVBQVEsQ0FBQyxFQUFLLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBSyxDQUFDLEVBQVEsSUFBSTt3QkFDMUQsT0FBTyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUk7cUJBQUMsQ0FBQztvQkFDakQsK0lBQStJO29CQUMvSSxvSEFBb0g7b0JBQ3BILDBEQUEwRDtvQkFDMUQsb0RBQW9EO2lCQUN2RCxDQUFDO1lBQ0YsUUFBUSxFQUFFO2dCQUNOLE1BQU0sRUFBRSxJQUFJLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUNqVTtTQUNKLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFTSxNQUFNLENBQUMsc0JBQXNCLENBQUMsV0FBNEIsSUFBSSxNQUFNLENBQUMsZ0JBQWdCLEVBQUU7UUFDMUYsT0FBTyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLDBCQUEwQixFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDMUUsQ0FBQztJQUNNLE1BQU0sQ0FBQywwQkFBMEI7UUFDcEMsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksTUFBTSxDQUFDLGNBQWMsRUFBRSxFQUFFO1lBQzlDLFNBQVMsRUFBRTtnQkFDUCxNQUFNLEVBQUUsSUFBSSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7b0JBQ2xFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztvQkFDcEMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztvQkFDcEMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztvQkFDcEMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7b0JBQzFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLGlCQUFpQjthQUM3RDtZQUNELE9BQU8sRUFBRTtnQkFDTCxNQUFNLEVBQUUsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO2FBQzNKO1lBQ0QsT0FBTyxFQUFFO2dCQUNMLE1BQU0sRUFBRSxJQUFJLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDalE7WUFDRCxHQUFHLEVBQUUsQ0FBQztvQkFDRixNQUFNLEVBQUUsSUFBSSxZQUFZLENBQUM7d0JBQ3JCLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRyxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJO3dCQUMzRCxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUcsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSTt3QkFDM0QsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFHLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUk7d0JBQzNELE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRyxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJO3dCQUMzRCxDQUFDLEVBQVEsQ0FBQyxFQUFLLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUMs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SUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQzNDO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLE1BQU0sRUFBRSxJQUFJLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDL0Q7WUFDRCxHQUFHLEVBQUUsQ0FBQztvQkFDSixNQUFNLEVBQUUsSUFBSSxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxjQUFjLEVBQUUsY0FBYyxDQUFDLENBQUM7aUJBQ3ZHLENBQUM7U0FDSCxDQUFDLENBQUE7SUFDUixDQUFDO0NBR0oiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQm94ZXMzZCB7XHJcbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZUN1YmUzZChtYXRlcmlhbDogUGl4aTNkLk1hdGVyaWFsID0gbmV3IFBpeGkzZC5TdGFuZGFyZE1hdGVyaWFsKCkpe1xyXG4gICAgICAgIHJldHVybiBuZXcgUGl4aTNkLk1lc2gzRCh0aGlzLmNyZWF0ZUN1YmUzZE1lc2goKSwgbWF0ZXJpYWwpO1xyXG4gICAgfVxyXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGVDdWJlM2RNZXNoKCkge1xyXG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyBQaXhpM2QuTWVzaEdlb21ldHJ5M0QoKSwge1xyXG4gICAgICAgICAgICBwb3NpdGlvbnM6IHtcclxuICAgICAgICAgICAgICAgIGJ1ZmZlcjogbmV3IEZsb2F0MzJBcnJheShbLTEsIDEsIDEsIC0xLCAtMSwgLTEsIC0xLCAtMSwgMSwgLTEsIDEsIC0xLCAgLy8gMCwgMSwgMiwgM1xyXG4gICAgICAgICAgICAgICAgLTEsIDEsIC0xLCAxLCAtMSwgLTEsIC0xLCAtMSwgLTEsIDEsIDEsIC0xLCAgLy8gNCwgNSwgNiwgN1xyXG4gICAgICAgICAgICAgICAgICAgIDEsIDEsIC0xLCAxLCAtMSwgMSwgMSwgLTEsIC0xLCAxLCAxLCAxLCAvLyA4LCA5LCAxMCwgMTFcclxuICAgICAgICAgICAgICAgICAgICAxLCAxLCAxLCAtMSwgLTEsIDEsIDEsIC0xLCAxLCAtMSwgMSwgMSwgIC8vIDEyLCAxMywgMTQsIDE1XHJcbiAgICAgICAgICAgICAgICAgICAgMSwgLTEsIDEsIC0xLCAtMSwgLTEsIDEsIC0xLCAtMSwgLTEsIC0xLCAxLCAgLy8gMTYsIDE3LCAxOCwgMTlcclxuICAgICAgICAgICAgICAgIC0xLCAxLCAxLCAxLCAxLCAtMSwgLTEsIDEsIC0xLCAxLCAxLCAxXSkgLy8gMjAsIDIxLCAyMiwgMjNcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgaW5kaWNlczoge1xyXG4gICAgICAgICAgICAgICAgYnVmZmVyOiBuZXcgVWludDhBcnJheShbMCwgMSwgMiwgMCwgMywgMSwgNCwgNSwgNiwgNCwgNywgNSwgOCwgOSwgMTAsIDgsIDExLCA5LCAxMiwgMTMsIDE0LCAxMiwgMTUsIDEzLCAxNiwgMTcsIDE4LCAxNiwgMTksIDE3LCAyMCwgMjEsIDIyLCAyMCwgMjMsIDIxXSlcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgbm9ybWFsczoge1xyXG4gICAgICAgICAgICAgICAgYnVmZmVyOiBuZXcgRmxvYXQzMkFycmF5KFstMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwXSlcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdXZzOiBbe1xyXG4gICAgICAgICAgICAgICAgYnVmZmVyOiBuZXcgRmxvYXQzMkFycmF5KFtcclxuICAgICAgICAgICAgICAgICAgICAwLjY2NjY2LCAwLjAwLCAwLjMzMzMzLCAxLjAwLCAgMC42NjY2NiwgMS4wMCwgMC4zMzMzMywgMC4wMCwgXHJcbiAgICAgICAgICAgICAgICAgICAgMC42NjY2NiwgMC4wMCwgMC4zMzMzMywgMS4wMCwgMC42NjY2NiwgMS4wMCwgMC4zMzMzMywgMC4wMCwgXHJcbiAgICAgICAgICAgICAgICAgICAgMC42NjY2NiwgMC4wMCwgMC4zMzMzMywgMS4wMCwgMC42NjY2NiwgMS4wMCwgMC4zMzMzMywgMC4wMCwgXHJcbiAgICAgICAgICAgICAgICAgICAgMC42NjY2NiwgMC4wMCwgMC4zMzMzMywgMS4wMCwgMC42NjY2NiwgMS4wMCwgMC4zMzMzMywgMC4wMCwgXHJcbiAgICAgICAgICAgICAgICAgICAgMCwgICAgICAgMCwgICAgMC4zMzMzMywgMC4yNSwgMC4zMzMzMywgMCwgICAgMCwgICAgICAgMC4yNSwgXHJcbiAgICAgICAgICAgICAgICAgICAgMC42NjY2NiwgMCwgMS4wLCAxLjAsIDEuMCwgMCwgMC42NjY2NiwgMS4wMF0pXHJcbiAgICAgICAgICAgICAgICAvLyBidWZmZXI6IG5ldyBGbG9hdDMyQXJyYXkoWzAuNjY2NjYsIDEsIDAuMzMzMzMsIDAuNzUsIDAuMzMzMzMsIDEsICAgMC42NjY2NiwgMC43NSwgMC42NjY2NiwgMC43NSwgMC4zMzMzMywgMC41LCAwLjMzMzMzLCAwLjc1LCAwLjY2NjY2LCAwLjUsIFxyXG4gICAgICAgICAgICAgICAgLy8gIDAuNjY2NjYsIDAuNSwgMC4zMzMzMywgMC4yNSwgMC4zMzMzMywgMC41LCAwLjY2NjY2LCAwLjI1LCAwLjY2NjY2LCAwLjI1LCAwLjMzMzMzLCAwLCAwLjMzMzMzLCAwLjI1LCAwLjY2NjY2LCAwLCBcclxuICAgICAgICAgICAgICAgIC8vICAwLjMzMzMzLCAwLjI1LCAwLjEyNSwgMC41LCAwLjMzMzMzLCAwLjUsIDAuMTI1LCAwLjI1LCBcclxuICAgICAgICAgICAgICAgIC8vMS4wLCAwLjI1LCAwLjY2NjY2LCAwLjUsIDEuMCwgMC41LCAwLjY2NjY2LCAwLjI1XSlcclxuICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgIHRhbmdlbnRzOiB7XHJcbiAgICAgICAgICAgICAgICBidWZmZXI6IG5ldyBGbG9hdDMyQXJyYXkoWzAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDAsIDEsIDEsIDAsIDAsIDEsIDEsIDAsIDAsIDEsIDEsIDAsIDAsIDEsIDEsIDAsIDAsIDEsIC0xLCAwLCAwLCAxLCAtMSwgMCwgMCwgMSwgLTEsIDAsIDAsIDEsIC0xLCAwLCAwLCAxXSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGVIYWxmaGVpZ2h0Q3ViZTNkKG1hdGVyaWFsOiBQaXhpM2QuTWF0ZXJpYWwgPSBuZXcgUGl4aTNkLlN0YW5kYXJkTWF0ZXJpYWwoKSl7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQaXhpM2QuTWVzaDNEKHRoaXMuY3JlYXRlSGFsZmhlaWdodEN1YmUzZE1lc2goKSwgbWF0ZXJpYWwpO1xyXG4gICAgfVxyXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGVIYWxmaGVpZ2h0Q3ViZTNkTWVzaCgpIHtcclxuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgUGl4aTNkLk1lc2hHZW9tZXRyeTNEKCksIHtcclxuICAgICAgICAgICAgcG9zaXRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICBidWZmZXI6IG5ldyBGbG9hdDMyQXJyYXkoWy0xLCAxLCAxLCAtMSwgMCwgLTEsIC0xLCAwLCAxLCAtMSwgMSwgLTEsICAvLyAwLCAxLCAyLCAzXHJcbiAgICAgICAgICAgICAgICAtMSwgMSwgLTEsIDEsIDAsIC0xLCAtMSwgMCwgLTEsIDEsIDEsIC0xLCAgLy8gNCwgNSwgNiwgN1xyXG4gICAgICAgICAgICAgICAgICAgIDEsIDEsIC0xLCAxLCAwLCAxLCAxLCAwLCAtMSwgMSwgMSwgMSwgLy8gOCwgOSwgMTAsIDExXHJcbiAgICAgICAgICAgICAgICAgICAgMSwgMSwgMSwgLTEsIDAsIDEsIDEsIDAsIDEsIC0xLCAxLCAxLCAgLy8gMTIsIDEzLCAxNCwgMTVcclxuICAgICAgICAgICAgICAgICAgICAxLCAwLCAxLCAtMSwgMCwgLTEsIDEsIDAsIC0xLCAtMSwgMCwgMSwgIC8vIDE2LCAxNywgMTgsIDE5XHJcbiAgICAgICAgICAgICAgICAtMSwgMSwgMSwgMSwgMSwgLTEsIC0xLCAxLCAtMSwgMSwgMSwgMV0pIC8vIDIwLCAyMSwgMjIsIDIzXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGluZGljZXM6IHtcclxuICAgICAgICAgICAgICAgIGJ1ZmZlcjogbmV3IFVpbnQ4QXJyYXkoWzAsIDEsIDIsIDAsIDMsIDEsIDQsIDUsIDYsIDQsIDcsIDUsIDgsIDksIDEwLCA4LCAxMSwgOSwgMTIsIDEzLCAxNCwgMTIsIDE1LCAxMywgMTYsIDE3LCAxOCwgMTYsIDE5LCAxNywgMjAsIDIxLCAyMiwgMjAsIDIzLCAyMV0pXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG5vcm1hbHM6IHtcclxuICAgICAgICAgICAgICAgIGJ1ZmZlcjogbmV3IEZsb2F0MzJBcnJheShbLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMF0pXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHV2czogW3tcclxuICAgICAgICAgICAgICAgIGJ1ZmZlcjogbmV3IEZsb2F0MzJBcnJheShbXHJcbiAgICAgICAgICAgICAgICAgICAgMC42NjY2NiwgMC4wMCwgMC4zMzMzMywgMC41MCwgIDAuNjY2NjYsIDAuNTAsIDAuMzMzMzMsIDAuMDAsIFxyXG4gICAgICAgICAgICAgICAgICAgIDAuNjY2NjYsIDAuMDAsIDAuMzMzMzMsIDAuNTAsICAwLjY2NjY2LCAwLjUwLCAwLjMzMzMzLCAwLjAwLCBcclxuICAgICAgICAgICAgICAgICAgICAwLjY2NjY2LCAwLjAwLCAwLjMzMzMzLCAwLjUwLCAgMC42NjY2NiwgMC41MCwgMC4zMzMzMywgMC4wMCwgXHJcbiAgICAgICAgICAgICAgICAgICAgMC42NjY2NiwgMC4wMCwgMC4zMzMzMywgMC41MCwgIDAuNjY2NjYsIDAuNTAsIDAuMzMzMzMsIDAuMDAsIFxyXG4gICAgICAgICAgICAgICAgICAgIDAsICAgICAgIDAsICAgIDAuMzMzMzMsIDAuMjUsIDAuMzMzMzMsIDAsICAgIDAsICAgICAgIDAuMjUsIFxyXG4gICAgICAgICAgICAgICAgICAgIDAuNjY2NjYsIDAsIDEuMCwgMS4wLCAxLjAsIDAsIDAuNjY2NjYsIDEuMDBdKVxyXG4gICAgICAgICAgICAgICAgLy8gYnVmZmVyOiBuZXcgRmxvYXQzMkFycmF5KFswLjYsIDEsIDAuNCwgMC43NSwgMC40LCAxLCAwLjYsIDAuNzUsIDAuNiwgMC43NSwgMC40LCAwLjUsIDAuNCwgMC43NSwgXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgIDAuNiwgMC41LCAwLjYsIDAuNSwgMC40LCAwLjI1LCAwLjQsIDAuNSwgMC42LCAwLjI1LCAwLjYsIDAuMjUsIDAuNCwgMCwgXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgIDAuNCwgMC4yNSwgMC42LCAwLCAwLjQsIDAuMjUsIDAuMTI1LCAwLjUsIDAuNCwgMC41LCAwLjEyNSwgMC4yNSwgMS4wLCAwLjI1LCAwLjYsIFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAwLjUsIDEuMCwgMC41LCAwLjYsIDAuMjVdKVxyXG4gICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgdGFuZ2VudHM6IHtcclxuICAgICAgICAgICAgICAgIGJ1ZmZlcjogbmV3IEZsb2F0MzJBcnJheShbMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMCwgMSwgMSwgMCwgMCwgMSwgMSwgMCwgMCwgMSwgMSwgMCwgMCwgMSwgMSwgMCwgMCwgMSwgLTEsIDAsIDAsIDEsIC0xLCAwLCAwLCAxLCAtMSwgMCwgMCwgMSwgLTEsIDAsIDAsIDFdKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZVBsYW5lM2QocmVwZWF0VGV4dHVyZVU6IG51bWJlciA9IDEsIHJlcGVhdFRleHR1cmVWOiBudW1iZXIgPSAxLCBtYXRlcmlhbDogUGl4aTNkLk1hdGVyaWFsID0gbmV3IFBpeGkzZC5TdGFuZGFyZE1hdGVyaWFsKCkpe1xyXG4gICAgICAgIHJldHVybiBuZXcgUGl4aTNkLk1lc2gzRCh0aGlzLmNyZWF0ZVBsYW5lM2RNZXNoKHJlcGVhdFRleHR1cmVVLCByZXBlYXRUZXh0dXJlViksIG1hdGVyaWFsKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZVBsYW5lM2RNZXNoKHJlcGVhdFRleHR1cmVVOiBudW1iZXIgPSAxLCByZXBlYXRUZXh0dXJlVjogbnVtYmVyID0gMSkge1xyXG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyBQaXhpM2QuTWVzaEdlb21ldHJ5M0QoKSwge1xyXG4gICAgICAgICAgICBwb3NpdGlvbnM6IHtcclxuICAgICAgICAgICAgICBidWZmZXI6IG5ldyBGbG9hdDMyQXJyYXkoWy0xLCAwLCAxLCAxLCAwLCAtMSwgLTEsIDAsIC0xLCAxLCAwLCAxXSlcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgaW5kaWNlczoge1xyXG4gICAgICAgICAgICAgIGJ1ZmZlcjogbmV3IFVpbnQ4QXJyYXkoWzAsIDEsIDIsIDAsIDMsIDFdKVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBub3JtYWxzOiB7XHJcbiAgICAgICAgICAgICAgYnVmZmVyOiBuZXcgRmxvYXQzMkFycmF5KFswLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwXSlcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdXZzOiBbe1xyXG4gICAgICAgICAgICAgIGJ1ZmZlcjogbmV3IEZsb2F0MzJBcnJheShbMCwgcmVwZWF0VGV4dHVyZVYsIHJlcGVhdFRleHR1cmVVLCAwLCAwLCAwLCByZXBlYXRUZXh0dXJlVSwgcmVwZWF0VGV4dHVyZVZdKVxyXG4gICAgICAgICAgICB9XVxyXG4gICAgICAgICAgfSlcclxuICAgIH1cclxuXHJcblxyXG59XHJcbiJdfQ==