//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"Program.js","sourceRoot":"","sources":["../../../../src/client/compiler/parser/Program.ts"],"names":[],"mappings":"","sourcesContent":["import { TextPosition, TokenType, Token } from \"../lexer/Token.js\";\r\nimport { Klass, StaticClass, Interface } from \"../types/Class.js\";\r\nimport { Method, Type, Variable, Attribute } from \"../types/Types.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\n\r\nexport type Breakpoint = {\r\n    line: number,\r\n    column: number,\r\n    statement: Statement\r\n}\r\n\r\nexport type Program = {\r\n    module: Module,\r\n    statements: Statement[],\r\n    method?: Method, // used for stacktrace\r\n    labelManager: LabelManager\r\n}\r\n\r\nexport type Statement = PushValueStatement | PopAndStoreIntoLocalVariableStatement | AssignmentStatement | BinaryOpStatement |\r\n    UnaryOpStatement | PushConstantStatement | DeclareLocalVariableStatement | PushAttributeStatement |\r\n    PushArrayLengthStatement |\r\n    PushStaticClassObjectStatement | PushStaticAttributeStatement | PushStaticAttributeIntrinsicStatement\r\n    | CastValueStatement | CheckCastStatement | SelectArrayElementStatement | CallMethodStatement | CallMainMethodStatement | CallInputMethodStatement |\r\n    MakeEllipsisArrayStatement | PopFromStackStatement | InitStackframeStatement |\r\n    CloseStackframeStatement | ReturnStatement | NewObjectStatement |\r\n    JumpIfFalseStatement | JumpIfTrueStatement | JumpAlwaysStatement | NoOpStatement | IncrementDecrementBeforeStatement |\r\n    IncrementDecrementAfterStatement | ProgramEndStatement | BeginArrayStatement | AddToArrayStatement |\r\n    PushEmptyArrayStatement | PrintStatement | PushEnumValueStatement | InitializeEnumValueStatement |\r\n    JumpOnSwitchStatement | JumpIfTrueAndLeaveOnStackStatement | JumpIfFalseAndLeaveOnStackStatement |\r\n    DeclareHeapVariableStatement | PushFromHeapToStackStatement | ProcessPostConstructorCallbacksStatement |\r\n    ReturnIfDestroyedStatement | ExtendedForLoopCheckCounterAndGetElement | ExtendedForLoopInitStatement| \r\n    PauseElement;\r\n\r\n\r\nexport type PauseElement = {\r\n    type: TokenType.pause | TokenType.setPauseDuration,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean\r\n}\r\n\r\nexport type ExtendedForLoopCheckCounterAndGetElement = {\r\n    type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    kind: \"array\" | \"internalList\" | \"group\",\r\n    stackPosOfCollection: number,\r\n    stackPosOfElement: number,\r\n    stackPosOfCounter: number,\r\n    destination: number // destination after for loop\r\n}\r\n\r\nexport type ExtendedForLoopInitStatement = {\r\n    type: TokenType.extendedForLoopInit,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    stackPosOfCollection: number,\r\n    stackPosOfElement: number,\r\n    typeOfElement: Type,\r\n    stackPosOfCounter: number\r\n}\r\n\r\n// writes initial Value of local variable to given stackpos\r\nexport type DeclareHeapVariableStatement = {\r\n    type: TokenType.heapVariableDeclaration,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    variable: Variable,\r\n    pushOnTopOfStackForInitialization: boolean\r\n}\r\n\r\n// Push Value-object from heap to Stack\r\nexport type PushFromHeapToStackStatement = {\r\n    type: TokenType.pushFromHeapToStack,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    identifier: string\r\n}\r\n\r\n\r\n// writes initial Value of local variable to given stackpos\r\nexport type DeclareLocalVariableStatement = {\r\n    type: TokenType.localVariableDeclaration,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    variable: Variable,\r\n    pushOnTopOfStackForInitialization: boolean\r\n}\r\n\r\n// Push Value-object of local variable (not: attribute) to Stack\r\nexport type PushValueStatement = {\r\n    type: TokenType.pushLocalVariableToStack,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    stackposOfVariable: number\r\n}\r\n\r\n// Pop Value from stack and store into local variable\r\nexport type PopAndStoreIntoLocalVariableStatement = {\r\n    type: TokenType.popAndStoreIntoVariable,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    stackposOfVariable: number\r\n}\r\n\r\n// Push Value-Object of attribute to Stack\r\n// assumes this-object is on stackpos 0 in current stackframe\r\nexport type PushAttributeStatement = {\r\n    type: TokenType.pushAttribute,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    attributeIdentifier: string,\r\n    attributeIndex: number,\r\n    useThisObject: boolean\r\n}\r\n\r\nexport type PushArrayLengthStatement = {\r\n    type: TokenType.pushArrayLength,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean\r\n}\r\n\r\n// writes value on top of stack into value-object one position below\r\n// and takes both objects (or only one) from stack.\r\nexport type AssignmentStatement = {\r\n    type: TokenType.assignment | TokenType.plusAssignment | TokenType.minusAssignment | \r\n     TokenType.multiplicationAssignment | TokenType.divisionAssignment | TokenType.moduloAssignment |\r\n     TokenType.ANDAssigment | TokenType.ORAssigment | TokenType.XORAssigment | TokenType.shiftLeftAssigment |\r\n     TokenType.shiftRightAssigment | TokenType.shiftRightUnsignedAssigment,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    leaveValueOnStack: boolean,\r\n}\r\n\r\nexport type BinaryOpStatement = {\r\n    type: TokenType.binaryOp,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    leftType: Type,\r\n    operator: TokenType\r\n}\r\n\r\nexport type UnaryOpStatement = {\r\n    type: TokenType.unaryOp,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    operator: TokenType\r\n}\r\n\r\nexport type PushConstantStatement = {\r\n    type: TokenType.pushConstant,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    value: any,\r\n    dataType: Type\r\n}\r\n\r\nexport type PushStaticClassObjectStatement = {\r\n    type: TokenType.pushStaticClassObject,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    klass: Klass | Interface\r\n}\r\n\r\nexport type PushStaticAttributeStatement = {\r\n    type: TokenType.pushStaticAttribute,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    klass: StaticClass,\r\n    attributeIndex: number,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport type PushStaticAttributeIntrinsicStatement = {\r\n    type: TokenType.pushStaticAttributeIntrinsic,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    attribute: Attribute\r\n}\r\n\r\nexport type CastValueStatement = {\r\n    type: TokenType.castValue,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    newType: Type,\r\n    stackPosRelative?: number\r\n}\r\n\r\nexport type CheckCastStatement = {\r\n    type: TokenType.checkCast,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    newType: Type,\r\n}\r\n\r\nexport type SelectArrayElementStatement = {\r\n    type: TokenType.selectArrayElement,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean\r\n}\r\n\r\nexport type CallMethodStatement = {\r\n    type: TokenType.callMethod,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    isSuperCall: boolean,\r\n    method: Method,\r\n    stackframeBegin: number\r\n}\r\n\r\nexport type CallMainMethodStatement = {\r\n    type: TokenType.callMainMethod,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    method: Method,\r\n    staticClass: StaticClass    \r\n}\r\n\r\nexport type CallInputMethodStatement = {\r\n    type: TokenType.callInputMethod,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    method: Method,\r\n    stackframeBegin: number\r\n}\r\n\r\nexport type MakeEllipsisArrayStatement = {\r\n    type: TokenType.makeEllipsisArray,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    parameterCount: number,\r\n    arrayType: Type\r\n}\r\n\r\nexport type PopFromStackStatement = {\r\n    type: TokenType.decreaseStackpointer,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    popCount: number\r\n}\r\n\r\nexport type InitStackframeStatement = {\r\n    type: TokenType.initStackframe,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    reserveForLocalVariables: number\r\n}\r\n\r\nexport type CloseStackframeStatement = {\r\n    type: TokenType.closeStackframe,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean\r\n}\r\n\r\nexport type ReturnStatement = {\r\n    type: TokenType.return,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    copyReturnValueToStackframePos0: boolean,\r\n    leaveThisObjectOnStack: boolean,\r\n    methodWasInjected?: boolean\r\n}\r\n\r\n// instanciates new object and pushes it 2x (!!) to stack. \r\n// one for constructor and one as value of (new ...)\r\nexport type NewObjectStatement = {\r\n    type: TokenType.newObject,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    class: Klass,\r\n    subsequentConstructorCall: boolean // push new object 2 times to stack if true\r\n}\r\n\r\nexport type ProcessPostConstructorCallbacksStatement = {\r\n    type: TokenType.processPostConstructorCallbacks,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint,\r\n    stepFinished?: boolean\r\n}\r\n\r\nexport type IncrementDecrementBeforeStatement = {\r\n    type: TokenType.incrementDecrementBefore,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    incrementDecrementBy: number\r\n}\r\n\r\nexport type IncrementDecrementAfterStatement = {\r\n    type: TokenType.incrementDecrementAfter,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    incrementDecrementBy: number\r\n}\r\n\r\nexport type JumpNode = JumpIfFalseStatement | JumpAlwaysStatement | JumpIfTrueStatement |\r\n    JumpIfTrueAndLeaveOnStackStatement | JumpIfFalseAndLeaveOnStackStatement | ExtendedForLoopCheckCounterAndGetElement;\r\n\r\nexport type SwitchDestinationLabel = {\r\n\r\n    constant: string | number,\r\n    label: number\r\n\r\n}\r\n\r\nexport type JumpOnSwitchStatement = {\r\n    type: TokenType.keywordSwitch,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    switchType: \"string\" | \"number\",\r\n    destinationLabels: SwitchDestinationLabel[], // used at compile time\r\n    destinationMap: { [value: string]: number } | { [value: number]: number }, // used at runtime\r\n\r\n    defaultDestination: number\r\n}\r\n\r\nexport type JumpIfFalseStatement = {\r\n    type: TokenType.jumpIfFalse,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    destination?: number\r\n}\r\n\r\nexport type JumpIfTrueStatement = {\r\n    type: TokenType.jumpIfTrue,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    destination?: number\r\n}\r\n\r\nexport type JumpIfTrueAndLeaveOnStackStatement = {\r\n    type: TokenType.jumpIfTrueAndLeaveOnStack,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    destination?: number\r\n}\r\n\r\nexport type JumpIfFalseAndLeaveOnStackStatement = {\r\n    type: TokenType.jumpIfFalseAndLeaveOnStack,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    destination?: number\r\n}\r\n\r\n\r\nexport type JumpAlwaysStatement = {\r\n    type: TokenType.jumpAlways,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    destination?: number\r\n}\r\n\r\nexport type NoOpStatement = {\r\n    type: TokenType.noOp,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean\r\n}\r\n\r\nexport type ProgramEndStatement = {\r\n    type: TokenType.programEnd,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: true,\r\n    pauseAfterProgramEnd?: boolean\r\n}\r\n\r\nexport type BeginArrayStatement = {\r\n    type: TokenType.beginArray,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    arrayType: Type\r\n}\r\n\r\nexport type AddToArrayStatement = {\r\n    type: TokenType.addToArray,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    numberOfElementsToAdd: number\r\n}\r\n\r\nexport type PushEmptyArrayStatement = {\r\n    type: TokenType.pushEmptyArray,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    dimension: number, // numbers of elements are already on top of stack\r\n    arrayType: Type\r\n}\r\n\r\nexport type PrintStatement = {\r\n    type: TokenType.print | TokenType.println,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    empty: boolean, // no parameter\r\n    withColor: boolean\r\n}\r\n\r\n// pushes enum value to stack\r\nexport type PushEnumValueStatement = {\r\n    type: TokenType.pushEnumValue,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    enumClass: Enum\r\n    valueIdentifier: string\r\n}\r\n\r\nexport type InitializeEnumValueStatement = {\r\n    type: TokenType.initializeEnumValue,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean,\r\n    enumClass: Enum\r\n    valueIdentifier: string\r\n}\r\n\r\nexport type ReturnIfDestroyedStatement = {\r\n    type: TokenType.returnIfDestroyed,\r\n    position: TextPosition,\r\n    breakpoint?: Breakpoint\r\n    stepFinished?: boolean\r\n}"]}