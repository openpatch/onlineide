//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"AST.js","sourceRoot":"","sources":["../../../../src/client/compiler/parser/AST.ts"],"names":[],"mappings":"","sourcesContent":["import { TokenType, TextPosition, Token } from \"../lexer/Token.js\";\r\nimport { Method, Type, Parameterlist, Attribute, Variable } from \"../types/Types.js\";\r\nimport { Visibility, Klass, Interface } from \"../types/Class.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\n\r\n\r\nexport type ASTNode = \r\n    ClassDeclarationNode | InterfaceDeclarationNode | EnumDeclarationNode | EnumValueNode |\r\n    AttributeDeclarationNode | MethodDeclarationNode | ParameterNode |\r\n    WhileNode | ForNode | ForNodeOverCollecion | DoWhileNode | IfNode | SwitchNode|\r\n    TermNode | TypeNode | LocalVariableDeclarationNode | ReturnNode | PrintNode |\r\n    BreakNode | ContinueNode | ScopeNode \r\n    \r\n    // Generics:\r\n    | TypeParameterNode;\r\n\r\n    export type TermNode = BinaryOpNode | UnaryOpNode | MethodcallNode | \r\n    ConstantNode | IdentifierNode |\r\n    SelectArrayElementNode | IncrementDecrementNode | SuperconstructorCallNode | ConstructorCallNode |\r\n    ThisNode | SuperNode | SelectArributeNode | NewObjectNode | \r\n    ArrayInitializationNode | NewArrayNode | CastManuallyNode | BracketsNode;\r\n\r\nexport type PrintNode = {\r\n    type: TokenType.keywordPrint | TokenType.keywordPrintln,\r\n    position: TextPosition,\r\n    commaPositions: TextPosition[],\r\n    text: TermNode,\r\n    color: TermNode,\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport type BreakNode = {\r\n    type: TokenType.keywordBreak,\r\n    position: TextPosition\r\n}\r\n\r\nexport type ContinueNode = {\r\n    type: TokenType.keywordContinue,\r\n    position: TextPosition\r\n}\r\n\r\nexport type ScopeNode = {\r\n    type: TokenType.scopeNode,\r\n    position: TextPosition,\r\n    positionTo: TextPosition,\r\n    statements: ASTNode[]\r\n}\r\n\r\nexport type ReturnNode = {\r\n    type: TokenType.keywordReturn,\r\n    position: TextPosition,\r\n    term: TermNode\r\n}\r\n\r\nexport type IfNode = {\r\n    type: TokenType.keywordIf,\r\n    position: TextPosition,\r\n\r\n    condition: TermNode,\r\n    statementsIfTrue: ASTNode[]\r\n    statementsIfFalse: ASTNode[]\r\n\r\n}\r\n\r\nexport type SwitchCaseNode = {\r\n    type: TokenType.keywordCase,\r\n    position: TextPosition,\r\n\r\n    caseTerm: TermNode, // null if default-case\r\n    statements: ASTNode[],\r\n\r\n}\r\n\r\nexport type SwitchNode = {\r\n    \r\n    type: TokenType.keywordSwitch,\r\n    position: TextPosition,\r\n\r\n    scopeFrom: TextPosition,\r\n    scopeTo: TextPosition,\r\n\r\n    condition: TermNode,\r\n    caseNodes: SwitchCaseNode[]\r\n\r\n}\r\n\r\n\r\nexport type ForNode = {\r\n    type: TokenType.keywordFor,\r\n    position: TextPosition,\r\n\r\n    scopeFrom: TextPosition,\r\n    scopeTo: TextPosition,\r\n\r\n    statementsBefore: ASTNode[],\r\n    condition: TermNode,\r\n    statementsAfter: ASTNode[]\r\n    statements: ASTNode[]\r\n\r\n}\r\n\r\nexport type ForNodeOverCollecion = {\r\n    type: TokenType.forLoopOverCollection,\r\n    position: TextPosition,\r\n\r\n    scopeFrom: TextPosition,\r\n    scopeTo: TextPosition,\r\n\r\n    variableType: TypeNode,\r\n    variableIdentifier: string,\r\n    variablePosition: TextPosition,\r\n    collection: TermNode,\r\n    statements: ASTNode[]\r\n}\r\n\r\nexport type DoWhileNode = {\r\n    type: TokenType.keywordDo,\r\n    position: TextPosition,\r\n\r\n    scopeFrom: TextPosition,\r\n    scopeTo: TextPosition,\r\n\r\n    condition: TermNode,\r\n    statements: ASTNode[]\r\n\r\n}\r\n\r\nexport type WhileNode = {\r\n    type: TokenType.keywordWhile,\r\n    position: TextPosition,\r\n\r\n    scopeFrom: TextPosition,\r\n    scopeTo: TextPosition,\r\n\r\n    condition: TermNode,\r\n    statements: ASTNode[]\r\n\r\n}\r\n\r\nexport type ParameterNode = {\r\n    type: TokenType.parameterDeclaration,\r\n    position: TextPosition,\r\n\r\n    identifier: string,\r\n    parameterType: TypeNode,\r\n    isFinal: boolean,\r\n    isEllipsis: boolean\r\n}\r\n\r\nexport type InterfaceDeclarationNode = {\r\n    type: TokenType.keywordInterface,\r\n    position: TextPosition,\r\n\r\n    identifier: string,\r\n    methods: MethodDeclarationNode[],\r\n\r\n    extends: TypeNode[],\r\n\r\n    scopeFrom: TextPosition,\r\n    scopeTo: TextPosition,\r\n\r\n    typeParameters: TypeParameterNode[],\r\n\r\n    resolvedType?: Interface,\r\n    commentBefore?: Token\r\n\r\n}\r\n\r\nexport type TypeParameterNode = {\r\n    type: TokenType.typeParameter,\r\n    position: TextPosition,\r\n    identifier: string,\r\n    extends: TypeNode,\r\n    implements: TypeNode[],\r\n    resolvedType?: Klass | Interface\r\n}\r\n\r\nexport type ClassDeclarationNode = {\r\n    type: TokenType.keywordClass,\r\n    position: TextPosition,\r\n\r\n    scopeFrom: TextPosition,\r\n    scopeTo: TextPosition,\r\n\r\n    visibility: Visibility,\r\n    identifier: string,\r\n    isAbstract: boolean,\r\n    extends: TypeNode,\r\n    implements: TypeNode[],\r\n\r\n    \r\n    attributes: AttributeDeclarationNode[],\r\n    methods: MethodDeclarationNode[],\r\n\r\n    typeParameters: TypeParameterNode[],\r\n\r\n    resolvedType?: Klass,\r\n    commentBefore?: Token\r\n\r\n}\r\n\r\nexport type EnumValueNode = {\r\n    type: TokenType.pushEnumValue,\r\n    position: TextPosition,\r\n\r\n    identifier: string,\r\n    constructorParameters?: TermNode[],\r\n    commaPositions?: TextPosition[],\r\n    rightBracketPosition?: TextPosition\r\n}\r\n\r\n    export type EnumDeclarationNode = {\r\n    type: TokenType.keywordEnum,\r\n    position: TextPosition,\r\n\r\n    scopeFrom: TextPosition,\r\n    scopeTo: TextPosition,\r\n\r\n    visibility: Visibility,\r\n    identifier: string,\r\n\r\n    attributes: AttributeDeclarationNode[],\r\n    methods: MethodDeclarationNode[],\r\n\r\n    values: EnumValueNode[],\r\n\r\n    resolvedType?: Enum,\r\n    commentBefore: Token\r\n\r\n}\r\n\r\nexport type MethodDeclarationNode = {\r\n    type: TokenType.methodDeclaration,\r\n    position: TextPosition,\r\n\r\n    scopeFrom: TextPosition,\r\n    scopeTo: TextPosition,\r\n\r\n    identifier: string,\r\n    returnType: TypeNode,\r\n    parameters: ParameterNode[],\r\n\r\n    statements: ASTNode[],\r\n\r\n    isStatic: boolean,\r\n    isAbstract: boolean,\r\n    visibility: Visibility,\r\n    isConstructor: boolean,\r\n    isTransient: boolean,\r\n\r\n    resolvedType?: Method,\r\n    annotation?: string,\r\n    commentBefore: Token\r\n}\r\n\r\nexport type AttributeDeclarationNode = {\r\n    type: TokenType.attributeDeclaration,\r\n    position: TextPosition,\r\n\r\n    attributeType: TypeNode,\r\n    identifier: string,\r\n    initialization: TermNode,\r\n    isStatic: boolean,\r\n    isFinal: boolean,\r\n    visibility: Visibility,\r\n    isTransient: boolean,\r\n    commentBefore: Token,\r\n\r\n    resolvedType?: Attribute\r\n    annotation?: string\r\n}\r\n\r\n/** Term nodes */\r\n\r\n    export type NewObjectNode = {\r\n        type: TokenType.newObject,\r\n        position: TextPosition,\r\n        rightBracketPosition: TextPosition,\r\n\r\n        classType: TypeNode,\r\n        constructorOperands: TermNode[],\r\n        commaPositions: TextPosition[]\r\n    }\r\n\r\n    export type SelectArributeNode = {\r\n        type: TokenType.pushAttribute,\r\n        position: TextPosition,\r\n\r\n        identifier: string,\r\n        object: TermNode\r\n    }\r\n\r\n    export type SuperconstructorCallNode = {\r\n        type: TokenType.superConstructorCall,\r\n        position: TextPosition,\r\n        rightBracketPosition: TextPosition,\r\n    \r\n        operands: TermNode[],\r\n        commaPositions: TextPosition[]\r\n    }\r\n    \r\n    export type ConstructorCallNode = {\r\n        type: TokenType.constructorCall,\r\n        position: TextPosition,\r\n        rightBracketPosition: TextPosition,\r\n    \r\n        operands: TermNode[],\r\n        commaPositions: TextPosition[]\r\n    }\r\n    \r\n    export type ThisNode = {\r\n        type: TokenType.keywordThis,\r\n        position: TextPosition,\r\n    }\r\n    \r\n    export type SuperNode = {\r\n        type: TokenType.keywordSuper,\r\n        position: TextPosition,\r\n    }    \r\n\r\nexport type SelectArrayElementNode = {\r\n    type: TokenType.selectArrayElement,\r\n    position: TextPosition,\r\n\r\n    index: TermNode,\r\n    object: TermNode\r\n}\r\n\r\nexport type IdentifierNode = {\r\n    type: TokenType.identifier,\r\n    position: TextPosition,\r\n\r\n    identifier: string,\r\n    variable?: Variable  // CodeGenerator stores found local variables in node to identify variable use before initialization\r\n    attribute?: Attribute\r\n}\r\n\r\nexport type ConstantNode = {\r\n    type: TokenType.pushConstant,\r\n    position: TextPosition,\r\n\r\n    constantType: TokenType,\r\n    constant: any\r\n}\r\n\r\nexport type MethodcallNode = {\r\n    type: TokenType.callMethod,\r\n    position: TextPosition,\r\n    rightBracketPosition: TextPosition,\r\n\r\n    identifier: string,\r\n    object: TermNode,\r\n    operands: TermNode[],\r\n    commaPositions: TextPosition[]\r\n}\r\n\r\nexport type IncrementDecrementNode = {\r\n    type: TokenType.incrementDecrementBefore | TokenType.incrementDecrementAfter,\r\n    position: TextPosition,\r\n    operator: TokenType, // ++ or --\r\n    operand: TermNode\r\n}\r\n\r\nexport type UnaryOpNode = {\r\n    type: TokenType.unaryOp,\r\n    position: TextPosition,\r\n\r\n    operator: TokenType,\r\n    operand: TermNode\r\n}\r\n\r\nexport type BinaryOpNode = {\r\n    type: TokenType.binaryOp,\r\n    position: TextPosition,\r\n\r\n    operator: TokenType,\r\n    firstOperand: TermNode,\r\n    secondOperand: TermNode\r\n}\r\n\r\n// e.g. int[][]\r\nexport type TypeNode = {\r\n    type: TokenType.type,\r\n    position: TextPosition,\r\n\r\n    identifier: string,\r\n\r\n    arrayDimension: number, \r\n    genericParameterTypes?: TypeNode[], // null if not present\r\n    genericParameterTypesResolved?: boolean, // undefined == false\r\n\r\n\r\n    resolvedType?: Type\r\n}\r\n\r\nexport type LocalVariableDeclarationNode = {\r\n    type: TokenType.localVariableDeclaration,\r\n    position: TextPosition,\r\n\r\n    variableType: TypeNode,\r\n    identifier: string,\r\n    initialization: TermNode,\r\n    isFinal: boolean\r\n}\r\n\r\nexport type NewArrayNode = {\r\n    type: TokenType.newArray,\r\n    position: TextPosition,\r\n\r\n    arrayType: TypeNode,\r\n    elementCount: TermNode[], \r\n    initialization: ArrayInitializationNode\r\n}\r\n\r\nexport type CastManuallyNode = {\r\n    type: TokenType.castValue,\r\n    position: TextPosition,\r\n\r\n    castToType: TypeNode,\r\n    whatToCast: TermNode\r\n}\r\n\r\nexport type BracketsNode = {\r\n    type: TokenType.rightBracket,\r\n    position: TextPosition, // position after right Bracket\r\n    termInsideBrackets: TermNode\r\n\r\n}\r\n\r\nexport type ArrayInitializationNode = {\r\n    type: TokenType.arrayInitialization,\r\n    position: TextPosition,\r\n    arrayType: TypeNode,\r\n\r\n    dimension: number,\r\n    nodes: TermNode[], \r\n}\r\n\r\n"]}