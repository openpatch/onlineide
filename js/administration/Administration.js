import { SchoolsWithAdminsMI } from "./SchoolsWithAdminsMI.js";
import { ajax } from "../communication/AjaxHelper.js";
import { TeachersWithClassesMI } from "./TeachersWithClasses.js";
import { ClassesWithStudentsMI } from "./ClassesWithStudentsMI.js";
import { StudentBulkImportMI } from "./StudentBulkImortMI.js";
import { ExportImportMI } from "./ExportImportMI.js";
export class Administration {
    constructor() {
        this.menuItems = [
            new SchoolsWithAdminsMI(this),
            new TeachersWithClassesMI(this),
            new ClassesWithStudentsMI(this),
            new StudentBulkImportMI(this),
            new ExportImportMI(this)
        ];
    }
    start() {
        let that = this;
        //@ts-ignore
        w2utils.locale('de-de');
        ajax("getUserData", {}, (response) => {
            that.userData = response.user;
            that.classes = response.classdata;
            this.initMenu();
            jQuery('#schoolName').text(response.schoolName);
        }, (message) => {
            alert(message);
        });
    }
    initMenu() {
        for (let mi of this.menuItems) {
            if (mi.checkPermission(this.userData)) {
                let $button = jQuery('<div class="jo_menuitem">' + mi.getButtonIdentifier() + '</div>');
                jQuery('#menuitems').append($button);
                $button.on('click', () => {
                    jQuery('#main-heading').empty();
                    jQuery('#main-table-left').empty().css("flex-grow", "1");
                    jQuery('#main-table-right').empty().css("flex-grow", "1");
                    this.removeGrid(jQuery('#main-table-left'));
                    this.removeGrid(jQuery('#main-table-right'));
                    jQuery('#main-footer').empty();
                    mi.onMenuButtonPressed(jQuery('#main-heading'), jQuery('#main-table-left'), jQuery('#main-table-right'), jQuery('#main-footer'));
                    jQuery('#menuitems .jo_menuitem').removeClass('jo_active');
                    $button.addClass('jo_active');
                });
            }
        }
        jQuery('#menuitems .jo_menuitem').first().click();
    }
    removeGrid($element) {
        $element.removeClass('w2ui-reset w2ui-grid w2ui-ss');
        $element.css('flex', '');
    }
}
jQuery(() => {
    new Administration().start();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWRtaW5pc3RyYXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY2xpZW50L2FkbWluaXN0cmF0aW9uL0FkbWluaXN0cmF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUV0RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNqRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFckQsTUFBTSxPQUFPLGNBQWM7SUFBM0I7UUFFSSxjQUFTLEdBQW9CO1lBQ3pCLElBQUksbUJBQW1CLENBQUMsSUFBSSxDQUFDO1lBQzdCLElBQUkscUJBQXFCLENBQUMsSUFBSSxDQUFDO1lBQy9CLElBQUkscUJBQXFCLENBQUMsSUFBSSxDQUFDO1lBQy9CLElBQUksbUJBQW1CLENBQUMsSUFBSSxDQUFDO1lBQzdCLElBQUksY0FBYyxDQUFDLElBQUksQ0FBQztTQUMzQixDQUFBO0lBc0RMLENBQUM7SUFqREcsS0FBSztRQUNELElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixZQUFZO1FBQ1osT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUV4QixJQUFJLENBQUMsYUFBYSxFQUFFLEVBQUUsRUFBRSxDQUFDLFFBQTZCLEVBQUUsRUFBRTtZQUN0RCxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUM7WUFDOUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDO1lBQ2xDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNoQixNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNwRCxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNYLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNuQixDQUFDLENBQUMsQ0FBQztJQUVQLENBQUM7SUFFRCxRQUFRO1FBRUosS0FBSyxJQUFJLEVBQUUsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQzNCLElBQUksRUFBRSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUU7Z0JBQ25DLElBQUksT0FBTyxHQUFHLE1BQU0sQ0FBQywyQkFBMkIsR0FBRyxFQUFFLENBQUMsbUJBQW1CLEVBQUUsR0FBRyxRQUFRLENBQUMsQ0FBQztnQkFDeEYsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDckMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFO29CQUVyQixNQUFNLENBQUMsZUFBZSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7b0JBQ2hDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUM7b0JBQ3pELE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUM7b0JBQzFELElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQztvQkFDNUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO29CQUM3QyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7b0JBRS9CLEVBQUUsQ0FBQyxtQkFBbUIsQ0FDbEIsTUFBTSxDQUFDLGVBQWUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxFQUNoRixNQUFNLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztvQkFFNUIsTUFBTSxDQUFDLHlCQUF5QixDQUFDLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO29CQUMzRCxPQUFPLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2dCQUNsQyxDQUFDLENBQUMsQ0FBQzthQUNOO1NBQ0o7UUFFRCxNQUFNLENBQUMseUJBQXlCLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN0RCxDQUFDO0lBRUQsVUFBVSxDQUFDLFFBQTZCO1FBQ3BDLFFBQVEsQ0FBQyxXQUFXLENBQUMsOEJBQThCLENBQUMsQ0FBQztRQUNyRCxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUM3QixDQUFDO0NBRUo7QUFFRCxNQUFNLENBQUMsR0FBRyxFQUFFO0lBQ1IsSUFBSSxjQUFjLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUNqQyxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFkbWluTWVudUl0ZW0gfSBmcm9tIFwiLi9BZG1pbk1lbnVJdGVtLmpzXCI7XHJcbmltcG9ydCB7IFNjaG9vbHNXaXRoQWRtaW5zTUkgfSBmcm9tIFwiLi9TY2hvb2xzV2l0aEFkbWluc01JLmpzXCI7XHJcbmltcG9ydCB7IGFqYXggfSBmcm9tIFwiLi4vY29tbXVuaWNhdGlvbi9BamF4SGVscGVyLmpzXCI7XHJcbmltcG9ydCB7IEdldFVzZXJEYXRhUmVzcG9uc2UsIFVzZXJEYXRhLCBDbGFzc0RhdGEgfSBmcm9tIFwiLi4vY29tbXVuaWNhdGlvbi9EYXRhLmpzXCI7XHJcbmltcG9ydCB7IFRlYWNoZXJzV2l0aENsYXNzZXNNSSB9IGZyb20gXCIuL1RlYWNoZXJzV2l0aENsYXNzZXMuanNcIjtcclxuaW1wb3J0IHsgQ2xhc3Nlc1dpdGhTdHVkZW50c01JIH0gZnJvbSBcIi4vQ2xhc3Nlc1dpdGhTdHVkZW50c01JLmpzXCI7XHJcbmltcG9ydCB7IFN0dWRlbnRCdWxrSW1wb3J0TUkgfSBmcm9tIFwiLi9TdHVkZW50QnVsa0ltb3J0TUkuanNcIjtcclxuaW1wb3J0IHsgRXhwb3J0SW1wb3J0TUkgfSBmcm9tIFwiLi9FeHBvcnRJbXBvcnRNSS5qc1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEFkbWluaXN0cmF0aW9uIHtcclxuXHJcbiAgICBtZW51SXRlbXM6IEFkbWluTWVudUl0ZW1bXSA9IFtcclxuICAgICAgICBuZXcgU2Nob29sc1dpdGhBZG1pbnNNSSh0aGlzKSxcclxuICAgICAgICBuZXcgVGVhY2hlcnNXaXRoQ2xhc3Nlc01JKHRoaXMpLFxyXG4gICAgICAgIG5ldyBDbGFzc2VzV2l0aFN0dWRlbnRzTUkodGhpcyksXHJcbiAgICAgICAgbmV3IFN0dWRlbnRCdWxrSW1wb3J0TUkodGhpcyksXHJcbiAgICAgICAgbmV3IEV4cG9ydEltcG9ydE1JKHRoaXMpXHJcbiAgICBdXHJcblxyXG4gICAgdXNlckRhdGE6IFVzZXJEYXRhO1xyXG4gICAgY2xhc3NlczogQ2xhc3NEYXRhW107XHJcblxyXG4gICAgc3RhcnQoKSB7XHJcbiAgICAgICAgbGV0IHRoYXQgPSB0aGlzO1xyXG4gICAgICAgIC8vQHRzLWlnbm9yZVxyXG4gICAgICAgIHcydXRpbHMubG9jYWxlKCdkZS1kZScpO1xyXG5cclxuICAgICAgICBhamF4KFwiZ2V0VXNlckRhdGFcIiwge30sIChyZXNwb25zZTogR2V0VXNlckRhdGFSZXNwb25zZSkgPT4ge1xyXG4gICAgICAgICAgICB0aGF0LnVzZXJEYXRhID0gcmVzcG9uc2UudXNlcjtcclxuICAgICAgICAgICAgdGhhdC5jbGFzc2VzID0gcmVzcG9uc2UuY2xhc3NkYXRhO1xyXG4gICAgICAgICAgICB0aGlzLmluaXRNZW51KCk7XHJcbiAgICAgICAgICAgIGpRdWVyeSgnI3NjaG9vbE5hbWUnKS50ZXh0KHJlc3BvbnNlLnNjaG9vbE5hbWUpO1xyXG4gICAgICAgIH0sIChtZXNzYWdlKSA9PiB7XHJcbiAgICAgICAgICAgIGFsZXJ0KG1lc3NhZ2UpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBpbml0TWVudSgpIHtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgbWkgb2YgdGhpcy5tZW51SXRlbXMpIHtcclxuICAgICAgICAgICAgaWYgKG1pLmNoZWNrUGVybWlzc2lvbih0aGlzLnVzZXJEYXRhKSkge1xyXG4gICAgICAgICAgICAgICAgbGV0ICRidXR0b24gPSBqUXVlcnkoJzxkaXYgY2xhc3M9XCJqb19tZW51aXRlbVwiPicgKyBtaS5nZXRCdXR0b25JZGVudGlmaWVyKCkgKyAnPC9kaXY+Jyk7XHJcbiAgICAgICAgICAgICAgICBqUXVlcnkoJyNtZW51aXRlbXMnKS5hcHBlbmQoJGJ1dHRvbik7XHJcbiAgICAgICAgICAgICAgICAkYnV0dG9uLm9uKCdjbGljaycsICgpID0+IHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KCcjbWFpbi1oZWFkaW5nJykuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICBqUXVlcnkoJyNtYWluLXRhYmxlLWxlZnQnKS5lbXB0eSgpLmNzcyhcImZsZXgtZ3Jvd1wiLCBcIjFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KCcjbWFpbi10YWJsZS1yaWdodCcpLmVtcHR5KCkuY3NzKFwiZmxleC1ncm93XCIsIFwiMVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUdyaWQoalF1ZXJ5KCcjbWFpbi10YWJsZS1sZWZ0JykpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlR3JpZChqUXVlcnkoJyNtYWluLXRhYmxlLXJpZ2h0JykpO1xyXG4gICAgICAgICAgICAgICAgICAgIGpRdWVyeSgnI21haW4tZm9vdGVyJykuZW1wdHkoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgbWkub25NZW51QnV0dG9uUHJlc3NlZChcclxuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KCcjbWFpbi1oZWFkaW5nJyksIGpRdWVyeSgnI21haW4tdGFibGUtbGVmdCcpLCBqUXVlcnkoJyNtYWluLXRhYmxlLXJpZ2h0JyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSgnI21haW4tZm9vdGVyJykpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBqUXVlcnkoJyNtZW51aXRlbXMgLmpvX21lbnVpdGVtJykucmVtb3ZlQ2xhc3MoJ2pvX2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICRidXR0b24uYWRkQ2xhc3MoJ2pvX2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGpRdWVyeSgnI21lbnVpdGVtcyAuam9fbWVudWl0ZW0nKS5maXJzdCgpLmNsaWNrKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlR3JpZCgkZWxlbWVudDogSlF1ZXJ5PEhUTUxFbGVtZW50Pil7XHJcbiAgICAgICAgJGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ3cydWktcmVzZXQgdzJ1aS1ncmlkIHcydWktc3MnKTtcclxuICAgICAgICAkZWxlbWVudC5jc3MoJ2ZsZXgnLCAnJyk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5qUXVlcnkoKCkgPT4ge1xyXG4gICAgbmV3IEFkbWluaXN0cmF0aW9uKCkuc3RhcnQoKTtcclxufSk7Il19