import { makeDiv, getSelectedObject, setSelectItems } from "../../tools/HtmlTools.js";
export class RepositoryCreateManager {
    constructor(main) {
        this.main = main;
        this.guiReady = false;
        this.publishedToItems = [];
    }
    initGUI() {
        this.guiReady = true;
        let that = this;
        let $updateDiv = jQuery('#createRepo-div');
        $updateDiv.append(this.$mainHeading = makeDiv('', "createUpdateRepo-mainHeading"));
        $updateDiv.append(this.$settingsDiv = makeDiv('', "createUpdateRepo-settingsDiv"));
        this.$settingsDiv.append(jQuery('<div class="createUpdateRepo-settingsLabel">Name des Repositorys:</div>'));
        this.$settingsDiv.append(this.$repoName = jQuery('<input type="text" class="createUpdateRepo-inputcolumn"></input>'));
        this.$settingsDiv.append(jQuery('<div class="createUpdateRepo-settingsLabel">Beschreibung:</div>'));
        this.$settingsDiv.append(this.$repoDescription = jQuery('<textarea class="createUpdateRepo-inputcolumn" style="min-height: 4em"></textarea>'));
        this.$settingsDiv.append(jQuery('<div class="createUpdateRepo-settingsLabel">Veröffentlicht für:</div>'));
        this.$settingsDiv.append(this.$repoPublishedTo = jQuery('<select class="createUpdateRepo-inputcolumn"></select>'));
        let $buttonDiv = makeDiv("createRepo-buttonDiv");
        $buttonDiv.append(this.$createButton = makeDiv("", "jo_synchro_button", "Repository erstellen", { "background-color": "var(--createButtonBackground)", "color": "var(--createButtonColor)" }));
        this.$createButton.on("click", () => { that.createButtonClicked(); });
        $buttonDiv.append(this.$cancelButton = makeDiv("", "jo_synchro_button", "Abbrechen", { "background-color": "var(--cancelButtonBackground)", "color": "var(--cancelButtonColor)" }));
        this.$cancelButton.on("click", () => { that.cancelButtonClicked(); });
        $updateDiv.append($buttonDiv);
    }
    show(workspace) {
        this.workspace = workspace;
        if (!this.guiReady) {
            this.initGUI();
        }
        let user = this.main.user;
        let isStudent = !(user.is_admin || user.is_schooladmin || user.is_teacher);
        this.publishedToItems =
            [
                { value: "0", object: 0, caption: "Keine Veröffentlichung (privates Repository)" },
                { value: "1", object: 1, caption: isStudent ? "Veröffentlicht für alle Schüler/innen der Klasse" : "Veröffentlicht für alle Schüler/innen der unterrichteten Klassen" },
                { value: "2", object: 2, caption: "Veröffentlicht für alle Schüler/innen der Schule" },
            ];
        setSelectItems(this.$repoPublishedTo, this.publishedToItems, "0");
        let $synchroDiv = jQuery('#createRepo-div');
        $synchroDiv.css('visibility', 'visible');
        let $mainDiv = jQuery('#main');
        $mainDiv.css('visibility', 'hidden');
        this.initCreateMode(workspace);
        let that = this;
        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {
            that.hide();
        });
    }
    initCreateMode(workspace) {
        let user = this.main.user;
        let userInfo = {
            firstName: user.rufname,
            lastName: user.familienname,
            username: user.username,
            user_id: user.id,
            canWrite: true,
            klasse: ""
        };
        this.$mainHeading.text(`Repository anlegen und mit Workspace "${workspace.name}" verknüpfen:`);
        this.$createButton.show();
        this.$repoName.val(workspace.name);
    }
    hide() {
        let $synchroDiv = jQuery('#createRepo-div');
        $synchroDiv.css('visibility', 'hidden');
        let $mainDiv = jQuery('#main');
        $mainDiv.css('visibility', 'visible');
    }
    createButtonClicked() {
        let publishedTo = getSelectedObject(this.$repoPublishedTo);
        let repoName = this.$repoName.val();
        let repoDescription = this.$repoDescription.val();
        this.main.networkManager.sendCreateRepository(this.workspace, publishedTo, repoName, repoDescription, (error, repository_id) => {
            if (error == null) {
                let projectExplorer = this.main.projectExplorer;
                let element = projectExplorer.workspaceListPanel.findElement(this.workspace);
                projectExplorer.workspaceListPanel.setElementClass(element, "repository");
                this.workspace.renderSynchronizeButton(element);
                projectExplorer.showRepositoryButtonIfNeeded(this.workspace);
                window.history.back(); // close modal window
            }
            else {
                alert(error);
            }
        });
    }
    cancelButtonClicked() {
        window.history.back(); // close modal window
    }
}
//# sourceMappingURL=data:application/json;base64,