{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/compiler/lexer/ColorLexer.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../src/client/tools/ConvexHull.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/compiler/types/TypeHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/tools/GamepadTool.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../src/client/runtimelibrary/Gamepad.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../../../src/client/runtimelibrary/Random.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../../../../src/client/compiler/parser/Patcher.ts","webpack:///../../../../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../../src/client/runtimelibrary/graphics/3d/Boxes3d.ts","webpack:///../../../../../src/client/runtimelibrary/graphics/3d/RobotCubeFactory.ts","webpack:///../../../../../src/client/runtimelibrary/graphics/3d/Robot.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceImporter.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/MyColorProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/workspace/InconsistencyFixer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/repository/synchronize/SynchroWorkspace.ts","webpack:///../../../../src/client/repository/synchronize/HistoryElement.ts","webpack:///../../../../src/client/repository/synchronize/SynchronizationListElement.ts","webpack:///../../../../src/client/repository/synchronize/RepositorySynchronizationManager.ts","webpack:///../../../../src/client/repository/synchronize/RepositoryTool.ts","webpack:///../../../../src/client/repository/update/RepositoryCreateManager.ts","webpack:///../../../../src/client/repository/update/RepositorySettingsManager.ts","webpack:///../../../../src/client/repository/update/RepositoryCheckoutManager.ts","webpack:///../../../src/client/main/IDEStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PerformanceCollector","url","startTime","pe","performanceData","find","count","sumTime","push","dt","Math","round","performance","now","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","type","async","JSON","stringify","contentType","success","response","registerPerformanceEntry","error","message","jqXHR","statusText","status","busy","jQuery","show","hide","main","networkManager","unsentMessages","this","connect","state","window","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","command","token","sendIntern","setTimeout","forcedUpdateEvery","counterTillForcedUpdate","send","exception","console","log","parse","undefined","sendUpdates","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","that","attr","interval","clearInterval","setInterval","user","doForceUpdate","$rect","css","sendDataToServer","notifierClient","callback","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","dirty","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","id","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","length","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","publish_to","repoName","repoDescription","description","forEach","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","wd","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","indexOf","model","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","join","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","split","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","m1","match","Number","parseInt","red","green","blue","alpha","m2","parseFloat","m3","ColorHelper","color","toString","predefinedColors","substr","Visibility","booleanPrimitiveTypeCopy","colorLexer","spaceTokens","correspondingBracket","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","charAt","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","range","startLineNumber","position","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","foundToken","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","pushError","parseStringLiteralEscapeCharacter","getColorInfo","StringLines","restOfLine","trim","currentStringLine","lastLine","indent","map","hex","String","fromCodePoint","lastCharWasNewline","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","pow","isSpace","Type","onlyFirstPass","usagePositions","documentation","PrimitiveType","initialValue","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","super","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","parameters","hasGenericTypes","canCastTo","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","tv","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","insertPosition","insertedLength","ln","switchStatement","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","newNode","ntr","noOp","jn","dest","destination","sw","dl","destinationLabels","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","i1","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","cd","getCompositeData","interf","cdMap","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","attribute","getAttributes","kind","monaco","languages","CompletionItemKind","Field","insertText","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","programStack","programPosition","textPosition","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","Klass","upToVisibility","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","a1","hasConstructor","hasConstructorWithParameters","hasParameterlessConstructor","getParameterlessConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","min","shouldImplement","dontInheritFrom","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","detail","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if1","if2","newInterface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","nonGenericCastable","type2","type1","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","stringClass","getResultType","doublePrimitiveType","booleanPrimitiveType","intPrimitiveType","declaration","charPrimitiveType","localeCompare","caseFirst","sensitivity","toLowerCase","endsWith","toLocaleLowerCase","toLocaleUpperCase","lastIndexOf","pattern","regExp","RegExp","strings","values","compute","voidPrimitiveType","floatPrimitiveType","negation","automatic","needsStatement","fromCharCode","trunc","InterpreterState","convexhull","varType","IntegerType","unboxableAs","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","v0","v1","FloatType","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","isNaN","Infinity","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","lengthAttribute","equals","referenceElement","array","destType","castTo","s1","parentSymbolTable","positionFrom","positionTo","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","vi","valueIdentifier","enumInfo","enumObject","initStackFrameNodes","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","classNode1","mainMethod","classNode","classDefinitionsAST","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","return","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","annotation","getMethodBySignature","cie","signatureMap","cieType","editsProvider","uri","resource","edit","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","getSuperconstructorCalls","checkIfMethodIsVirtual","getParameterList","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","mo","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","splice","statement","deleteStepFinishedFlagOnStepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","empty","dimension","ec","elementCount","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","correctPositionsAfterInsert","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","booleanOperators","betterOperators","opIndex","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","token1","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","getSemicolonAngel","register","nextToken","op","operatorPrecedence","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","right","opData","wrong","correctOp","position2","constantFolding","isConstant","pcLeft","pcRight","result","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","primitiveTypes","objectToIndexMap","nextIndex","json","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","setBaseClass","impl","identifierModuleMap","otherModule","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","e","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","listHelper","IteratorHelper","typeE","tvE","iteratorInterface","hasNext","remove","nextPos","objectArray","throwException","valueArray","collectionInterface","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","addAll","clear","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","getIteratorMethod","iteratorWithError","execute","iterator","nextMethod","hasNextMethod","iteratorAsValue","objWithError","isInteger","executeImmediatelyInNewStackframe","iterableInterface","vectorType","peek","MapHelper","SetIteratorHelper","addToSet","delete","setInterface","mh","adAll","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","getBottomDiv","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","$outputDiv","lastPrinting","doPrinting","scrollTop","scrollHeight","$programEndDiv","addClass","removeClass","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","$line","tList","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","targetElement","direction","$helper","top","bottom","to","b","width","height","html","$button","stopPropagation","close","fadeIn","fadeOut","mainBase","$element","helperHistory","flag","controlButtons","speedControl","$grip","$buttonStepOver","bottomDiv","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","shiftKey","ctrlKey","altKey","kpc","isEmbedded","running","getMonacoEditor","hasTextFocus","preventDefault","GamepadTool","gamepads","addEventListener","gamepad","buttons","axes","gamepadIndex","buttonIndex","gp","getGamepads","button","pressed","axisIndex","debugger_","moduleStoreVersion","stepsPerSecond","maxStepsPerSecond","timerDelayMs","stack","stackframes","timerStopped","timerExtern","steps","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","actions","buttonActiveMatrix","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","paused","waitingForInput","keyboardTool","gamepadTool","debugger","setInterpreter","timerId","timerFunction","req","am","getActionManager","startFunction","start","pauseFunction","registerAction","isActive","$buttonStart","$buttonPause","stop","$buttonStop","oneStep","$buttonStepInto","stepOut","$buttonStepOut","$buttonRestart","setState","not_initialized","cem","getCurrentlyEditedModule","currentlyEditedModuleIsClassOnly","currentlyEditedModule","findModuleByFile","hasErrors","isStartable","mainModule","lastMainModule","getBreakpointPositionsFromEditor","clearExceptions","getCompiler","atLeastOneModuleIsStartable","copyExecutableModuleStoreToInterpreter","detachValues","newMainModule","getStartableModule","currentProgramPosition","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","pauseUntil","init","resetRuntime","hideProgrampointerPosition","getTimerClass","startTimer","getCurrentWorkspace","getModule","forceRun","maxWorkloadFactor","t0","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","showProgramPointerAndVariables","comesStatement","$errorDiv","consolePresent","config","withBottomPanel","withConsole","positionString","currentStatement","showError","pushCurrentProgram","errorLine","writeConsoleEntry","showTab","hideProgramPointerPosition","worldHelper","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","stopTimer","cacheAsBitmap","showProgramPointerPosition","showData","programPrinter","printModuleToBottomDiv","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","stackTop","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showHelper","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","duration","closeAllWebsockets","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","socket","stackElements","isActor","stacksizeBefore","oldInterpreterState","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","constructor","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","groupType","shapeType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","x","y","wh","matrix","PIXI","Matrix","copyFrom","stage","projectionTransform","identity","translate","prepend","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","move","frameWidth","xMin","xMax","yMin","yMax","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angle","angleRad","PI","rotate","factor","scale","initialWidth","initialHeight","group","defaultGroup","listener","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","WorldContainer","Container","sourceFrame","destinationFrame","renderer","projection","projectionMatrix","transform","renderTexture","current","render","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$rightDiv","$jo_tabs","parents","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","backgroundColor","Application","antialias","tickerFunction","delta","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","PointerEvent","offsetX","offsetY","Point","applyInverse","onMouseEvent","types","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","mousePointer","p1","p2","abs","setHitPolygonDirty","spriteHelper","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","hasRobot","robotWorldHelper","scaleMin","sqrt","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","children","removeChildren","sprite","Sprite","localTransform","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","listenerTypes","sd","methodSignatures","actorListIdentifier","ms","isKeyDown","isGamepadButtonPressed","isGamepadConnected","getGamepadAxisValue","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p3","schnittpunkt","a2","b1","b2","c1","c2","det","schneidet","abstand","dx","dy","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","x1","y1","x2","y2","determiante","t1","t2","abstandPunktZuStrecke","q","lambda","fx","fy","s2","abstandPunktZuGerade","polygonBerührtPolygonExakt","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","directionType","vector2Class","helper","sh","testdestroyed","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","updateTransform","container","highestIndex","getChildIndex","setChildIndex","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","max","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","worldTransform","apply","tx","ty","bounds","cos","sin","cX","cY","scaleX","scaleY","belongsToGroup","index1","groupHelper","collidingShapes","ro","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","Uint8Array","buffer","initGraphics","addToDefaultGroupAndSetDefaultVisibility","bh","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","baseTexture","update","intColorToHexRGB","ch","uploadData","g","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setDefaultBorder","setDefaultFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","startAngle","endAngle","drawRadii","ceil","startAngleRad","endAngleRad","moveTo","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ri","ra","beginHole","endHole","r2","colorName","intColor","intColorToRGB","z","cid","o1","h","hslToRgb","rx","ry","setRadiusX","setRadiusY","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","doCache","groupHelperCopy","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shape1","shapeHelper1","shape2","shapeHelper2","shapeToAdd","child","makeHull","points","newPoints","sort","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","shapeClass","closeAndFill","pointsNumber","ph","extractPoints","addPoint","setPoints","insertPoint","movePointTo","isClosed","points1","coordinates","radius","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","SoundTools","praefix","javaOnlineDir","isInitialized","sound","sounds","player","Howl","src","preload","soundMap","play","polygon","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","end","isTransparent","scaleModeClass","spriteLibraryEntry","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","tilePosition","dob","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","tileScale","SpriteLibrary","sle","fontsize","fontFamily","setFontsize","alignment","setAlignment","setText","isBold","isItalic","setStyle","textStyle","TextStyle","fontSize","fontStyle","fontWeight","stroke","strokeThickness","dropShadow","wordWrap","align","lineJoin","Text","anchor","style","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","vectorArrayClass","xIndex","yIndex","returnArray","pVector","ps","deltaTimeMillis","printStream","Date","speed","setSpeedInStepsPerSecond","getSpeedInStepsPerSecond","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","date","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","getTime","oldMs","newMs","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","td","dow","getDay","monthIndex","setPoint","alphaDeg","oRet","messageType","setUserData","getUserData","getterList","help","WebSocketClientHelper","webSocketHelper","rufname","familienname","username","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","client","idToClientMap","isOpen","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","$div","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","farbe","getHelper","registerEvents","dauer","taktdauer","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","onKeyDownMethod","invokeMethod","keyCode","unshift","liste","aktionsempfaengerType","aktionsempfaenger","unregisterEvents","GNGFarben","moveAnchor","grad","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","setAllPointsUntransformed","größe","länge","touchesAtLeastOneFigure","farbeString","touchesColor","objectShapeHelper","touchesShape","polygonClass","circleClass","ellipseClass","rectangleClass","center","drawInitialTriangle","groesse","newFactor","part","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","bound","from","Patcher","modified","patch","patches","new","patchedText","keys","code","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","options","edits","format","Promise","resolve","e1","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","numberOfSpaces","Boxes3d","material","Pixi3d","StandardMaterial","Mesh3D","createCube3dMesh","MeshGeometry3D","positions","Float32Array","normals","uvs","tangents","createHalfheightCube3dMesh","repeatTextureU","repeatTextureV","createPlane3dMesh","getSpritesheetTexture","copy","wrapMode","WRAP_MODES","REPEAT","StandardMaterialTexture","smt","TextureTransform","frame","RobotMarker","geometry","RobotBrick","camera","farben","farbeToColorInfoMap","farbeToMarkerMaterialMap","farbeToBrickMaterialMap","planeMaterial","light1","Light","LightType","ambient","intensity","light2","directional","rotationQuaternion","setEulerAngles","lightingEnvironment","LightingEnvironment","lights","grassBrickMaterial","initMaterial","baseColorTexture","cloudMaterial","baseColor","groundPlaneMaterial","colorInfo","brickMaterial","mesh","widthX","widthZ","spriteOrColor","getPlaneMaterial","marker","worldX","worldY","sideSprite","deep","planes","sideMaterial","mesh1","mesh2","mesh3","mesh4","topSprite","topMaterial","mesh5","mesh6","mesh7","mesh8","originX","originZ","z1","createCube3d","scaleZ","dz","exposure","roughness","spriteKey","textureKey","alphaMode","StandardMaterialAlphaMode","mask","createPlane3d","robotWorldType","startX","startY","initialeWelt","turnRight","adjustAngle","turnLeft","schritt","anzahl","hinlegen","markeLöschen","markeSetzen","aufheben","istWand","istZiegel","istMarke","himmelsrichtungen","hr","hatSteine","maxSteine","maximumHeight","addBrick","setMarker","markers","bricks","robots","fetchWorld","Camera","robotCubeFactory","container3D","Container3D","initFromString","initWorldArrays","renderOrnamentsAndInitCamera","robot","getBrickCount","markerColumn","brickColumn","getGrassPlane","getSidePlanes","makeClouds","makePlane","northSprite","makeSprite3d","control","CameraOrbitControl","angles","target","oldHeight","brick","getBrick","setToXY","adjustMarkerHeight","adjustRobotPositions","getMarker","brickList","initString","lowerCaseCharToColor","upperCaseCharToColor","digits","rows","maxColumns","row","rowLength","brickColor","markerColor","Direction","names","deltas","fetchRobotWorld","Model","gltf","meshes","sm","rw","crop","getNumberOfBricks","getAngle","getDeltas","newX","newY","newHeight","gibtFarbe","removeBrick","removeMarker","param","hasBrickColor","marke","oldErrorDecorations","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","methodCallPositions","uriCounter","uriMap","Uri","scheme","createModel","updateOptions","tabSize","bracketColorizationOptions","enabled","formatter","applyEdits","onDidChangeContent","versionId","main1","text_before_revision","student_edited_after_revision","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","methodAST","lineNumber","patched","f1","submitted_date","forceUpdate","file_type","possibleMethods","lines","cp","mcpList","rerender","getBreakpoint","setBreakpoint","renderBreakpointDecorators","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","decorations","isWholeLine","overviewRuler","OverviewRulerLane","Left","minimap","MinimapPosition","Inline","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","deltaDecorations","decoration","getModel","getAllDecorations","el","positionsOnLine","foundPosition","bestFoundPosition","dependsOnModulesWithErrors","programs","TypeStore","e2","errorLevelCompare","level1","level2","$buttonDiv","$htmlFirstLine","$startButtonDiv","setModuleActive","maxUriNumber","registerWorldType","withBaseModule","additionalLibraries","moduleMap","lib","addLibraryModule","module_id","includeSystemModules","excludedModuleName","moduleName","moduleContext","item","Struct","Class","generic","typeMap","caption","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","onFirstOpening","toggleClass","renderValue","renderListElements","de","$childContainer","removeAllChildren","escapeHtml","unsafe","twoDez","formatAsJavadocComment","indentString","stringWrap","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","setSelectionRange","after","newValue","openContextMenu","items","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","document","$link","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","trigger","convertPxToNumber","pxString","makeDiv","div","setSelectItems","$selectElement","activeItemValue","selected","getSelectedObject","$selectDiv","selectedValue","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","copyTextToClipboard","clipboard","writeText","then","err","textArea","body","appendChild","select","execCommand","removeChild","fallbackCopyTextToClipboard","lexer","parser","getImitation","lexed","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","expression","pmEntry","compilation","compile","getDebugger","lastSymboltable","evaluate","evaluator","toExportedModule","withFiles","currentFileId","currentlyOpenModule","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","myMain","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","libaries","restoreFromData","Dialog","$dialog","$dialogMain","placeholder","$buttonRow","$message","ischecked","$checkbox","$description","prop","is","dialog","heading","pathDescription","$fileInputButton","addDiv","exportedWorkspaces","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","dataTransfer","dropEffect","waitMessage","firstWorkspace","wse","alterAdditionalLibraries","sendCreateWorkspace","sendCreateFile","setWorkspaceActive","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","evaluateWatcherExpressions","watcherElement","$rightTextAfterFilename","we","$mainElement","keyEntries","executeKeyDownEvent","actionIdentifier","action","active","activeElement","tagName","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","compilerMessage","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","$firstLine","span","valueString","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","javaOnlineFont","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","scrollbar","vertical","horizontal","theme","addCommand","KeyCode","Enter","compileIfDirty","UpArrow","nextHistoryPos","setPosition","DownArrow","lastVersionId","timerHandle","showErrors","setModelMarkers","executeRapidly","$entry","consoleTop","commandEntry","resultEntry","ce","detachValue","dontDetectLastChange","revealRangeInCenter","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","dispose","daysWithModules","dateString","stringToDate","dateWithoutTime","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","errorManager","initGUI","printCurrentlyExecutedModule","triggerCharacters","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","posOld","getTypeCompletionItems","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","implList","getTypeVariableDeclaration","getGenericParameterDefinition","decl","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","signatureInformationList","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","MyColorProvider","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","symbols","escapes","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","bottomDiv1","documentElement","setProperty","dynamic","newEditorFs","setFontSize","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","darkColor","getMethodDeclarationAtPosition","zIndex","rejectReason","resourceEdits","usagePositionsInModule","$container","gripWidth","overallWidth","$outer","$bar","$display","mousedownX","oldPosition","setSpeed","clientX","deltaX","intervalBorders","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speedString","$buttonsContainer","$editorContainer","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","setZoom","clientY","preventFading","zoomfactor","zfs","Alignment","CompilerStatus","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","svgElement","createElementNS","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","scrollLeft","diagramElements","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","fertig","xCm","yCm","isFree","insideX","insideY","withRaster","adjustToRaster","font","textElement","bbox","getBBox","cmPerPx","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","$g","diagram","withMethods","withAttributes","attachToClass","isSystemClass","hashedSignature","scb","cb","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","chr","hash","position1Cm","position2Cm","ex","ey","arrow","arrows","step","ex1","ey1","rauteAlpha","routingArrow","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","cbs","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","objectDiagram","rootIdentifier","rootValue","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","isObjectDiagramEnabled","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","each","$sliderDiv","md","mm","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","scriptList","programPointerDecoration","programIsExecutable","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","semicolonAngel","actionManager","withFileList","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","hideEditor","withPCode","withErrorList","jsonFilename","editorState","saveViewState","markFile","restoreViewState","getScript","scriptListJSon","saveScripts","countDown","eraseDokuwikiSearchMarkup","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","programPointerModule","revealRangeInCenterIfOutsideViewport","beforeContentClassName","$filesHeader","compilerStatus","compiling","startable","prompt","toExportedWorkspace","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","compiledButNothingToRun","showParenthesisWarning","startRegistering","errorfree","renderStartButton","readyToRun","healSemicolons","$userSettingsButton","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","setTheme","menu","initMenuitemCallbacks","opensubmenu","DistributeToStudentsDialog","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","subHeading","currentLibraries","library","addCheckbox","checkboxState","changed","newLibs","used","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","$synchronizeAction","$homeworkButtonDiv","enableNewButton","removeWorkspace","setCaption","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","moduleList","errorCount","errorCountS","setTextAfterFilename","repositoryButtonDone","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","hideHomeworkRevisionButton","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","Center","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","clearAfterLogout","ticket","servlet","loginRequest","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","WindowStateManager","oneTimeBackButtonListener","backButtonListener","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","revealLineInCenter","matchMedia","matches","login","hashIndex","loginWithTicket","initSliders","initTypes","checkStartupComplete","correctPIXITransform","utils","skipHello","Transform","parentTransform","_localID","_currentLocalID","_parentID","_worldID","wt","renderErrorCount","isClassDiagramEnabled","debounceDiagramDrawing","fixInconsistencies","currentWorkspace_id","manager","isCurrentRepositoryVersion","copiedFromWorkspace","repositoryIsWritable","idInsideRepository","idInsideWorkspace","workspaceFile","synchroWorkspace","markedAsMerged","originalText","monacoModel","repository","fileEntries","fileEntry","historyElement","repo","getRepositoryState","copyFromRepository","oldRepository","oldIdToFileMap","newIdToFileMap","newlyVersionedFileIds","repositoryHistoryEntry","isIntermediateEntry","timestamp","toUTCString","historyFiles","oldFile","committedFromFile","getPatch","cff","commitFilesRequest","synchroFile","repositoryVersionBeforeCommit","cfr","currentUserSynchroWorkspace","contentOld","contentNew","dmp","diff_match_patch","patchObject","patch_make","deSerializedPatchObject","patch_apply","oldIdToModuleMap","historyEntryIndex","$historyElementDiv","currentlyDragged","line1","line2","line3","$historyScrollDiv","copyFromHistoryElement","leftSynchroWorkspace","setupSynchronizationListElements","rightSynchroWorkspace","entries","historyEntries","startIndex","entry","setIntermediateState","deleteFile","changeFile","oldText","leftSynchroFile","rightSynchroFile","$buttons","pending","$leftFileDiv","$buttonLeftDiv","$buttonRightDiv","$rightFileDiv","$fileListDivs","allDivs","createLeftFileModel","createRightFileModel","lastShownSynchronizationElement","setEditorModel","getEmptyMonacoModel","onContentChanged","compareFilesAndAdaptGUI","emptyGUI","leftCaption","leftVersionCaption","needsMerge","isWritable","rightCaption","rightVersionCaption","$spacer1","$spacer2","makeButton","onFileChanged","isSynchronized","isRename","isUpdateOrCommit","onlyRename","$markAsMergedButtonDiv","showMergedDiv","updateCenterButtons","$mergedDiv","arrowDirection","$fileListHeaderDivs","guiReady","synchronizationListElements","historyElements","gainRepositoryLock","attachToWorkspaceAndRepository","timer","currentRepository","copyFromWorkspace","attachToRepository","fe","withHistoryElements","crepo","he","che","hfe","deserializeRepository","currentRepositorySynchroWorkspace","setupHistoryElements","lastShownHistoryElement","lastSynchroFileLeft","lastSynchroFileRight","fileElements","synchroFileMap","sfile","fileElement","fe1","fe2","synchroListElement","setHeader","$backToWorkspaceButton","$writeWorkspaceChangesButton","writable","$backToCurrentRepositoryVersionButton","$writeRepositoryChangesButton","lastFileSelected","$synchroDiv","$mainHeadingDiv","$belowMainHeadingDiv","$buttonsTopRightDiv","$exitButton","$leftDiv","$historyOuterDiv","$leftUpperDiv","$fileListHeaderOuterDiv","$fileListOuterDiv","$fileListFooterDiv","$fileListHeaderContainerRight","fileListHeaderRight","$fileListHeaderCenter","$updateAllButton","updateAll","$commitAllButton","commitAll","backToWorkspace","backToCurrentRepositoryVersion","writeWorkspaceChanges","writeRepositoryChanges","setColor","makeDroppable","initEditor","$dropZoneDiv","$dialogDiv","$dialogTextarea","$dialogButtonDiv","$buttonCancel","$buttonOK","commit","writeChangesToWorkspace","hasChanges","click","publishedToItems","$updateDiv","$mainHeading","$repoName","$repoDescription","$repoPublishedTo","$createButton","createButtonClicked","$cancelButton","cancelButtonClicked","isStudent","initCreateMode","publishedTo","sendCreateRepository","repositoryOwnerItems","users","exitButtonClicked","$divBelow","$divLeft","$repoListDiv","enableSaveButton","$repoOwner","$setSecrDivRead","$settingsSecretRead","$setSecrReadCopyButton","$setSecrReadButton","setSecret","$setSecrDivWrite","$settingsSecretWrite","$setSecrWriteCopyButton","$setSecrWriteButton","$userlistDiv","$saveButton","saveButtonClicked","sendSetSecret","repositoryInfo","secret_read","secret_write","is_student","showRepositoryList","repInfo","emptyRepositoryInfo","onlyOwnRepositories","$firstDiv","firstRepInfo","repositories","$namediv","$deleteDiv","selectRepository","deleteRepository","$repoDiv","repoData","published_to","repositoryUserList","userData","$userDiv","firstName","lastName","$canWriteDiv","$canWriteCheckBox","canWrite","selectedItems","some","owner_name","owner_username","owner","updateRepositoryRequest","writeAccessList","has_write_access","filterbuttonOptions","$checkoutDiv","$chooseWorkspaceDiv","$workspaceDropdown","$codeDiv","$codeInput","$publishedToFilterDiv","$filterButtonDiv","$radioButton","showRepositories","$inputFilterDiv","$filterInput","$checkoutButton","checkoutButtonClicked","filteredRepositories","repoInfo","filterSearch","$divRight","selectFirstRepository","secret","combinedSecret","tIndex","new_workspace","require","paths","availableLanguages","ignoreDuplicateModules","load"],"mappings":"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IwE,KAAKH,KAAKwD,gBAAgB8G,aAAaF,GACrC,MAAND,IAAYA,EAAGL,gBAAkBnO,GACpBuK,EAAU1B,YAChB+F,UAAU5O,ICrhB7B,IAAY6O,GAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBAlMJ,CAAYA,MAAS,KAqMd,IChMFC,EDgMMC,EAA4C,CACnD,CAACF,EAAUG,YAAa,iBAExB,CAACH,EAAUI,iBAAkB,yBAC7B,CAACJ,EAAUK,uBAAw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","file":"javaOnline.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n                if (response.error != null) error = response.error;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { response } from \"express\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    }\r\n                }, () => {\r\n                    that.errorHappened = true;\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            \r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                        if(mParameterType == stringPrimitiveType) howManyCastings += 0.5;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                         if(mParameterTypeEllispsis == stringPrimitiveType) howManyCastings += 0.5;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n                // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n                // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n                // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n                // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","/* \r\n * Convex hull algorithm - Library (TypeScript)\r\n * \r\n * Copyright (c) 2020 Project Nayuki\r\n * https://www.nayuki.io/page/convex-hull-algorithm\r\n * \r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\r\n * If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n\r\n\r\n\r\nexport namespace convexhull {\r\n    \r\n    export interface Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\t// Returns a new array of points representing the convex hull of\r\n\t// the given set of points. The convex hull excludes collinear points.\r\n\t// This algorithm runs in O(n log n) time.\r\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tlet newPoints: Array<P> = points.slice();\r\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\r\n\t\treturn convexhull.makeHullPresorted(newPoints);\r\n\t}\r\n\t\r\n\t\r\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\r\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tif (points.length <= 1)\r\n\t\t\treturn points.slice();\r\n\t\t\r\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\r\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\r\n\t\t// graphics convention. This doesn't affect the correctness of the result.\r\n\t\t\r\n\t\tlet upperHull: Array<P> = [];\r\n\t\tfor (let i = 0; i < points.length; i++) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (upperHull.length >= 2) {\r\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\r\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tupperHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tupperHull.push(p);\r\n\t\t}\r\n\t\tupperHull.pop();\r\n\t\t\r\n\t\tlet lowerHull: Array<P> = [];\r\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (lowerHull.length >= 2) {\r\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\r\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tlowerHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlowerHull.push(p);\r\n\t\t}\r\n\t\tlowerHull.pop();\r\n\t\t\r\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\r\n\t\t\treturn upperHull;\r\n\t\telse\r\n\t\t\treturn upperHull.concat(lowerHull);\r\n\t}\r\n\t\r\n\t\r\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\r\n\t\tif (a.x < b.x)\r\n\t\t\treturn -1;\r\n\t\telse if (a.x > b.x)\r\n\t\t\treturn +1;\r\n\t\telse if (a.y < b.y)\r\n\t\t\treturn -1;\r\n\t\telse if (a.y > b.y)\r\n\t\t\treturn +1;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t}\r\n\t\r\n}","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                // default case\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n        }\r\n\r\n        if(switchStatement.defaultDestination == null){\r\n            withReturnStatement = false;\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if(collectionType.typeVariables.length == 0){\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean){\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;        \r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)){\r\n                let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n                switch (classIdentifier) {\r\n                    case \"Input\":\r\n                        this.pushStatements({\r\n                            type: TokenType.callInputMethod,\r\n                            method: method,\r\n                            position: node.position,\r\n                            stepFinished: true,\r\n                            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                        });\r\n                        isSystemMethod = true;\r\n                        break;\r\n                    case \"SystemTools\":\r\n                    case \"Robot\":\r\n                        if([\"pause\", \"warten\"].indexOf(method.identifier) >= 0){\r\n                            this.pushStatements([{\r\n                                type: TokenType.setPauseDuration,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            },{\r\n                                type: TokenType.pause,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            }\r\n                        ]);\r\n                            isSystemMethod = true;    \r\n                        }\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            if(!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                    leftType.type = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if(object.intrinsicData[\"ListHelper\"] instanceof ListHelper){\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => {return {type: v.type, value: v.value}}));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if(getIteratorMethod == null){\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if(getIteratorMethod.invoke){\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{value: object, type: object.class}]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(hasNextMethod.invoke([iteratorAsValue])){\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{value: object, type: object.class}]);            \r\n            if(iteratorWithError.error != null){this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false;}\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(true){\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if(hasNext.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false;}\r\n                if(hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if(objWithError.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false;}\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({value: obj, type: type});\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): {error: string, value: Value} {\r\n        if(method.invoke){\r\n            return {value: {value: method.invoke([]), type: method.returnType}, error: null};\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push({type: r.type, value: r.value});\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, {type: r.type, value: r.value});\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({type: object.type, value: object.value});\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, {type: object.type, value: object.value});\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { ColorHelper } from \"./ColorHelper.js\";\r\n\r\nexport class FilledShapeDefaults {\r\n    static defaultFillColor: number = 0x8080ff;\r\n    static defaultFillAlpha: number = 1.0;\r\n\r\n    static defaultBorderColor: number = null;\r\n    static defaultBorderAlpha: number = 1.0;\r\n    static defaultBorderWidth: number = 10;\r\n\r\n    static defaultVisibility: boolean = true;\r\n\r\n    static initDefaultValues(){\r\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\r\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\r\n    \r\n        FilledShapeDefaults.defaultBorderColor = null;\r\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\r\n        FilledShapeDefaults.defaultBorderWidth = 10;\r\n\r\n        FilledShapeDefaults.defaultVisibility = true;\r\n    }\r\n\r\n    static setDefaultVisibility(visibility: boolean) {\r\n        FilledShapeDefaults.defaultVisibility = visibility;\r\n    }\r\n\r\n    static setDefaultBorder(width: number, color: string | number, alpha?: number) {\r\n\r\n        FilledShapeDefaults.defaultBorderWidth = width;\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultBorderColor = c.color;\r\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultBorderColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n    static setDefaultFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultFillColor = c.color;\r\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultFillColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    robotWorldHelper: any;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if ($jo_tabs.length == 0) {\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    if (this.interpreter.pauseUntil != null) {\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n\r\n            this.summedDelta = 0;\r\n\r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let hasRobot = this.robotWorldHelper != null;\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            if (!hasRobot) {\r\n                this.app.renderer.render(this.stage, {\r\n                    renderTexture: rt,\r\n                    transform: transform\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.stage.children.forEach(c => c.destroy());\r\n                    this.stage.removeChildren();\r\n\r\n                    let sprite = new PIXI.Sprite(rt);\r\n                    sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n                    // debugger;\r\n                    // sprite.localTransform.translate(0, rt.height);\r\n                    //@ts-ignore\r\n                    sprite.transform.onChange();\r\n                    // this.stage.projectionTransform = new PIXI.Matrix().scale(1, -1).translate(0, this.currentHeight);\r\n                    this.stage.projectionTransform = new PIXI.Matrix();\r\n                    this.stage.addChild(sprite);\r\n\r\n                }, 300);\r\n            }\r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n\r\n        if (this.robotWorldHelper != null) {\r\n            this.robotWorldHelper.destroy();\r\n            this.robotWorldHelper = null;\r\n        }\r\n\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n\r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"src/client/compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number) {\r\n        let c: number;\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlX, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class SectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let startAngle: number = parameters[4].value;\r\n                let endAngle: number = parameters[5].value;\r\n\r\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\r\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: boolean = parameters[1].value;\r\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"drawRadii\")) return;\r\n    \r\n                    sh.drawRadii = r;\r\n                    sh.render();\r\n    \r\n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SectorHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\r\n            g.drawCircle(this.mx, this.my, this.r);\r\n        } else {\r\n            if(this.drawRadii){\r\n                g.moveTo(this.mx, this.my);\r\n            }\r\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\r\n            if(this.drawRadii){\r\n                g.lineTo(this.mx, this.my);\r\n            }\r\n        }\r\n        if(this.drawRadii){\r\n            g.closePath();\r\n        }\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        if (dx * dx + dy * dy <= this.r * this.r) {\r\n            let towPI = 2*Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if(normalizedStartAngle <= normalizedEndAngle){\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }  \r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class ArcClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let ri: number = parameters[3].value;\r\n                let ra: number = parameters[4].value;\r\n                let startAngle: number = parameters[5].value;\r\n                let endAngle: number = parameters[6].value;\r\n\r\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ri = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ra = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.ri * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\r\n\r\n                return sh.ra * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ArcHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public ri: number,\r\n        public ra: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ra * Math.cos(alpha),\r\n                y: this.my + this.ra * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.endAngleRad - deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ri * Math.cos(alpha),\r\n                y: this.my + this.ri * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n\r\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\r\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\r\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\r\n            g.drawCircle(this.mx, this.my, this.ra)\r\n                .beginHole()\r\n                .drawCircle(this.mx, this.my, this.ri)\r\n                .endHole();\r\n        } else {\r\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\r\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\r\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\r\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\r\n        }\r\n\r\n        g.closePath();\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        let r2 = dx * dx + dy * dy;\r\n\r\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\r\n            let towPI = 2 * Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if (normalizedStartAngle <= normalizedEndAngle) {\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n            \r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n            this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let points: Value[] = parameters[1].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"addPoints\")) return;\r\n    \r\n                    let p: { x: number, y: number }[];\r\n    \r\n                    sh.setPoints(points.map(value => value.value));\r\n    \r\n                }, false, false, 'Löscht alle Punkte des Polygons und setzt komplett neue. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n                \r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(coordinates: number[]) {\r\n\r\n        this.hitPolygonInitial = [];\r\n        for(let i = 0; i < coordinates.length - 1; i += 2){\r\n            this.hitPolygonInitial.push({x: coordinates[i], y: coordinates[i+1]});\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init(){\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if(window.javaOnlineDir != null){\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if(!SoundTools.isInitialized){\r\n            SoundTools.isInitialized = true;\r\n            for(let sound of SoundTools.sounds){\r\n                //@ts-ignore\r\n                sound.player = new Howl({src: [praefix + sound.url], preload: true})\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        // let prefix = \"\";\r\n        // //@ts-ignore\r\n        // if (window.javaOnlineDir != null) {\r\n        //     //@ts-ignore\r\n        //     prefix = window.javaOnlineDir;\r\n        // }\r\n\r\n        // let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setStyle\", new Parameterlist([\r\n            { identifier: \"isBold\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"isItalic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let isBold: boolean = parameters[1].value;\r\n                let isItalic: boolean = parameters[2].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                sh.setStyle(isBold, isItalic);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\",\r\n            lineJoin: 'round'\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if (fontFamily != null) {\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    setStyle(isBold: boolean, isItalic: boolean){\r\n        this.textStyle.fontWeight = isBold ? \"bold\" : \"normal\";\r\n        this.textStyle.fontStyle = isItalic ? \"italic\" : \"normal\";\r\n        this.render();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if (this.text != null) {\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n\r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class GamepadClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"getSpeed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return module.main.getInterpreter().controlButtons.speedControl.getSpeedInStepsPerSecond();\r\n\r\n            }, false, true, \"Gibt die Ausführungsgeschwindigkeit in Steps pro Sekunde zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Polygon\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints([x1, y1, x2, y2]);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\r\n\r\nexport type GNGAktionsempfaengerData = {\r\n    type: GNGAktionsempfaengerType,\r\n    method: Method,\r\n    runtimeObject: RuntimeObject\r\n}\r\n\r\nexport class GNGEreignisbehandlung extends Klass {\r\n\r\n    constructor(module: Module, private moduleStore: ModuleStore) {\r\n\r\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\r\n\r\n\r\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let helper = GNGEreignisbehandlung.getHelper(module);\r\n\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\r\n\r\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n        //         let groesse: number = parameters[1].value;\r\n\r\n\r\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\r\n\r\n            }, false, false, \"Zeitgeber starten.\", false));\r\n\r\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\r\n\r\n            }, false, false, \"Zeitgeber anhalten.\", false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n    }\r\n\r\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\r\n        let interpreter = module.main.getInterpreter();\r\n        if (interpreter.gngEreignisbehandlungHelper == null) {\r\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\r\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\r\n        }\r\n\r\n        return interpreter.gngEreignisbehandlungHelper;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class GNGEreignisbehandlungHelper {\r\n\r\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\r\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\r\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\r\n        \"TaktImpulsAusführen()\": \"ausführen\",\r\n        \"AktionAusführen()\": \"ausführen\",\r\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\r\n        \"TasteGedrückt(char)\": \"taste\",\r\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\r\n    };\r\n\r\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\r\n    keyToKeyCodeMap: { [key: string]: number } = {\r\n        \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n    }\r\n\r\n    // For gng library (Cornelsen-Verlag):\r\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\r\n\r\n    timerRunning: boolean = false;\r\n    taktdauer: number = 300;\r\n    remainingTime: number = 0;\r\n\r\n    onKeyDownMethod: (key: string) => void;\r\n\r\n    constructor(private module:Module){\r\n        for (let type of this.aktionsempfaengerTypes) {\r\n            this.aktionsempfaengerMap[type] = [];\r\n        }\r\n\r\n    }\r\n\r\n    hasAktionsEmpfaenger(): boolean {\r\n\r\n        for(let type of this.aktionsempfaengerTypes){\r\n            if(this.aktionsempfaengerMap[type].length > 0){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n    registerEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let method: Method = klass.getMethodBySignature(ms);\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n                this.aktionsempfaengerMap[type].push({\r\n                    type: <GNGAktionsempfaengerType>type,\r\n                    method: method,\r\n                    runtimeObject: o\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unregisterEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            this.aktionsempfaengerMap[type] =\r\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\r\n        }\r\n    }\r\n\r\n\r\n    bindEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n\r\n        this.onKeyDownMethod = (key: string) => {\r\n            if (key.length == 1) {\r\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\r\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\r\n                }\r\n            } else {\r\n                let keyCode = this.keyToKeyCodeMap[key];\r\n                if (keyCode != null) {\r\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\r\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\r\n\r\n        // this.startTimer();\r\n\r\n    }\r\n\r\n    detachEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\r\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\r\n        this.stopTimer();\r\n    }\r\n\r\n\r\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        parameters = parameters.slice(0);\r\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\r\n\r\n        if (program != null) {\r\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke(parameters);\r\n        }\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        this.timerRunning = false;\r\n    }\r\n\r\n    startTimer() {\r\n\r\n        if (!this.timerRunning) {\r\n            this.timerRunning = true;\r\n            this.processTimerEntries();\r\n        }\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (!this.timerRunning) return;\r\n\r\n        let dt = 10;\r\n\r\n        this.remainingTime += dt;\r\n        if (this.remainingTime > this.taktdauer) {\r\n            this.remainingTime -= this.taktdauer;\r\n\r\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\r\n            for (let ae of liste) {\r\n\r\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, dt);\r\n\r\n    }\r\n\r\n    handleMouseClickedEvent(x: number, y: number) {\r\n        let parameters: Value[] = [\r\n            { type: intPrimitiveType, value: Math.round(x) },\r\n            { type: intPrimitiveType, value: Math.round(y) },\r\n            { type: intPrimitiveType, value: 1 }\r\n        ]\r\n\r\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\r\n        for (let ae of liste) {\r\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper } from \"../graphics/World.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGZeichenfensterClass extends Klass {\r\n\r\n    constructor(public module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n\r\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\r\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\r\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.unregisterEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.startTimer();\r\n\r\n            }, false, true, 'Startet den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.stopTimer();\r\n\r\n            }, false, true, 'Stoppt den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\r\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\r\n            worldObject.intrinsicData[\"World\"] = wh;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGRechteckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                sh.height = höhe / sh.displayObject.scale.y;\r\n                sh.width = breite / sh.displayObject.scale.x;\r\n\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","export var GNGFarben: {[identifier: string]: number} = {\r\n    \"weiß\": 0xffffff,\r\n    \"weiss\": 0xffffff,\r\n    \"rot\": 0xff0000,\r\n    \"grün\": 0x00ff00,\r\n    \"gruen\": 0x00ff00,\r\n    \"blau\": 0x0000ff,\r\n    \"gelb\": 0xffff00,\r\n    \"magenta\": 0xff00ff,\r\n    \"cyan\": 0x00ffff,\r\n    \"hellgelb\": 0xffff80,\r\n    \"hellgrün\": 0x80ff80,\r\n    \"hellgruen\": 0x80ff80,\r\n    \"orange\": 0xff8000,\r\n    \"braun\": 0x804000,\r\n    \"grau\": 0x808080,\r\n    \"schwarz\": 0x000000\r\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\n\r\nexport class GNGBaseFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \r\n            let farbe = value.object.intrinsicData[\"Farbe\"];\r\n            value.value = farbe == null ? \"schwarz\" : farbe;\r\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterX()); \r\n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterY()); \r\n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\r\n\r\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\r\n                sh.displayObject.updateTransform();\r\n                sh.displayObject.transform.worldTransform.apply(p, p);\r\n        \r\n                sh.move(x - p.x, y - p.y);\r\n\r\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\r\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"Verschieben\")) return;\r\n\r\n                sh.move(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.rotate(grad);\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                o.intrinsicData[\"Farbe\"] = farbe;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setFillColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Zerstört das Objekt.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class GNGAktionsempfaengerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\r\n\r\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGDreieckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let breite = value.object.intrinsicData[\"Breite\"];\r\n            value.value = Math.round(breite); \r\n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let höhe = value.object.intrinsicData[\"Höhe\"];\r\n            value.value = Math.round(höhe); \r\n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n\r\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\r\n                rh.centerXInitial = 60;\r\n                rh.centerYInitial = 60;\r\n\r\n                o.intrinsicData[\"Breite\"] = 100;\r\n                o.intrinsicData[\"Höhe\"] = 100;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\r\n\r\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n                    let breite: number = parameters[1].value;\r\n                    let höhe: number = parameters[2].value;\r\n\r\n                    o.intrinsicData[\"Breite\"] = breite;\r\n                    o.intrinsicData[\"Höhe\"] = höhe;    \r\n\r\n                    breite /= sh.scaleFactor;\r\n                    höhe /= sh.scaleFactor;\r\n\r\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n    \r\n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\r\n                    sh.centerXInitial = 60;\r\n                    sh.centerYInitial = 10 + höhe/2;\r\n                    \r\n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\r\n    \r\n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\r\n    \r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGKreisClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \r\n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\r\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n                let radius: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\r\n\r\n                sh.setRadius(radius);\r\n\r\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGTurtleClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \r\n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \r\n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\r\n                rh.borderWidth = 1;\r\n                rh.setShowTurtle(true);\r\n                rh.setBorderColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"größeSetzen\")) return;\r\n\r\n                sh.turtleSize = größe;\r\n                sh.turn(0);\r\n\r\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.turn(grad);\r\n\r\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n\r\n                sh.forward(länge);\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftHeben\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftSenken\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Löschen\")) return;\r\n\r\n                sh.clear(100, 200, 0);\r\n\r\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                sh.moveTo(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                sh.moveTo(100, 200);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.turn(winkel + sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                return Math.round(-sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesAtLeastOneFigure();\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                return sh.touchesColor(farbe);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesShape(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\r\n\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { TextHelper } from \"../graphics/Text.js\";\r\n\r\nexport class GNGTextClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \r\n            let text = value.object.intrinsicData[\"Actor\"].text;\r\n            value.value = text; \r\n        }, false, Visibility.private, false, \"Angezeigter Text\"));\r\n\r\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \r\n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\r\n            value.value = Math.round(fontsize); \r\n        }, false, Visibility.private, false, \"Textgröße\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\r\n\r\n                rh.setFillColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let text: string = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextSetzen\")) return;\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\r\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\r\n\r\n                sh.setFontsize(größe);\r\n\r\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size += 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size += 2;\r\n                }\r\n                else {\r\n                    size += 4;\r\n                }\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size -= 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size -= 2;\r\n                }\r\n                else {\r\n                    size -= 4;\r\n                }\r\n                if (size < 1) {\r\n                    size = 1;\r\n                }\r\n\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GroupHelper } from \"../graphics/Group.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\ntype GNGPoint = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport class GNGFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(objectType);\r\n\r\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\r\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\r\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\r\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                let rh = new FigurHelper(interpreter, o, helper);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                let center: GNGPoint = {\r\n                    x: 100,\r\n                    y: 200\r\n                };\r\n\r\n                o.intrinsicData[\"Center\"] = center;\r\n\r\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n                rh.scale(0.4, center.x, center.y);\r\n                rh.displayObject.updateTransform();\r\n\r\n                helper.registerEvents(o);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let groesse: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                let newFactor = groesse / 100;\r\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.rotate(grad, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                let angleRad = sh.angle / 180 * Math.PI;\r\n                let dx = länge * Math.cos(angleRad);\r\n                let dy = länge * Math.sin(-angleRad);\r\n                center.x += dx;\r\n                center.y += dy;                \r\n\r\n                sh.move(dx, dy);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(x - center.x, y - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = x;\r\n                center.y = y;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(100 - center.x, 200 - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = 100;\r\n                center.y = 200;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\r\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\r\n                return Math.round(sh.angle);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.x;\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.y;\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\r\n\r\n                sh.destroyChildren();\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n\r\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh) {\r\n                        if(shape instanceof FigurHelper){\r\n                            for(let part of shape.shapes){\r\n                                let partHelper = part.intrinsicData[\"Actor\"];\r\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\r\n                                    if(sh.collidesWith(partHelper)){\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n\r\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\r\n                                if (sh.collidesWith(shape)) return true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.collidesWith(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\r\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n                let x3: number = parameters[5].value;\r\n                let y3: number = parameters[6].value;\r\n                let farbeString: string = parameters[7].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(polygonClass);\r\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = triangle;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                triangle.rotate(sh.angle, 0, 0);\r\n                triangle.scale(sh.scaleFactor, 0, 0);\r\n                triangle.move(center.x, center.y);\r\n                triangle.setFillColor(farbe);\r\n                triangle.setBorderColor(\"black\");\r\n                triangle.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(rectangleClass);\r\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                rectangleHelper.rotate(sh.angle, 0, 0);\r\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\r\n                rectangleHelper.move(center.x, center.y);\r\n                rectangleHelper.setFillColor(farbe);\r\n                rectangleHelper.setBorderColor(\"black\");\r\n                rectangleHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\r\n                \r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\r\n                breite = breite - 0.1;\r\n\r\n                let rto = new RuntimeObject(ellipseClass);\r\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                ellipseHelper.rotate(sh.angle, 0, 0);\r\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\r\n                ellipseHelper.move(center.x, center.y);\r\n                ellipseHelper.setFillColor(farbe);\r\n                ellipseHelper.setBorderColor(\"black\");\r\n                ellipseHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\r\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\r\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\r\n        t.intrinsicData[\"Actor\"] = th;\r\n        th.move(center.x, center.y);\r\n        th.setFillColor(\"yellow\");\r\n        th.setBorderColor(\"black\");\r\n        th.setBorderWidth(2);\r\n        gh.add(t);\r\n\r\n        let c: RuntimeObject = new RuntimeObject(circleClass);\r\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\r\n        c.intrinsicData[\"Actor\"] = ch;\r\n        ch.move(center.x, center.y);\r\n        ch.setFillColor(\"blue\");\r\n        ch.setBorderColor(\"black\");\r\n        ch.setBorderWidth(2);\r\n        gh.add(c);\r\n\r\n    }\r\n}\r\n\r\n\r\nclass FigurHelper extends GroupHelper {\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    destroy(){\r\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class RandomClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Random\", module, \"Zufallszahlengenerator\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\r\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let bound: number = parameters[1].value;\r\n\r\n                return Math.floor(Math.random()*bound);\r\n\r\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randint\", new Parameterlist([\r\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.floor(Math.random()*(to - from + 1) + from);\r\n\r\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\r\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.random()*(to - from) + from;\r\n\r\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class DirectionClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Direction\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\r\n    }\r\n\r\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && [TokenType.newline, TokenType.keywordFor].indexOf(lastToken2.tt) < 0 && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordFor:\r\n                case TokenType.keywordWhile:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt == TokenType.leftBracket) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export class Boxes3d {\r\n    public static createCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createCube3dMesh(), material);\r\n    }\r\n    public static createCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 1.00,  0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.66666, 1, 0.33333, 0.75, 0.33333, 1,   0.66666, 0.75, 0.66666, 0.75, 0.33333, 0.5, 0.33333, 0.75, 0.66666, 0.5, \r\n                //  0.66666, 0.5, 0.33333, 0.25, 0.33333, 0.5, 0.66666, 0.25, 0.66666, 0.25, 0.33333, 0, 0.33333, 0.25, 0.66666, 0, \r\n                //  0.33333, 0.25, 0.125, 0.5, 0.33333, 0.5, 0.125, 0.25, \r\n                //1.0, 0.25, 0.66666, 0.5, 1.0, 0.5, 0.66666, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createHalfheightCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createHalfheightCube3dMesh(), material);\r\n    }\r\n    public static createHalfheightCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, 0, 1, 1, 0, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, 0, 1, 1, 0, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 0, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.6, 1, 0.4, 0.75, 0.4, 1, 0.6, 0.75, 0.6, 0.75, 0.4, 0.5, 0.4, 0.75, \r\n                //                           0.6, 0.5, 0.6, 0.5, 0.4, 0.25, 0.4, 0.5, 0.6, 0.25, 0.6, 0.25, 0.4, 0, \r\n                //                           0.4, 0.25, 0.6, 0, 0.4, 0.25, 0.125, 0.5, 0.4, 0.5, 0.125, 0.25, 1.0, 0.25, 0.6, \r\n                //                           0.5, 1.0, 0.5, 0.6, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createPlane3d(repeatTextureU: number = 1, repeatTextureV: number = 1, material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createPlane3dMesh(repeatTextureU, repeatTextureV), material);\r\n    }\r\n\r\n    public static createPlane3dMesh(repeatTextureU: number = 1, repeatTextureV: number = 1) {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n              buffer: new Float32Array([-1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, 1])\r\n            },\r\n            indices: {\r\n              buffer: new Uint8Array([0, 1, 2, 0, 3, 1])\r\n            },\r\n            normals: {\r\n              buffer: new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n              buffer: new Float32Array([0, repeatTextureV, repeatTextureU, 0, 0, 0, repeatTextureU, repeatTextureV])\r\n            }]\r\n          })\r\n    }\r\n\r\n\r\n}\r\n","import { WorldHelper } from \"../World.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\n\r\nexport function getSpritesheetTexture(identifier: string, copy: boolean = false, renderer: PIXI.Renderer = null) {\r\n    let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n    let texture = sheet.textures[identifier];\r\n\r\n    if (copy) {\r\n        let sprite = new PIXI.Sprite(texture);\r\n\r\n        let dynamicTexture1 = PIXI.RenderTexture.create({\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            scaleMode: PIXI.SCALE_MODES.NEAREST,\r\n            wrapMode: PIXI.WRAP_MODES.REPEAT\r\n        });\r\n\r\n        renderer.render(sprite, {\r\n            renderTexture: dynamicTexture1\r\n        });\r\n\r\n        return new Pixi3d.StandardMaterialTexture(dynamicTexture1.baseTexture);\r\n    } else {\r\n        let smt = new Pixi3d.StandardMaterialTexture(texture.baseTexture);\r\n        smt.transform = new Pixi3d.TextureTransform()\r\n        smt.transform.offset.set(\r\n            (texture.frame.x + 0) / texture.baseTexture.width,\r\n            (texture.frame.y + 0) / texture.baseTexture.height\r\n        )\r\n        smt.transform.scale.set(\r\n            texture.frame.width / texture.baseTexture.width,\r\n            texture.frame.height / texture.baseTexture.height\r\n        )\r\n        return smt;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RobotMarker extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotBrick extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotCubeFactory {\r\n\r\n    farben: string[] = [\"rot\", \"gelb\", \"grün\", \"blau\"];\r\n    farbeToColorInfoMap: { [farbe: string]: number[] } = {\r\n        \"rot\": [1.0, 0.0, 0.0],\r\n        \"gelb\": [1.0, 1.0, 0.0],\r\n        \"grün\": [0.0, 1.0, 0.0],\r\n        \"blau\": [0.0, 0.0, 1.0]\r\n    }\r\n    farbeToMarkerMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n    farbeToBrickMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n\r\n    grassBrickMaterial: Pixi3d.StandardMaterial;\r\n    groundPlaneMaterial: Pixi3d.StandardMaterial;\r\n\r\n    planeMaterial: { [key: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n    cloudMaterial: Pixi3d.StandardMaterial;\r\n\r\n    light1: Pixi3d.Light;\r\n    light2: Pixi3d.Light;\r\n    lightingEnvironment: Pixi3d.LightingEnvironment;\r\n\r\n\r\n\r\n    getBrick(farbe: string) {\r\n        return new RobotBrick(Boxes3d.createHalfheightCube3dMesh(), this.farbeToBrickMaterialMap[farbe], farbe);\r\n    }\r\n\r\n    getGrassBrick() {\r\n        return new Pixi3d.Mesh3D(Boxes3d.createCube3dMesh(), this.grassBrickMaterial);\r\n    }\r\n\r\n    getGrassPlane(x: number, z: number) {\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(x, z), this.groundPlaneMaterial);\r\n        mesh.scale.x = x;\r\n        mesh.scale.z = z;\r\n        mesh.x += x - 1;\r\n        mesh.z += z - 1;\r\n        //let plane = Pixi3d.Mesh3D.createPlane();\r\n        // (<Pixi3d.StandardMaterial>plane.material).baseColor = new Pixi3d.Color(0, 1, 0, 1); // The base color will be blended together with base color texture (if available).\r\n        // plane.y = -0.5;\r\n        // plane.scale.set(10);\r\n        return mesh;\r\n    }\r\n\r\n    makePlane(container: Pixi3d.Container3D, x: number, y: number, z: number, widthX: number, widthZ: number, spriteOrColor: string | Pixi3d.Color) {\r\n        let material: Pixi3d.StandardMaterial;\r\n        if (typeof spriteOrColor == \"string\") {\r\n            material = this.getPlaneMaterial(spriteOrColor);\r\n        } else {\r\n            material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            material.baseColor = spriteOrColor;\r\n        }\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(widthX, widthZ), material);\r\n        mesh.y = y;\r\n        mesh.x = x;\r\n        mesh.z = z;\r\n        mesh.scale.set(widthX, 1, widthZ);\r\n        container.addChild(mesh);\r\n    }\r\n\r\n    getMarker(farbe: string) {\r\n        let marker = new RobotMarker(Boxes3d.createCube3dMesh(), this.farbeToMarkerMaterialMap[farbe], farbe);\r\n        marker.scale.set(0.9, 0.1, 0.9);\r\n        return marker;\r\n    }\r\n\r\n    getSidePlanes(worldX: number, worldY: number, sideSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let sideMaterial = this.getPlaneMaterial(sideSprite); //3d#3\r\n\r\n        let mesh1 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh1.scale.x = worldX + 2 * radius;\r\n        mesh1.x += worldX - 1;\r\n        mesh1.y -= 1 + 2 * deep;\r\n        mesh1.z -= 1 + 2 * radius;\r\n        mesh1.rotationQuaternion.setEulerAngles(-90, 0, 180);\r\n        planes.push(mesh1);\r\n\r\n        let mesh2 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh2.scale.x = worldX + 2 * radius;\r\n        mesh2.x += worldX - 1;\r\n        mesh2.y -= 1 + 2 * deep;\r\n        mesh2.z += 2 * worldY - 1 + 2 * radius;\r\n        mesh2.rotationQuaternion.setEulerAngles(90, 0, 0);\r\n        planes.push(mesh2);\r\n\r\n        let mesh3 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh3.scale.x = worldY + 2 * radius;\r\n        mesh3.y -= 1 + 2 * deep;\r\n        mesh3.x -= 1 + 2 * radius;\r\n        mesh3.z += worldY - 1;\r\n        mesh3.rotationQuaternion.setEulerAngles(90, -90, 0);\r\n        planes.push(mesh3);\r\n\r\n        let mesh4 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh4.scale.x = worldY + 2 * radius;\r\n        mesh4.y -= 1 + 2 * deep;\r\n        mesh4.x += 2 * worldX - 1 + 2 * radius;\r\n        mesh4.z += worldY - 1;\r\n        mesh4.rotationQuaternion.setEulerAngles(90, 90, 0);\r\n        planes.push(mesh4);\r\n\r\n        return planes;\r\n    }\r\n\r\n    getHorizontalPlanes(worldX: number, worldY: number, topSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let topMaterial = this.getPlaneMaterial(topSprite);\r\n\r\n        let mesh5 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh5.scale.x = worldX + 2 * radius;\r\n        mesh5.x += worldX - 1;\r\n        mesh5.y -= 2 + 2 * deep;\r\n        mesh5.z -= 2 + 2 * radius;\r\n        mesh5.rotationQuaternion.setEulerAngles(180, 0, 180);\r\n        planes.push(mesh5);\r\n\r\n        let mesh6 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), topMaterial);\r\n        mesh6.scale.x = worldX + 2 * radius;\r\n        mesh6.x += worldX - 1;\r\n        mesh6.y -= 2 + 2 * deep;\r\n        mesh6.z += 2 * worldY + 2 * radius;\r\n        mesh6.rotationQuaternion.setEulerAngles(0, 0, 0);\r\n        planes.push(mesh6);\r\n\r\n        let mesh7 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh7.scale.x = worldY + 2 * radius + 2;\r\n        mesh7.y -= 2 + 2 * deep;\r\n        mesh7.x -= 2 + 2 * radius;\r\n        mesh7.z += worldY - 1;\r\n        mesh7.rotationQuaternion.setEulerAngles(0, -90, 0);\r\n        planes.push(mesh7);\r\n\r\n        let mesh8 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh8.scale.x = worldY + 2 * radius + 2;\r\n        mesh8.y -= 2 + 2 * deep;\r\n        mesh8.x += 2 * worldX + 2 * radius;\r\n        mesh8.z += worldY - 1;\r\n        mesh8.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n        planes.push(mesh8);\r\n\r\n        return planes;\r\n    }\r\n\r\n    makeClouds(container: Pixi3d.Container3D, height: number, originX: number, originZ: number) {\r\n        let count = 200;\r\n        let numberOfBatches = 10;\r\n        let todo = count;\r\n\r\n        let f = () => {\r\n            if (todo <= 0) return;\r\n            let radius = 1500;\r\n            let maxWidth = 20;\r\n            for (let i = 0; i < count / numberOfBatches; i++) {\r\n                todo--;\r\n                let distance = Math.sqrt(Math.random()) * radius;\r\n                let angle = Math.random() * 2 * Math.PI;\r\n\r\n                let x1 = Math.floor(distance * Math.cos(angle)) + originX;\r\n                let z1 = Math.floor(distance * Math.sin(angle)) + originZ;\r\n\r\n                let count = Math.random() * 10 + 2;\r\n\r\n                for (let j = 0; j < count; j++) {\r\n                    let mesh = Boxes3d.createCube3d(this.cloudMaterial);\r\n\r\n                    let scaleX = Math.floor(Math.random() * maxWidth + 2);\r\n                    let scaleY = Math.floor(Math.random() * maxWidth / 4 + 2);\r\n                    let scaleZ = Math.floor(Math.random() * maxWidth + 2);\r\n\r\n                    let dx = Math.floor(Math.random() * 3 * (5 + count + scaleX));\r\n                    let dz = Math.floor(Math.random() * 3 * (5 + count + scaleZ));\r\n\r\n                    mesh.x = x1 + dx;\r\n                    mesh.z = z1 + dz;\r\n\r\n                    mesh.y = height + scaleY / 2;\r\n\r\n                    mesh.scale.set(scaleX, scaleY, scaleZ);\r\n\r\n                    container.addChild(mesh);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            setTimeout(f, 100);\r\n\r\n        }\r\n\r\n        f();\r\n\r\n    }\r\n\r\n    constructor(private worldHelper: WorldHelper, private camera: Pixi3d.Camera) {\r\n\r\n        let renderer = <PIXI.Renderer>worldHelper.app.renderer;\r\n\r\n        this.light1 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.ambient,\r\n            range: 100,\r\n            intensity: 30,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light1.position.set(-4, 4, 4);\r\n\r\n        this.light2 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.directional,\r\n            range: 600,\r\n            intensity: 4,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light2.position.set(12, 16, -12);\r\n        this.light2.rotationQuaternion.setEulerAngles(25, 45, 0);\r\n\r\n        this.lightingEnvironment = new Pixi3d.LightingEnvironment(<PIXI.Renderer>worldHelper.app.renderer);\r\n        this.lightingEnvironment.lights.push(this.light1, this.light2);\r\n\r\n\r\n        this.grassBrickMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.grassBrickMaterial);\r\n        this.grassBrickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#0\");\r\n\r\n        this.cloudMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.cloudMaterial);\r\n        this.cloudMaterial.baseColor = new Pixi3d.Color(1.0, 1.0, 1.0, 0.5);\r\n\r\n        this.groundPlaneMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.groundPlaneMaterial);\r\n        this.groundPlaneMaterial.baseColorTexture = getSpritesheetTexture(\"robot#2\", true, renderer);\r\n\r\n        for (let farbe of this.farben) {\r\n            let material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            let colorInfo = this.farbeToColorInfoMap[farbe];\r\n            material.baseColor = new Pixi3d.Color(colorInfo[0], colorInfo[1], colorInfo[2], 1);\r\n            this.farbeToMarkerMaterialMap[farbe] = material;\r\n\r\n            let brickMaterial = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(brickMaterial);\r\n            let index = this.farben.indexOf(farbe) + 4;\r\n            brickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#\" + index);\r\n            this.farbeToBrickMaterialMap[farbe] = brickMaterial;\r\n        }\r\n\r\n    }\r\n\r\n    initMaterial(material: Pixi3d.StandardMaterial) {\r\n        material.camera = this.camera;\r\n        material.exposure = 1;\r\n        material.roughness = 0.9;\r\n        material.lightingEnvironment = this.lightingEnvironment;\r\n    }\r\n\r\n    getPlaneMaterial(spriteKey: string): Pixi3d.StandardMaterial {\r\n        let renderer = <PIXI.Renderer>this.worldHelper.app.renderer;\r\n\r\n        if (this.planeMaterial[spriteKey] != null) return this.planeMaterial[spriteKey];\r\n\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(spriteKey, true, renderer);\r\n        // material.doubleSided = true;\r\n        this.planeMaterial[spriteKey] = material;\r\n\r\n        return material;\r\n    }\r\n\r\n    makeSprite3d(textureKey: string, container: Pixi3d.Container3D){\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(textureKey, false);\r\n        material.alphaMode = Pixi3d.StandardMaterialAlphaMode.mask;\r\n        let sprite = Boxes3d.createPlane3d(1, 1, material);\r\n        container.addChild(sprite);\r\n        return sprite;\r\n    }\r\n\r\n}","import { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"../FilledShape.js\";\r\nimport { WorldHelper } from \"../World.js\";\r\nimport { Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"../FilledShapeDefaults.js\";\r\nimport { ShapeHelper } from \"../Shape.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\nimport { RobotBrick, RobotCubeFactory, RobotMarker } from \"./RobotCubeFactory.js\";\r\n\r\nexport class RobotClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Robot\", module, \"Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let robotWorldType = <Klass>module.typeStore.getType(\"RobotWorld\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, 1, 1, 5, 8)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter steht anfangs an der Stelle (1/1)', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 5, 10)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let worldX: number = parameters[3].value;\r\n                let worldY: number = parameters[4].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, worldX, worldY)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie mit der Größe worldX * worldY neu erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let initialeWelt: string = parameters[3].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 0, 0, initialeWelt)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie auf Grundlage des Strings initialeWelt erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"getWelt\", new Parameterlist([\r\n        ]), robotWorldType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.robotWorldHelper.runtimeObject;\r\n\r\n            }, false, false, 'Gibt das RobotWorld-Objekt zurück', false));\r\n\r\n        this.addMethod(new Method(\"rechtsDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnRight();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach rechts.', false));\r\n\r\n        this.addMethod(new Method(\"linksDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnLeft();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach links.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.schritt();\r\n\r\n            }, false, false, 'Lässt den Roboter einen Schritt nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.schritt()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl Schritte nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(\"rot\");\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"markeLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeLöschen();\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke, die direkt unter ihm liegt, löschen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(\"gelb\");\r\n\r\n            }, false, false, 'Lässt den Roboter eine gelbe Marke direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke der angegebenen Farbe direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.hinlegen(\"rot\")) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter einen Ziegel der angegebenen Farbe vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.aufheben();\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.aufheben()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"warten\", new Parameterlist([\r\n            { identifier: \"ZeitInMillisekunden\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, false, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"langsam\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(5);\r\n\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 5 Programmschritte/Sekunde.\"));\r\n\r\n        this.addMethod(new Method(\"schnell\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(\"max\");\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"beenden\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if (console != null) {\r\n                    console.writeConsoleEntry(\"Das Programm wurde durch einen Roboter angehalten.\", null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }, false, false, \"Beendet das Programm.\"));\r\n\r\n        this.addMethod(new Method(\"istWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nicht direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter mindestens ein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter mindestens ein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter kein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter nicht genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter kein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        let himmelsrichtungen = [\"Norden\", \"Osten\", \"Süden\", \"Westen\"];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let hr: string = himmelsrichtungen[i];\r\n\r\n            this.addMethod(new Method(\"ist\" + hr, new Parameterlist([\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                    return rh.direction.index == i;\r\n\r\n                }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nach \" + hr + \" blickt.\"));\r\n        }\r\n\r\n        this.addMethod(new Method(\"istLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter keinen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"istVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine >= anzahl;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens Anzahl Steine mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine < rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter weniger als die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"setzeAnzahlSteine\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine = anzahl;\r\n\r\n            }, false, false, \"Befüllt den Rucksack des Roboters mit genau Anzahl Steinen.\"));\r\n\r\n        this.addMethod(new Method(\"setzeRucksackgröße\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.maxSteine = anzahl;\r\n\r\n            }, false, false, \"Gibt dem Roboter einen Rucksack, der maximal Anzahl Steine fasst.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RobotWorld\", module, \"Welt für Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let worldX: number = parameters[1].value;\r\n                let worldY: number = parameters[2].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, worldX, worldY, null);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt', true));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let initialeWelt: string = parameters[1].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, 0, 0, initialeWelt);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt.', true));\r\n\r\n            this.addMethod(new Method(\"setzeMaximalhöhe\", new Parameterlist([\r\n                { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let anzahl: number = parameters[1].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n    \r\n                    return rh.maximumHeight = anzahl;\r\n    \r\n                }, false, false, \"Ändert die maximale Höhe der Ziegelstapel.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeZiegel\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let anzahl: number = parameters[4].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n                    \r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    for(let i = 0; i < anzahl; i++){\r\n                        rh.addBrick(x-1, y-1, farbe);\r\n                    }\r\n    \r\n                }, false, false, \"Setzt Anzahl Ziegel an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeMarke\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n\r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    rh.setMarker(x-1, y-1, farbe);\r\n    \r\n                }, false, false, \"Setzt einen Marker an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n\r\n    robotCubeFactory: RobotCubeFactory;\r\n    camera: Pixi3d.Camera;\r\n    displayObject: PIXI.DisplayObject;\r\n    container3D: Pixi3d.Container3D;\r\n\r\n    markers: RobotMarker[][] = [];    // x, y\r\n    bricks: RobotBrick[][][] = [];   // x, y, height\r\n\r\n    maximumHeight: number = 15;\r\n\r\n    robots: RobotHelper[] = [];\r\n\r\n    constructor(public interpreter: Interpreter, public runtimeObject: RuntimeObject,\r\n        public worldX: number, public worldY: number, initialeWelt: string) {\r\n\r\n        this.fetchWorld(interpreter);\r\n\r\n        if (this.worldHelper.robotWorldHelper != null) {\r\n            this.interpreter.throwException(\"Es wurde bereits ein Robot-World-Objekt instanziert. Davon kann es aber nur ein einziges geben. \\nTipp: Jedes Robot-Objekt kann das Robot-World-Objekt mit der getRobotWorld() holen.\");\r\n            return;\r\n        }\r\n\r\n        this.worldHelper.robotWorldHelper = this;\r\n\r\n        this.camera = new Pixi3d.Camera(<PIXI.Renderer>this.worldHelper.app.renderer);\r\n\r\n        this.robotCubeFactory = new RobotCubeFactory(this.worldHelper, this.camera);\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n\r\n        this.container3D = new Pixi3d.Container3D();\r\n        this.displayObject = this.container3D;\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n\r\n        if (initialeWelt != null) {\r\n            this.initFromString(initialeWelt);\r\n        } else {\r\n            this.initWorldArrays(worldX, worldY);\r\n        }\r\n\r\n        this.renderOrnamentsAndInitCamera();\r\n\r\n    }\r\n\r\n    adjustRobotPositions(x: number, y: number){\r\n        for(let robot of this.robots){\r\n            if(robot.x == x && robot.y == y){\r\n                robot.model.y = this.getBrickCount(x, y) + 1.6;\r\n            }\r\n        }\r\n    }\r\n\r\n    initWorldArrays(worldX: number, worldY: number) {\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchWorld(interpreter: Interpreter) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            interpreter.worldHelper = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n\r\n    renderOrnamentsAndInitCamera() {\r\n        this.worldHelper.app.renderer.backgroundColor = 0x8080ff;\r\n\r\n        let gp = this.robotCubeFactory.getGrassPlane(this.worldX, this.worldY);\r\n        this.container3D.addChild(gp);\r\n\r\n        let deep: number = 0;\r\n        let radius: number = 0;\r\n        this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#3\", radius, deep++)\r\n            .forEach(p => { this.container3D.addChild(p); });\r\n\r\n            this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#10\", radius, deep++)\r\n                .forEach(p => { this.container3D.addChild(p); });\r\n\r\n        this.robotCubeFactory.makeClouds(this.container3D, 60, this.worldX/2, this.worldY/2);\r\n\r\n        this.robotCubeFactory.makePlane(this.container3D, this.worldX/2, -4, this.worldY/2, 3000, 3000, \r\n        new Pixi3d.Color(55.0/255, 174.0/255, 77.0/255));\r\n\r\n        let northSprite = this.robotCubeFactory.makeSprite3d(\"robot#11\", this.container3D);\r\n        // northSprite.position.set(this.worldX + 6, 1, this.worldY - 1);\r\n        northSprite.position.set(2*this.worldX + 1, -1, 2*this.worldY - 6);\r\n        northSprite.scale.set(257.0/40, 1, 1);\r\n        northSprite.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n\r\n        let control = new Pixi3d.CameraOrbitControl(this.worldHelper.app.view, this.camera);\r\n        control.angles.x = 45;\r\n        control.angles.y = -20;\r\n        control.target = { x: this.worldX - 1, y: 0, z: this.worldY - 1 }\r\n        control.distance = Math.max(this.worldX, this.worldY) * 2.3;\r\n\r\n    }\r\n\r\n    addBrick(x: number, y: number, farbe: string): boolean {\r\n        let oldHeight = this.bricks[x][y].length;\r\n        if (oldHeight < this.maximumHeight) {\r\n            let brick = this.robotCubeFactory.getBrick(farbe);\r\n            this.setToXY(x, y, oldHeight, brick);\r\n            this.bricks[x][y].push(brick);\r\n            this.container3D.addChild(brick);\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    removeBrick(x: number, y: number): boolean {\r\n        if (this.bricks[x][y].length > 0) {\r\n            let brick = this.bricks[x][y].pop();\r\n            brick.destroy();\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    getBrickCount(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    hasBrickColor(x: number, y: number, farbe: string): boolean {\r\n        for (let brick of this.bricks[x][y]) {\r\n            if (brick.farbe == farbe) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMarkerColor(x: number, y: number): string {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) return null;\r\n        return marker.farbe;\r\n    }\r\n\r\n    setMarker(x: number, y: number, farbe: string) {\r\n        if (this.markers[x][y] != null) {\r\n            this.markers[x][y].destroy();\r\n        }\r\n        let marker = this.robotCubeFactory.getMarker(farbe);\r\n        this.markers[x][y] = marker;\r\n        this.container3D.addChild(marker);\r\n        this.setToXY(x, y, 0, marker);\r\n        this.adjustMarkerHeight(x, y);\r\n    }\r\n\r\n    removeMarker(x: number, y: number): boolean {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) {\r\n            return false;\r\n        } else {\r\n            this.markers[x][y] = null;\r\n            marker.destroy();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    adjustMarkerHeight(x: number, y: number) {\r\n        let marker = this.markers[x][y];\r\n        if (marker != null) {\r\n            let height = this.bricks[x][y].length\r\n            marker.y = height + 0.1;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (let x = 0; x < this.bricks.length; x++) {\r\n            for (let y = 0; y < this.bricks[x].length; y++) {\r\n                let brickList = this.bricks[x][y];\r\n                while (brickList.length > 0) {\r\n                    brickList.pop().destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.markers.length; x++) {\r\n            for (let y = 0; y < this.markers[x].length; y++) {\r\n                let marker = this.markers[x][y];\r\n                if (marker != null) {\r\n                    this.markers[x][y] = null;\r\n                    marker.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setDimensions(worldX: number, worldY: number) {\r\n        this.clear();\r\n\r\n        this.worldX = worldX;\r\n        this.worldY = worldY;\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumberOfBricks(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param initString \r\n     * \" \": empty \r\n     * \"_\": no brick, yellow marker\r\n     * \"Y\", \"G\", \"B\", \"R\": switch marker color\r\n     * \"y\", \"g\", \"b\", \"r\": switch brick color\r\n     * \"1\", ..., \"9\": 1, ..., 9 bricks \r\n     * \"1m\", ..., \"9m\": 1, ..., 9 bricks with markers on them\r\n     */\r\n    initFromString(initString: string) {\r\n\r\n        let lowerCaseCharToColor = { \"r\": \"rot\", \"g\": \"grün\", \"b\": \"blau\", \"y\": \"gelb\" };\r\n        let upperCaseCharToColor = { \"R\": \"rot\", \"G\": \"grün\", \"B\": \"blau\", \"Y\": \"gelb\" };\r\n        let digits = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\n        this.clear();\r\n        let rows = initString.split(\"\\n\");\r\n        let maxColumns = 0;\r\n        rows.forEach((row) => { let rowLength = this.rowLength(row); if (rowLength > maxColumns) maxColumns = rowLength });\r\n        this.initWorldArrays(maxColumns, rows.length);\r\n\r\n        this.worldX = maxColumns;\r\n        this.worldY = rows.length;\r\n\r\n        let c1: string;\r\n        let c2: string;\r\n        let brickColor = \"rot\";\r\n        let markerColor = \"gelb\";\r\n\r\n        for (let y = 0; y < rows.length; y++) {\r\n            let row = rows[y];\r\n            let x = 0;\r\n            let pos = 0;\r\n            while (pos < row.length) {\r\n                c1 = row.charAt(pos);\r\n                c2 = pos < row.length - 1 ? row.charAt(pos + 1) : null;\r\n                pos++;\r\n                if (lowerCaseCharToColor[c1] != null) {\r\n                    brickColor = lowerCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                if (upperCaseCharToColor[c1] != null) {\r\n                    markerColor = upperCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                let index = digits.indexOf(c1);\r\n                if (index >= 0) {\r\n                    for (let i = 0; i < index + 1; i++) {\r\n                        this.addBrick(x, y, brickColor);\r\n                    }\r\n                    if (c2 == \"m\") {\r\n                        this.setMarker(x, y, markerColor);\r\n                        pos++;\r\n                    }\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \" \") {\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \"_\") {\r\n                    this.setMarker(x, y, markerColor);\r\n                    x++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rowLength(row: string) {\r\n        let l: number = 0;\r\n        let forwardChars = \" _1234567890\";\r\n\r\n        for (let i = 0; i < row.length; i++) {\r\n            if (forwardChars.indexOf(row.charAt(i)) >= 0) {\r\n                l++;\r\n            }\r\n        }\r\n        return l;\r\n    }\r\n\r\n    setToXY(x: number, y: number, height: number, mesh: Pixi3d.Mesh3D) {\r\n        mesh.x = 2 * (this.worldX - x - 1);\r\n        mesh.z = 2 * (this.worldY - y - 1);\r\n        mesh.y = height;\r\n    }\r\n\r\n    // Wird von WorldHelper aufgerufen\r\n    destroy() {\r\n\r\n    }\r\n\r\n    gibtFarbe(farbe: string): boolean {\r\n        return this.robotCubeFactory.farben.indexOf(farbe) >= 0;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Direction {\r\n    names: string[] = [\"top\", \"right\", \"bottom\", \"left\"];\r\n    deltas: { dx: number, dy: number }[] = [{ dx: 0, dy: -1 }, { dx: -1, dy: 0 }, { dx: 0, dy: 1 }, { dx: 1, dy: 0 }];\r\n    angles: number[] = [0, 90, 180, 270];\r\n\r\n    public index: number = 2; // top\r\n\r\n    turnRight() {\r\n        this.index = (this.index - 1) % 4;\r\n    }\r\n\r\n    turnLeft() {\r\n        this.index = (this.index + 1 + 4) % 4;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angles[this.index];\r\n    }\r\n\r\n    getDeltas() {\r\n        return this.deltas[this.index];\r\n    }\r\n\r\n}\r\n\r\nexport class RobotHelper {\r\n\r\n    robotWorldHelper: RobotWorldHelper;\r\n    model: Pixi3d.Model;\r\n    x: number;\r\n    y: number;\r\n\r\n    hatSteine: number = 10000000;\r\n    maxSteine: number = 100000000;\r\n\r\n    direction: Direction = new Direction();\r\n\r\n    constructor(private interpreter: Interpreter, private runtimeObject: RuntimeObject,\r\n        startX: number, startY: number,\r\n        worldX: number, worldY: number,\r\n        initialeWelt: string = null\r\n    ) {\r\n\r\n        this.fetchRobotWorld(interpreter, worldX, worldY, initialeWelt);\r\n        this.robotWorldHelper.robots.push(this);\r\n\r\n        this.render();\r\n\r\n        this.moveTo(startX - 1, startY - 1);\r\n        this.adjustAngle();\r\n\r\n    }\r\n\r\n    fetchRobotWorld(interpreter: Interpreter, worldX: number, worldY: number, initialeWelt: string) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        this.robotWorldHelper = worldHelper?.robotWorldHelper;\r\n\r\n        if (this.robotWorldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"RobotWorld\").type);\r\n            this.robotWorldHelper = new RobotWorldHelper(interpreter, w, worldX, worldY, initialeWelt);\r\n            w.intrinsicData[\"RobotWorldHelper\"] = this.robotWorldHelper;\r\n        }\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n        //@ts-ignore\r\n        let robot = Pixi3d.Model.from(PIXI.Loader.shared.resources[\"steve\"].gltf);\r\n        robot.scale.set(0.1);\r\n        for (let mesh of robot.meshes) {\r\n            let sm = <Pixi3d.StandardMaterial>mesh.material;\r\n            sm.camera = this.robotWorldHelper.camera;\r\n            sm.exposure = 0.5;\r\n            sm.lightingEnvironment = this.robotWorldHelper.robotCubeFactory.lightingEnvironment;\r\n        }\r\n        this.robotWorldHelper.container3D.addChild(robot);\r\n        this.model = robot;\r\n\r\n    };\r\n\r\n    crop(n: number, min: number, max: number): number {\r\n        if (n < min) n = min;\r\n        if (n > max) n = max;\r\n        return n;\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        const rw = this.robotWorldHelper;\r\n        x = this.crop(x, 0, rw.worldX - 1);\r\n        y = this.crop(y, 0, rw.worldY - 1);\r\n\r\n        this.model.x = 2 * (rw.worldX - x - 1);\r\n        this.model.z = 2 * (rw.worldY - y - 1);\r\n        this.model.y = rw.getNumberOfBricks(x, y) + 1.6;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    adjustAngle() {\r\n        this.model.transform.rotationQuaternion.setEulerAngles(0, this.direction.getAngle(), 0);\r\n    }\r\n\r\n    schritt(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter ist gegen eine Wand geprallt!\");\r\n            return false;\r\n        }\r\n\r\n        let oldHeight = rw.getNumberOfBricks(this.x, this.y);\r\n        let newHeight = rw.getNumberOfBricks(newX, newY);\r\n\r\n        if (newHeight < oldHeight - 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel nach unten springen.\");\r\n            return false;\r\n        }\r\n\r\n        if (newHeight > oldHeight + 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel hoch springen.\");\r\n            return false;\r\n        }\r\n\r\n        this.moveTo(newX, newY);\r\n        return true;\r\n    }\r\n\r\n    hinlegen(farbe: string): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keine Ziegel hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        farbe = farbe.toLocaleLowerCase();\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Ziegel der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        if (this.hatSteine == 0) {\r\n            this.interpreter.throwException(\"Der Roboter hat keine Ziegel mehr bei sich und kann daher keinen mehr hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        if(rw.bricks[newX][newY].length >= rw.maximumHeight){\r\n            this.interpreter.throwException(\"Der Ziegelstapel darf die maximale Höhe \" + rw.maximumHeight + \" nicht überschreiten.\");\r\n            return false;\r\n        }\r\n\r\n        rw.addBrick(newX, newY, farbe);\r\n        this.hatSteine--;\r\n\r\n        return true;\r\n    }\r\n\r\n    aufheben(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keinen Ziegel aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        if (rw.getNumberOfBricks(newX, newY) < 1) {\r\n            this.interpreter.throwException(\"Vor dem Roboter liegt kein Ziegel, er kann daher keinen aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        rw.removeBrick(newX, newY);\r\n\r\n        if (this.hatSteine < this.maxSteine) {\r\n            this.hatSteine++;\r\n        } else {\r\n            this.interpreter.throwException(\"Der Roboter kann nicht mehr Steine aufheben, da er keinen Platz mehr in seinem Rucksack hat.\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    markeSetzen(farbe: string) {\r\n        const rw = this.robotWorldHelper;\r\n        farbe = farbe.toLocaleLowerCase();\r\n\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Marken der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        rw.setMarker(this.x, this.y, farbe);\r\n    }\r\n\r\n    markeLöschen() {\r\n        const rw = this.robotWorldHelper;\r\n\r\n        rw.removeMarker(this.x, this.y);\r\n    }\r\n\r\n    istWand(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        return (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY)\r\n\r\n    }\r\n\r\n    istZiegel(param: number | string | null): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            return false;\r\n        }\r\n\r\n        if (param == null) return rw.getBrickCount(newX, newY) > 0;\r\n\r\n        if (typeof param == \"string\") {\r\n            return rw.hasBrickColor(newX, newY, param.toLocaleLowerCase());\r\n        }\r\n\r\n        return rw.bricks[newX][newY].length == param;\r\n\r\n    }\r\n\r\n    istMarke(param: string | null): boolean {\r\n        const rw = this.robotWorldHelper;\r\n        let marke = rw.markers[this.x][this.y];\r\n        if (param == null) return marke != null;\r\n\r\n        if (typeof param == \"string\") {\r\n            return marke != null && marke.farbe == param.toLocaleLowerCase();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\nimport { RobotClass, RobotWorldClass } from \"../../runtimelibrary/graphics/3d/Robot.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n        this.typeStore.addType(new RobotWorldClass(this));\r\n        this.typeStore.addType(new RobotClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\n\r\nexport class WorkspaceImporter {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main, private path: string[] = []) {\r\n\r\n        this.dialog = new Dialog();\r\n        \r\n    }\r\n\r\n    show() {\r\n        let that = this;\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Workspace importieren\");\r\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\r\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\r\n        if(this.path.length  > 0){\r\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\r\n        }\r\n        this.dialog.description(pathDescription);\r\n\r\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\r\n        this.dialog.addDiv($fileInputButton);\r\n        \r\n        let exportedWorkspaces: ExportedWorkspace[] = [];\r\n        \r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\r\n        \r\n        let registerFiles = (files: FileList) => {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files[i];\r\n                var reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    let text: string = <string>event.target.result;\r\n                    if (!text.startsWith(\"{\")) {\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n                    \r\n                    let ew: ExportedWorkspace = JSON.parse(text);\r\n                    \r\n                    if(ew.modules == null || ew.name == null || ew.settings == null){\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n\r\n                    exportedWorkspaces.push(ew);\r\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\r\n\r\n                };\r\n                reader.readAsText(f);\r\n            }\r\n        }\r\n\r\n        $fileInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\r\n        this.dialog.addDiv($dropZone);\r\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\r\n\r\n\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        this.dialog.addDiv($workspacePreviewDiv);\r\n\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => { this.dialog.close() }\r\n            },\r\n            {\r\n                caption: \"Importieren\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    \r\n                    let networkManager = this.main.networkManager;\r\n                    let projectExplorer = this.main.projectExplorer;\r\n\r\n                    let owner_id: number = this.main.user.id;\r\n                    if (this.main.workspacesOwnerId != null) {\r\n                        owner_id = this.main.workspacesOwnerId;\r\n                    }\r\n\r\n                    let count = 0;\r\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\r\n\r\n                    let firstWorkspace: Workspace;\r\n\r\n                    for(let wse of exportedWorkspaces){\r\n\r\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\r\n                        if(firstWorkspace == null) firstWorkspace = ws;\r\n                        ws.isFolder = false;\r\n                        ws.path = this.path.join(\"/\");\r\n                        ws.settings = wse.settings;\r\n                        this.main.workspaceList.push(ws);\r\n                        ws.alterAdditionalLibraries();\r\n\r\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\r\n                            count--;\r\n                            if (error == null) {\r\n                                projectExplorer.workspaceListPanel.addElement({\r\n                                    name: ws.name,\r\n                                    externalElement: ws,\r\n                                    iconClass: \"workspace\",\r\n                                    isFolder: false,\r\n                                    path: that.path\r\n                                }, true);\r\n\r\n                                for(let mo of wse.modules){\r\n                                    let f: File = {\r\n                                        name: mo.name,\r\n                                        dirty: false,\r\n                                        saved: true,\r\n                                        text: mo.text,\r\n                                        text_before_revision: null,\r\n                                        submitted_date: null,\r\n                                        student_edited_after_revision: false,\r\n                                        version: 1,\r\n                                        is_copy_of_id: null,\r\n                                        repository_file_version: null,\r\n                                        identical_to_repository_version: null\r\n                                    };\r\n                                    let m = new Module(f, this.main);\r\n                                    ws.moduleStore.putModule(m);\r\n                                    networkManager.sendCreateFile(m, ws, owner_id,\r\n                                        (error: string) => {\r\n                                            count--;\r\n                                            if (error == null) {\r\n                                                projectExplorer.workspaceListPanel.sortElements();\r\n                                                this.dialog.close();\r\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\r\n                                            } else {\r\n                                                alert('Der Server ist nicht erreichbar!');\r\n                    \r\n                                            }\r\n                                        });\r\n                                }\r\n\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n        \r\n                            }\r\n                        });\r\n\r\n\r\n\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null) || m.identifier.startsWith('onMouse') || m.identifier.startsWith('onKey')) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"src/client/compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/\\.[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getSpeedInStepsPerSecond(): number {\r\n        return this.interpreter.stepsPerSecond;\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[],\r\n    jsonFilename?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n        if(this.config.jsonFilename == null) this.config.jsonFilename = \"workspace.json\";\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", this.config.jsonFilename);\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        that.fileListPanel.enableNewButton(false);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != null && !workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Repository } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { HistoryElement } from \"./HistoryElement.js\";\r\nimport { RepositoryHistoryEntry, RepositoryFileEntry, CommitFilesResponse, CommitFilesRequest } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\n\r\n\r\nexport type SynchroFileState = \"original\" | \"changed\" | \"new\" | \"deleted\";\r\n\r\nexport type SynchroFile = {\r\n    idInsideRepository: number,\r\n    idInsideWorkspace?: number,\r\n    workspaceFile: File,\r\n    committedFromFile?: SynchroFile,\r\n    name: string,\r\n    repository_file_version: number,\r\n    identical_to_repository_version: boolean,\r\n    text: string,\r\n    synchroWorkspace: SynchroWorkspace,\r\n    \r\n    state: SynchroFileState,\r\n    markedAsMerged: boolean,\r\n\r\n    originalText?: string,\r\n    monacoModel?: monaco.editor.ITextModel,\r\n}\r\n\r\n\r\nexport class SynchroWorkspace {\r\n\r\n    files: SynchroFile[] = [];\r\n    copiedFromWorkspace: Workspace;\r\n    isCurrentRepositoryVersion: boolean = false;\r\n\r\n    name: string;\r\n\r\n    constructor(private manager: SynchronizationManager) {\r\n\r\n    }\r\n\r\n    hasChanges(): boolean {\r\n        for(let file of this.files){\r\n            if(file.state != \"original\") return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    isWritable(): boolean {\r\n        return this.copiedFromWorkspace != null || (this.isCurrentRepositoryVersion && this.manager.repositoryIsWritable );\r\n    }\r\n\r\n    copyFromWorkspace(workspace: Workspace):SynchroWorkspace {\r\n\r\n        this.files = [];\r\n        workspace.moduleStore.getModules(false).forEach(module => {\r\n            let file = module.file;\r\n\r\n            if (module.model != null) {\r\n                module.file.text = module.getProgramTextFromMonacoModel();\r\n            }\r\n\r\n            this.files.push({\r\n                name: file.name,\r\n                repository_file_version: file.repository_file_version,\r\n                identical_to_repository_version: file.identical_to_repository_version,\r\n                idInsideRepository: file.is_copy_of_id,\r\n                idInsideWorkspace: file.id,\r\n                workspaceFile: file,\r\n                text: file.text.replace(/\\r\\n/g, \"\\n\"),\r\n                synchroWorkspace: this,\r\n                \r\n                state: \"original\",\r\n                markedAsMerged: false,\r\n\r\n                originalText: file.text,\r\n                monacoModel: null\r\n            })\r\n        });\r\n\r\n        this.name = \"Workspace: \" + workspace.name;\r\n        this.copiedFromWorkspace = workspace;\r\n\r\n        return this;\r\n    }\r\n\r\n    copyFromRepository(repository: Repository, isCurrentRepositoryVersion: boolean): SynchroWorkspace {\r\n        this.isCurrentRepositoryVersion = isCurrentRepositoryVersion;\r\n        this.files = [];\r\n        repository.fileEntries.forEach((fileEntry) => {\r\n            this.files.push({\r\n                name: fileEntry.filename,\r\n                idInsideRepository: fileEntry.id,\r\n                idInsideWorkspace: null,\r\n                workspaceFile: null,\r\n                repository_file_version: fileEntry.version,\r\n                identical_to_repository_version: true,\r\n                text: fileEntry.text.replace(/\\r\\n/g, \"\\n\"),\r\n                synchroWorkspace: this,\r\n                \r\n                state: \"original\",\r\n                markedAsMerged: false,\r\n\r\n                monacoModel: null\r\n            })\r\n        })\r\n\r\n        this.name = \"Repository: \" + repository.name + \" (V \" + repository.version + \")\";\r\n\r\n        return this;\r\n    }\r\n\r\n    copyFromHistoryElement(historyElement: HistoryElement): SynchroWorkspace {\r\n        let repo = historyElement.getRepositoryState();\r\n        this.copyFromRepository(repo, false);\r\n        this.name = \"History-Version \" + repo.version;\r\n        return this;\r\n    }\r\n\r\n    commit(workspace: Workspace, oldRepository: Repository, comment: string, main: Main,\r\n        callback: (repository: Repository, errormessage: string) => void) {\r\n\r\n        let oldIdToFileMap: { [id: number]: RepositoryFileEntry } = {};\r\n        let newIdToFileMap: { [id: number]: SynchroFile } = {};\r\n\r\n        let newlyVersionedFileIds: number[] = [];\r\n\r\n        oldRepository.fileEntries.forEach(file => oldIdToFileMap[file.id] = file);\r\n        this.files.forEach(file => {\r\n            if (file.idInsideRepository != null) {\r\n                newIdToFileMap[file.idInsideRepository] = file;\r\n            }\r\n        });\r\n\r\n        let repositoryHistoryEntry: RepositoryHistoryEntry = {\r\n            comment: comment,\r\n            name: main.user.rufname + \" \" + main.user.familienname,\r\n            username: main.user.username,\r\n            isIntermediateEntry: false,\r\n            timestamp: new Date().toUTCString(),\r\n            userId: main.user.id,\r\n            version: oldRepository.version + 1,\r\n            historyFiles: []\r\n        }\r\n\r\n        for (let file of this.files) {\r\n            if(file.state == \"deleted\") continue;\r\n\r\n            let oldFile = oldIdToFileMap[file.idInsideRepository];\r\n            if (oldFile == null) {\r\n\r\n                // if file.committedFromFile.\r\n                if (file.idInsideRepository == null) {\r\n                    newlyVersionedFileIds.push(file.committedFromFile.idInsideWorkspace);\r\n                    file.committedFromFile.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                    file.committedFromFile.repository_file_version = 1;\r\n                    file.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                    file.committedFromFile.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                }\r\n\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: file.idInsideRepository,\r\n                    type: \"create\",\r\n                    version: 1,\r\n                    content: file.text,\r\n                    filename: file.name\r\n                });\r\n            } else if (oldFile.text != file.text) {\r\n                oldFile.version++;\r\n                let patch: string = this.getPatch(oldFile.text, file.text);\r\n                if (patch == null) {\r\n                    repositoryHistoryEntry.historyFiles.push({\r\n                        id: oldFile.id,\r\n                        type: \"intermediate\",\r\n                        version: oldFile.version,\r\n                        content: file.text,\r\n                        filename: file.name\r\n                    });\r\n                } else {\r\n                    repositoryHistoryEntry.historyFiles.push({\r\n                        id: oldFile.id,\r\n                        type: \"change\",\r\n                        version: oldFile.version,\r\n                        content: patch,\r\n                        filename: (oldFile.filename == file.name) ? undefined : file.name\r\n                    });\r\n                }\r\n\r\n                let cff = file.committedFromFile;\r\n                if(cff != null){\r\n                    cff.repository_file_version = oldFile.version;\r\n                    cff.workspaceFile.repository_file_version = oldFile.version;\r\n                    cff.workspaceFile.saved = false;                    \r\n                }\r\n\r\n            } else if (oldFile.filename != file.name) {\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: oldFile.id,\r\n                    type: \"intermediate\",\r\n                    version: oldFile.version,\r\n                    filename: file.name\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let oldFile of oldRepository.fileEntries) {\r\n            if (newIdToFileMap[oldFile.id] == null || newIdToFileMap[oldFile.id].state == \"deleted\") {\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: oldFile.id,\r\n                    type: \"delete\",\r\n                    version: oldFile.version\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        let newFileEntries: RepositoryFileEntry[] = this.files.filter(file => file.state != \"deleted\").map((synchroFile) => {\r\n            return {\r\n                filename: synchroFile.name,\r\n                id: synchroFile.idInsideRepository,\r\n                text: synchroFile.text,\r\n                version: synchroFile.repository_file_version\r\n            }\r\n        })\r\n\r\n\r\n        let commitFilesRequest: CommitFilesRequest = {\r\n            files: newFileEntries,\r\n            repositoryVersionBeforeCommit: oldRepository.version,\r\n            repository_id: oldRepository.id,\r\n            workspace_id: workspace.id,\r\n            repositoryHistoryEntry: repositoryHistoryEntry,\r\n            newlyVersionedFileIds: newlyVersionedFileIds\r\n        }\r\n\r\n        let that = this;\r\n        ajax(\"commitFiles\", commitFilesRequest, (cfr: CommitFilesResponse) => {\r\n            workspace.moduleStore.getModules(false).map(m => m.file).forEach((file) => {\r\n                if (newlyVersionedFileIds.indexOf(file.id) >= 0) {\r\n                    file.is_copy_of_id = file.id;\r\n                    file.repository_file_version = 1;\r\n                    file.identical_to_repository_version = true;\r\n                    file.saved = false;\r\n                }\r\n            });\r\n            that.manager.currentUserSynchroWorkspace.files.forEach(synchroFile => {\r\n                let workspaceFile = synchroFile.workspaceFile;\r\n                if(workspaceFile != null){\r\n                    if(synchroFile.text == workspaceFile.text && \r\n                        (synchroFile.repository_file_version != workspaceFile.repository_file_version  || synchroFile.identical_to_repository_version != workspaceFile.identical_to_repository_version)){\r\n                            workspaceFile.identical_to_repository_version = synchroFile.identical_to_repository_version;\r\n                            workspaceFile.repository_file_version = synchroFile.repository_file_version;\r\n                            workspaceFile.saved = false;\r\n                    }\r\n                }\r\n                if(workspaceFile.is_copy_of_id != null){\r\n                    synchroFile.idInsideRepository = workspaceFile.is_copy_of_id;\r\n                }\r\n            });\r\n            that.manager.main.networkManager.sendUpdates(() => {\r\n                callback(cfr.repository, null);\r\n            }, true);\r\n        }, (error: string) => { callback( null, error) })\r\n\r\n    }\r\n\r\n    getPatch(contentOld: string, contentNew: string): string {\r\n        //@ts-ignore\r\n        let dmp: diff_match_patch = new diff_match_patch();\r\n        //@ts-ignore\r\n        let patchObject: patch_obj[] = dmp.patch_make(contentOld, contentNew);\r\n\r\n        let patch: string = JSON.stringify(patchObject);\r\n\r\n        // Test patch and only return it if it is valid!\r\n        let deSerializedPatchObject = JSON.parse(patch);\r\n\r\n        let result: [string, boolean[]] = dmp.patch_apply(deSerializedPatchObject, contentOld);\r\n\r\n        if (result == null || result[0] == null) return null;\r\n\r\n        if (result[0] == contentNew) {\r\n            return patch;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    writeChangesToWorkspace() {\r\n        let workspace = this.copiedFromWorkspace;\r\n        let oldIdToModuleMap: { [id: number]: Module } = {};\r\n        let newIdToFileMap: { [id: number]: SynchroFile } = {};\r\n\r\n        workspace.moduleStore.getModules(false).forEach(m => {\r\n            if (m.file.is_copy_of_id != null) oldIdToModuleMap[m.file.is_copy_of_id] = m;\r\n        });\r\n\r\n        this.files.forEach(file => {\r\n            if (file.idInsideWorkspace != null) newIdToFileMap[file.idInsideWorkspace] = file;\r\n        });\r\n\r\n        let main = this.manager.main;\r\n        for (let module of workspace.moduleStore.getModules(false)) {\r\n\r\n            let synchroFile = newIdToFileMap[module.file.id];\r\n            if (synchroFile != null && synchroFile.state != 'deleted') {\r\n                module.file.text = synchroFile.monacoModel.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n                synchroFile.text = module.file.text;\r\n                module.file.is_copy_of_id = synchroFile.idInsideRepository;\r\n                module.file.repository_file_version = synchroFile.repository_file_version;\r\n                module.model.setValue(synchroFile.text);\r\n                module.file.identical_to_repository_version = synchroFile.identical_to_repository_version;\r\n                module.file.saved = false;\r\n                module.file.dirty = true;\r\n                module.file.name = synchroFile.name;\r\n                if(module.file.panelElement != null){\r\n                    module.file.panelElement.$htmlFirstLine.find('.jo_filename');\r\n                }\r\n            } else {\r\n\r\n                main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n                    }\r\n                });\r\n\r\n                this.files.splice(this.files.indexOf(synchroFile), 1);\r\n                workspace.moduleStore.removeModule(module);\r\n                main.projectExplorer.fileListPanel.removeElement(module);\r\n                if (main.currentWorkspace == workspace && main.projectExplorer.getCurrentlyEditedModule() == module) {\r\n                    main.projectExplorer.setModuleActive(null);\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n\r\n        for (let synchroFile of this.files) {\r\n            if (synchroFile.idInsideRepository != null && oldIdToModuleMap[synchroFile.idInsideRepository] == null) {\r\n\r\n                let f: File = {\r\n                    name: synchroFile.name,\r\n                    dirty: true,\r\n                    saved: true,\r\n                    text: synchroFile.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: synchroFile.idInsideRepository,\r\n                    repository_file_version: synchroFile.repository_file_version,\r\n                    identical_to_repository_version: synchroFile.identical_to_repository_version\r\n                };\r\n                let m = new Module(f, main);\r\n                workspace.moduleStore.putModule(m);\r\n                main.networkManager.sendCreateFile(m, workspace, main.user.id,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            }\r\n        }\r\n\r\n        main.networkManager.sendUpdates(null, true);\r\n\r\n        if (main.currentWorkspace == workspace) {\r\n            let cem = main.getCurrentlyEditedModule();\r\n            main.projectExplorer.setWorkspaceActive(workspace, true);\r\n\r\n            // if module hadn't been deleted while synchronizing:\r\n            if(workspace.moduleStore.getModules(false).indexOf(cem) >= 0){\r\n                main.projectExplorer.setModuleActive(cem);\r\n                main.projectExplorer.fileListPanel.select(cem, false);\r\n            }\r\n\r\n        }\r\n\r\n        workspace.moduleStore.dirty = true;\r\n\r\n    }\r\n\r\n}","import { RepositoryHistoryEntry, Repository, RepositoryHistoryFileEntry, RepositoryFileEntry } from \"../../communication/Data.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\nimport { makeDiv, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\n\r\nexport class HistoryElement {\r\n\r\n    $historyElementDiv: JQuery<HTMLDivElement>;\r\n\r\n    static currentlyDragged: HistoryElement;\r\n\r\n    constructor(private manager: SynchronizationManager, private repository: Repository, private repositoryHistoryEntry: RepositoryHistoryEntry, private historyEntryIndex: number) {\r\n\r\n        this.$historyElementDiv = makeDiv(null, \"jo_synchro_historyElement\");\r\n        this.$historyElementDiv.attr(\"draggable\", \"true\");\r\n\r\n        let that = this;\r\n        this.$historyElementDiv.on('drag', () => {\r\n            HistoryElement.currentlyDragged = that;\r\n        });\r\n\r\n        let line1 = makeDiv(null, \"jo_synchro_historyElementLine1\");\r\n        line1.append(jQuery(`<div class=\"jo_synchro_he_version\">V ${repositoryHistoryEntry.version}</div>`));\r\n        line1.append(jQuery(`<div class=\"jo_synchro_he_name\">${repositoryHistoryEntry.name}</div>`));\r\n        this.$historyElementDiv.append(line1);\r\n\r\n        let line2 = makeDiv(null, \"jo_synchro_historyElementLine2\");\r\n        line2.append(jQuery(`<div class=\"jo_synchro_he_timestamp\">${repositoryHistoryEntry.timestamp}</div>`))\r\n        this.$historyElementDiv.append(line2);\r\n\r\n        let line3 = makeDiv(null, \"jo_synchro_historyElementLine3\");\r\n        line3.append(jQuery(`<div class=\"jo_synchro_he_comment\">${repositoryHistoryEntry.comment}</div>`))\r\n        this.$historyElementDiv.append(line3);\r\n\r\n        manager.$historyScrollDiv.prepend(this.$historyElementDiv);\r\n\r\n        this.$historyElementDiv.on(\"click contextmenu\", (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([\r\n                {\r\n                    caption: \"Auf der linken Seite darstellen\",\r\n                    callback: () => {\r\n                        let sw = new SynchroWorkspace(this.manager).copyFromHistoryElement(this);\r\n                        this.manager.leftSynchroWorkspace = sw;\r\n                        this.manager.setupSynchronizationListElements();\r\n                    }\r\n                },\r\n                {\r\n                    caption: \"Auf der rechten Seite darstellen\",\r\n                    callback: () => {\r\n                        let sw = new SynchroWorkspace(this.manager).copyFromHistoryElement(this);\r\n                        this.manager.rightSynchroWorkspace = sw;\r\n                        this.manager.setupSynchronizationListElements();\r\n                    }\r\n                },\r\n            ],\r\n                ev.pageX + 2, ev.pageY + 2)\r\n        });\r\n\r\n    }\r\n\r\n    getRepositoryState(): Repository {\r\n\r\n        let entries = this.repository.historyEntries;\r\n\r\n        // get last intermediate state\r\n        let startIndex = this.historyEntryIndex;\r\n\r\n        while (startIndex > 0 && !(entries[startIndex].isIntermediateEntry)) {\r\n            startIndex--;\r\n        }\r\n\r\n        let files: RepositoryFileEntry[] = [];\r\n\r\n        for (let index = startIndex; index <= this.historyEntryIndex; index++) {\r\n\r\n            let entry = entries[index];\r\n            for (let fileEntry of entry.historyFiles) {\r\n\r\n                if (entry.isIntermediateEntry) {\r\n                    this.setIntermediateState(fileEntry, files);\r\n                } else {\r\n                    switch (fileEntry.type) {\r\n                        case \"create\":\r\n                            this.createFile(fileEntry, files);\r\n                            break;\r\n                        case \"delete\":\r\n                            this.deleteFile(fileEntry, files);\r\n                            break;\r\n                        case \"change\":\r\n                            this.changeFile(fileEntry, files);\r\n                            break;\r\n                        case \"intermediate\":\r\n                            this.setIntermediateState(fileEntry, files);\r\n                            break;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let repository: Repository = Object.assign({}, this.repository);\r\n        repository.fileEntries = files;\r\n        repository.version = this.repositoryHistoryEntry.version;\r\n\r\n        return repository;\r\n\r\n    }\r\n\r\n    setIntermediateState(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = files.find(file => file.id == fileEntry.id);\r\n        if (file != null) {\r\n            file.text = fileEntry.content;\r\n            file.version = fileEntry.version;\r\n        }\r\n    }\r\n\r\n    changeFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = files.find(file => file.id == fileEntry.id);\r\n        if (file != null) {\r\n            if (fileEntry.content != null) {\r\n                //@ts-ignore\r\n                let patch: patch_obj[] = JSON.parse(fileEntry.content);\r\n                let oldText = file.text;\r\n                //@ts-ignore\r\n                let dmp: diff_match_patch = new diff_match_patch();\r\n                let newText: [string, boolean[]] = dmp.patch_apply(patch, oldText);\r\n                file.text = newText[0];\r\n                file.version = fileEntry.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let index: number = files.findIndex(file => file.id == fileEntry.id);\r\n        if (index != null) {\r\n            files.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    createFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = {\r\n            id: fileEntry.id,\r\n            text: fileEntry.content,\r\n            filename: fileEntry.filename,\r\n            version: fileEntry.version\r\n        }\r\n        files.push(file);\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TeachersWithClassesMI } from \"../../administration/TeachersWithClasses.js\";\r\nimport { RepositoryFileEntry } from \"../../communication/Data.js\";\r\nimport { File } from \"../../compiler/parser/Module.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\nimport { SynchroFile, SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\n\r\ntype ButtonKind = \"create\" | \"delete\" | \"update\" | \"commit\" | \"updateAll\" | \"commitAll\";\r\nexport type LeftRight = \"left\" | \"right\";\r\n\r\n\r\nexport class SynchronizationListElement {\r\n\r\n    $leftFileDiv: JQuery<HTMLDivElement>;\r\n    $rightFileDiv: JQuery<HTMLDivElement>;\r\n    $buttonLeftDiv: JQuery<HTMLDivElement>;\r\n    $buttonRightDiv: JQuery<HTMLDivElement>;\r\n\r\n    $markAsMergedButtonDiv: JQuery<HTMLDivElement>;\r\n    $mergedFlag: JQuery<HTMLDivElement>;\r\n\r\n    editorState: monaco.editor.IDiffEditorViewState;\r\n\r\n    $buttons: JQuery<HTMLDivElement>[] = [];\r\n\r\n    constructor(private manager: SynchronizationManager, public leftSynchroFile: SynchroFile, public rightSynchroFile: SynchroFile,\r\n        public leftSynchroWorkspace: SynchroWorkspace, public rightSynchroWorkspace: SynchroWorkspace) {\r\n\r\n        this.$leftFileDiv = makeDiv(null, \"jo_synchro_workspaceFileDiv jo_synchro_listDiv\");\r\n        this.$buttonLeftDiv = makeDiv(null, \"jo_synchro_buttonDiv jo_synchro_listDiv jo_synchro_buttonLeftDiv\");\r\n        this.$buttonRightDiv = makeDiv(null, \"jo_synchro_buttonDiv jo_synchro_listDiv jo_synchro_buttonRightDiv\");\r\n        this.$rightFileDiv = makeDiv(null, \"jo_synchro_repositoryFileDiv jo_synchro_listDiv\");\r\n        manager.$fileListDivs[0].append(this.$leftFileDiv);\r\n        manager.$fileListDivs[1].append(this.$buttonLeftDiv);\r\n        manager.$fileListDivs[2].append(this.$buttonRightDiv);\r\n        manager.$fileListDivs[3].append(this.$rightFileDiv);\r\n\r\n        if (leftSynchroFile != null && leftSynchroFile.state != \"original\") this.$leftFileDiv.addClass('jo_dirty');\r\n        if (rightSynchroFile != null && rightSynchroFile.state != \"original\") this.$rightFileDiv.addClass('jo_dirty');\r\n\r\n\r\n\r\n        let allDivs: JQuery<HTMLDivElement>[] = [this.$leftFileDiv, this.$buttonLeftDiv, this.$buttonRightDiv, this.$rightFileDiv];\r\n\r\n        let that = this;\r\n\r\n        for (let $div of allDivs) {\r\n            $div.on(\"mouseenter\", () => {\r\n                for (let $div of allDivs) $div.addClass('jo_synchro_hoverLine');\r\n            });\r\n            $div.on(\"mouseleave\", () => {\r\n                for (let $div of allDivs) $div.removeClass('jo_synchro_hoverLine').removeClass(\"jo_synchro_hoverActiveLine\");\r\n            });\r\n\r\n            $div.on(\"mousedown\", () => {\r\n                for (let $div of allDivs) $div.addClass('jo_synchro_hoverActiveLine')\r\n            });\r\n            $div.on(\"mouseup\", () => { for (let $div of allDivs) $div.removeClass('jo_synchro_hoverActiveLine') });\r\n\r\n            $div.on(\"click\", () => {\r\n                that.select();\r\n            })\r\n        }\r\n\r\n        this.createLeftFileModel();\r\n        this.createRightFileModel();\r\n\r\n    }\r\n\r\n\r\n    select() {\r\n        let allDivs: JQuery<HTMLDivElement>[] = [this.$leftFileDiv, this.$buttonLeftDiv, this.$buttonRightDiv, this.$rightFileDiv];\r\n        jQuery('#jo_synchro_fileListOuter').find('.jo_synchro_activeLine').removeClass('jo_synchro_activeLine');\r\n        for (let $div of allDivs) $div.addClass('jo_synchro_activeLine');\r\n\r\n        if (this.manager.lastShownSynchronizationElement != null) {\r\n            this.manager.lastShownSynchronizationElement.editorState = this.manager.diffEditor.saveViewState()\r\n        }\r\n\r\n        this.manager.lastShownSynchronizationElement = this;\r\n\r\n        this.setEditorModel();\r\n\r\n        if (this.editorState != null) {\r\n            this.manager.diffEditor.restoreViewState(this.editorState);\r\n        }\r\n\r\n        this.manager.diffEditor.updateOptions({\r\n            originalEditable: this.leftSynchroFile?.originalText != null\r\n        })\r\n\r\n    }\r\n\r\n    createRightFileModel() {\r\n        if (this.rightSynchroFile != null) {\r\n            this.rightSynchroFile.monacoModel = monaco.editor.createModel(this.rightSynchroFile.text, \"myJava\");\r\n        }\r\n    }\r\n\r\n    setEditorModel() {\r\n        if (this.manager.lastShownSynchronizationElement == this) {\r\n            this.manager.diffEditor.setModel({\r\n                original: this.leftSynchroFile == null ? this.getEmptyMonacoModel() : this.leftSynchroFile.monacoModel,\r\n                modified: this.rightSynchroFile == null ? this.getEmptyMonacoModel() : this.rightSynchroFile.monacoModel\r\n            });\r\n        }\r\n    }\r\n\r\n    getEmptyMonacoModel(): monaco.editor.ITextModel {\r\n        return monaco.editor.createModel(\"\", \"myJava\")\r\n    }\r\n\r\n    pending: boolean = false;\r\n    createLeftFileModel() {\r\n        if (this.leftSynchroFile != null) {\r\n            this.leftSynchroFile.monacoModel = monaco.editor.createModel(this.leftSynchroFile.text, \"myJava\");\r\n            this.leftSynchroFile.monacoModel.onDidChangeContent((event) => {\r\n\r\n                // throttle comparison to avoid editor-slowdown\r\n                if (!this.pending) {\r\n                    this.pending = true;\r\n                    setTimeout(() => {\r\n                        if (this.leftSynchroFile != null && this.leftSynchroFile?.state != \"deleted\") {\r\n\r\n                            let newText: string = this.leftSynchroFile.monacoModel.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n                            if (this.leftSynchroFile?.originalText != null &&\r\n                                newText == this.leftSynchroFile.originalText) {\r\n                                this.$leftFileDiv.removeClass(\"jo_dirty\");\r\n                                this.leftSynchroFile.state = \"original\";\r\n                            } else {\r\n                                this.$leftFileDiv.addClass(\"jo_dirty\");\r\n                                this.leftSynchroFile.state = \"changed\";\r\n                                this.leftSynchroFile.identical_to_repository_version = false;\r\n                            }\r\n                            this.manager.onContentChanged(\"left\");\r\n                            this.leftSynchroFile.text = newText;\r\n\r\n                            this.compareFilesAndAdaptGUI();\r\n                        }\r\n                        this.pending = false;\r\n                    }, 700);\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    onFileChanged(leftRight: LeftRight) {\r\n        if (leftRight == \"left\") {\r\n            this.createLeftFileModel();\r\n        } else {\r\n            this.createRightFileModel();\r\n        }\r\n        this.setEditorModel();\r\n        this.compareFilesAndAdaptGUI();\r\n        switch (leftRight) {\r\n            case \"left\":\r\n                if (this.leftSynchroFile != null && this.leftSynchroFile.state != \"original\") {\r\n                    this.$leftFileDiv.addClass(\"jo_dirty\");\r\n                } else {\r\n                    this.$leftFileDiv.removeClass(\"jo_dirty\");\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if (this.rightSynchroFile != null && this.rightSynchroFile.state != \"original\") {\r\n                    this.$rightFileDiv.addClass(\"jo_dirty\");\r\n                } else {\r\n                    this.$rightFileDiv.removeClass(\"jo_dirty\");\r\n                }\r\n                break;\r\n        }\r\n        this.manager.onContentChanged(leftRight);\r\n    }\r\n\r\n    compareFilesAndAdaptGUI() {\r\n\r\n        this.emptyGUI();\r\n        let that = this;\r\n\r\n        let leftCaption: string = \"---\";\r\n        let leftVersionCaption: string = \"\";\r\n\r\n        let needsMerge = false;\r\n\r\n        if (this.leftSynchroFile != null) {\r\n            leftCaption = this.leftSynchroFile.name;\r\n            if (this.leftSynchroFile.repository_file_version == null) {\r\n                leftVersionCaption = \"(ohne Version)\";\r\n            } else {\r\n                leftVersionCaption = \"(V \" + this.leftSynchroFile.repository_file_version;\r\n                if (!(this.leftSynchroFile.identical_to_repository_version || this.leftSynchroFile?.text == this.rightSynchroFile?.text)) {\r\n                    leftVersionCaption += '<span class=\"jo_synchro_withChanges\"> mit Änderungen</span>';\r\n                }\r\n                if (this.rightSynchroFile != null && this.leftSynchroFile.synchroWorkspace.isWritable()) {\r\n                    if (this.rightSynchroFile.repository_file_version > this.leftSynchroFile.repository_file_version) {\r\n                        needsMerge = !this.leftSynchroFile.markedAsMerged;\r\n                    }\r\n                }\r\n\r\n                leftVersionCaption += \")\";\r\n            }\r\n\r\n            if (this.leftSynchroFile.state == \"deleted\") {\r\n                leftCaption += \" - GELÖSCHT\";\r\n                leftVersionCaption = \"\";\r\n            }\r\n        }\r\n\r\n        let rightCaption = this.rightSynchroFile == null ? \"---\" : this.rightSynchroFile.name;\r\n        let rightVersionCaption = this.rightSynchroFile == null ? \"\" : \"(V \" + this.rightSynchroFile.repository_file_version + \")\";\r\n        if (this.rightSynchroFile?.state == \"deleted\") {\r\n            rightCaption += \" - GELÖSCHT\";\r\n            rightVersionCaption = \"\";\r\n        }\r\n\r\n        let $spacer1 = makeDiv(\"\", \"jo_synchro_5px_spacer\");\r\n        let $spacer2 = makeDiv(\"\", \"jo_synchro_5px_spacer\");\r\n\r\n        this.$buttonRightDiv.append($spacer2);\r\n\r\n        if (this.leftSynchroFile == null) {\r\n            if (this.leftSynchroWorkspace.isWritable() && that.rightSynchroFile.state != \"deleted\") {\r\n                this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"create\", \"left\", () => {\r\n                    that.leftSynchroFile = {\r\n                        name: that.rightSynchroFile.name,\r\n                        idInsideRepository: that.rightSynchroFile.idInsideRepository,\r\n                        repository_file_version: that.rightSynchroFile.repository_file_version,\r\n                        identical_to_repository_version: true,\r\n                        state: \"new\",\r\n                        markedAsMerged: false,\r\n                        text: this.rightSynchroFile.text,\r\n                        synchroWorkspace: that.leftSynchroWorkspace,\r\n                        idInsideWorkspace: null,\r\n                        workspaceFile: null,\r\n                        originalText: null,\r\n                        monacoModel: null\r\n                    };\r\n                    that.leftSynchroWorkspace.files.push(that.leftSynchroFile);\r\n                    that.onFileChanged(\"left\");\r\n                }, false));\r\n            }\r\n            if (that.rightSynchroWorkspace.isWritable() && that.rightSynchroFile.state != \"deleted\") {\r\n                this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"delete\", \"right\", () => {\r\n                    that.rightSynchroFile.state = \"deleted\";\r\n                    that.onFileChanged(\"right\");\r\n                }, false));\r\n            }\r\n        } else if (this.rightSynchroFile == null) {\r\n            if (this.rightSynchroWorkspace.isWritable() && that.leftSynchroFile.state != \"deleted\") {\r\n                this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"create\", \"right\", () => {\r\n                    that.rightSynchroFile = {\r\n                        name: that.leftSynchroFile.name,\r\n                        committedFromFile: that.leftSynchroWorkspace.isWritable() ? that.leftSynchroFile : null,\r\n                        idInsideRepository: that.leftSynchroFile.idInsideRepository,\r\n                        repository_file_version: that.leftSynchroFile.repository_file_version == null ? 1 : that.leftSynchroFile.repository_file_version,\r\n                        identical_to_repository_version: that.leftSynchroFile.identical_to_repository_version,\r\n                        state: \"new\",\r\n                        markedAsMerged: false,\r\n                        text: this.leftSynchroFile.text,\r\n                        synchroWorkspace: that.rightSynchroWorkspace,\r\n                        idInsideWorkspace: this.leftSynchroFile.idInsideWorkspace,\r\n                        workspaceFile: null,\r\n                        originalText: null,\r\n                        monacoModel: null\r\n                    }\r\n                    that.rightSynchroWorkspace.files.push(that.rightSynchroFile);\r\n                    that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                    that.leftSynchroFile.identical_to_repository_version = true;\r\n                    that.onFileChanged(\"right\");\r\n                }, false));\r\n            }\r\n            if (that.leftSynchroWorkspace.isWritable() && that.leftSynchroFile.state != \"deleted\") {\r\n                this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"delete\", \"left\", () => {\r\n                    that.leftSynchroFile.state = \"deleted\";\r\n                    that.onFileChanged(\"left\");\r\n                },false));\r\n            }\r\n        } else {\r\n            // Both SynchroFiles != null\r\n            let isSynchronized: boolean = true;\r\n\r\n            let isRename: boolean = this.leftSynchroFile.name != this.rightSynchroFile.name;\r\n            let isUpdateOrCommit: boolean = this.leftSynchroFile.text != this.rightSynchroFile.text;\r\n            let onlyRename = isRename && !isUpdateOrCommit;\r\n\r\n            if (this.leftSynchroFile.repository_file_version == this.rightSynchroFile.repository_file_version) {\r\n                if (isUpdateOrCommit || isRename) {\r\n                    isSynchronized = false;\r\n                }\r\n            } else {\r\n                isSynchronized = false;\r\n            }\r\n\r\n            if (isSynchronized) {\r\n                this.$buttonLeftDiv.append(jQuery('<div>synchron - </div>'));\r\n                this.$buttonRightDiv.append(jQuery('<div> - synchron</div>'));\r\n            } else {\r\n                if (this.leftSynchroWorkspace.isWritable()) {\r\n                    this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"update\", \"left\", () => {\r\n                        that.leftSynchroFile.text = that.rightSynchroFile.text;\r\n                        that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                        that.leftSynchroFile.identical_to_repository_version = true;\r\n                        that.leftSynchroFile.name = that.rightSynchroFile.name;\r\n                        that.leftSynchroFile.state = \"changed\";\r\n                        that.onFileChanged(\"left\");\r\n                    }, onlyRename));\r\n                }\r\n                if (this.rightSynchroWorkspace.isWritable() && !needsMerge) {\r\n                    this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"commit\", \"right\", () => {\r\n                        that.rightSynchroFile.text = that.leftSynchroFile.text;\r\n                        that.rightSynchroFile.name = that.leftSynchroFile.name;\r\n                        that.rightSynchroFile.repository_file_version++;\r\n                        if (that.leftSynchroWorkspace.isWritable()) that.rightSynchroFile.committedFromFile = that.leftSynchroFile;\r\n                        if (that.leftSynchroWorkspace.isWritable()) {\r\n                            that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                            this.leftSynchroFile.identical_to_repository_version = true;\r\n                        }\r\n                        that.rightSynchroFile.state = \"changed\";\r\n                        that.onFileChanged(\"right\");\r\n                    }, onlyRename));\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.$buttonLeftDiv.append($spacer1);\r\n\r\n\r\n        this.$leftFileDiv.append(jQuery(`<div class=\"jo_synchro_filename\">${leftCaption}<span class=\"jo_synchro_fileVersion\">${leftVersionCaption}</span></div>`));\r\n        this.$rightFileDiv.append(jQuery(`<div class=\"jo_synchro_filename\">${rightCaption}<span class=\"jo_synchro_fileVersion\">${rightVersionCaption}</span></div>`));\r\n\r\n        if (needsMerge) {\r\n            this.$markAsMergedButtonDiv = jQuery(`<div class=\"jo_synchro_button jo_synchro_markAsMergedButton\">Als \"merged\" markieren</div>`);\r\n            this.$leftFileDiv.append(this.$markAsMergedButtonDiv);\r\n            this.$markAsMergedButtonDiv.on(\"click\", (e) => {\r\n                e.stopPropagation();\r\n                this.leftSynchroFile.markedAsMerged = true;\r\n                this.compareFilesAndAdaptGUI();\r\n            });\r\n        }\r\n\r\n        if (this.leftSynchroFile != null && this.leftSynchroFile.markedAsMerged) {\r\n            this.showMergedDiv();\r\n        }\r\n\r\n        this.manager.updateCenterButtons();\r\n\r\n    }\r\n\r\n    showMergedDiv() {\r\n        let $mergedDiv = jQuery(`<div class=\"jo_synchro_mergedDiv\">merged</div><div class=\"img_errorfree\"></div>`);\r\n        this.$leftFileDiv.append($mergedDiv);\r\n    }\r\n\r\n    emptyGUI() {\r\n        this.$leftFileDiv.empty();\r\n        this.$rightFileDiv.empty();\r\n        this.$buttonLeftDiv.empty();\r\n        this.$buttonRightDiv.empty();\r\n    }\r\n\r\n    static makeButton(kind: ButtonKind, arrowDirection: LeftRight, callback: () => void, onlyRename: boolean): JQuery<HTMLDivElement> {\r\n\r\n        let caption = \"\";\r\n        let klass = \"\";\r\n\r\n        switch (kind) {\r\n            case \"commit\":\r\n                caption = onlyRename ? \"rename\" : \"commit\"; klass = \"jo_synchro_commitButton\"; break;\r\n            case \"commitAll\":\r\n                caption = \"commit all\"; klass = \"jo_synchro_commitButton\"; break;\r\n            case \"update\":\r\n                caption = onlyRename ? \"rename\" : \"update\"; klass = \"jo_synchro_updateButton\"; break;\r\n            case \"updateAll\":\r\n                caption = \"update all\"; klass = \"jo_synchro_updateButton\"; break;\r\n            case \"create\": caption = \"create\"; klass = \"jo_synchro_createButton\"; break;\r\n            case \"delete\": caption = \"delete\"; klass = \"jo_synchro_deleteButton\"; break;\r\n        }\r\n\r\n        switch (arrowDirection) {\r\n            case \"left\": klass += \" jo_synchro_arrowLeft\"; break;\r\n            case \"right\": klass += \" jo_synchro_arrowRight\"; break;\r\n        }\r\n\r\n        let div: JQuery<HTMLDivElement> = jQuery(`<div class=\"jo_synchro_button ${klass}\">${caption}</div>`);\r\n\r\n        div.on(\"click\", (e) => {\r\n            e.stopPropagation();\r\n            if (callback != null) callback();\r\n        });\r\n\r\n        div.on(\"mousedown\", (e) => { e.stopPropagation() })\r\n\r\n        return div;\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { GetRepositoryRequest, GetRepositoryResponse, Repository, GainRepositoryLockRequest, GainRepositoryLockResponse, LeaseRepositoryLockRequest, LeaseRepositoryLockResponse } from \"../../communication/Data.js\";\r\nimport { EmbeddedSlider } from \"../../embedded/EmbeddedSlider.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { HistoryElement } from \"./HistoryElement.js\";\r\nimport { RepositoryTool } from \"./RepositoryTool.js\";\r\nimport { LeftRight, SynchronizationListElement } from \"./SynchronizationListElement.js\";\r\nimport { SynchroFile, SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\nimport { Dialog } from \"../../main/gui/Dialog.js\";\r\n\r\n\r\ntype FileElement = {\r\n    id: number,\r\n    name: string,\r\n    leftSynchroFile: SynchroFile,\r\n    rightSynchroFile: SynchroFile\r\n}\r\n\r\nexport class SynchronizationManager {\r\n\r\n    $mainHeadingDiv: JQuery<HTMLDivElement>; // heading \"Java-Online: Synchronize repositories\"\r\n\r\n    $writeWorkspaceChangesButton: JQuery<HTMLDivElement>;\r\n    $writeRepositoryChangesButton: JQuery<HTMLDivElement>;\r\n\r\n    $backToWorkspaceButton: JQuery<HTMLDivElement>;\r\n    $backToCurrentRepositoryVersionButton: JQuery<HTMLDivElement>;\r\n\r\n    $exitButton: JQuery<HTMLDivElement>;\r\n\r\n    $belowMainHeadingDiv: JQuery<HTMLDivElement>; // contains all elements below main heading\r\n\r\n    $leftDiv: JQuery<HTMLDivElement>; // contains headings, file lists and editors\r\n    $historyOuterDiv: JQuery<HTMLDivElement>; // contains history\r\n    $historyScrollDiv: JQuery<HTMLDivElement>;\r\n\r\n    $leftUpperDiv: JQuery<HTMLDivElement>; // contains file list header, file list and file list footer\r\n\r\n    $fileListHeaderOuterDiv: JQuery<HTMLDivElement>;\r\n    $fileListHeaderDivs: JQuery<HTMLDivElement>[] = [];\r\n\r\n    $fileListHeaderContainerRight: JQuery<HTMLDivElement>;\r\n\r\n    $updateAllButton: JQuery<HTMLElement>;\r\n    $commitAllButton: JQuery<HTMLElement>;\r\n\r\n\r\n    $fileListOuterDiv: JQuery<HTMLDivElement>;\r\n    $fileListDivs: JQuery<HTMLDivElement>[] = [];\r\n\r\n    $fileListFooterDiv: JQuery<HTMLDivElement>;\r\n\r\n    $editorDiv: JQuery<HTMLDivElement>;\r\n\r\n    guiReady: boolean = false;\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    currentUserSynchroWorkspace: SynchroWorkspace;\r\n    currentRepositorySynchroWorkspace: SynchroWorkspace;\r\n    currentRepository: Repository;\r\n\r\n    leftSynchroWorkspace: SynchroWorkspace;\r\n    rightSynchroWorkspace: SynchroWorkspace;\r\n\r\n    lastShownSynchronizationElement: SynchronizationListElement;\r\n    synchronizationListElements: SynchronizationListElement[] = [];\r\n\r\n    lastShownHistoryElement: HistoryElement;\r\n    historyElements: HistoryElement[] = [];\r\n\r\n    timer: any;\r\n\r\n    repositoryIsWritable: boolean;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    synchronizeWithWorkspace(workspace: Workspace) {\r\n\r\n        this.gainRepositoryLock(workspace.repository_id, (success) => {\r\n            if (success) {\r\n                this.repositoryIsWritable = true;\r\n                this.attachToWorkspaceAndRepository(workspace);\r\n                this.show();\r\n\r\n                this.timer = setInterval(() => {\r\n\r\n                    this.gainRepositoryLock(this.currentRepository.id, (success) => {\r\n                        if (!success) {\r\n                            alert('Der Server ist temporär nicht erreichbar.');\r\n                            window.history.back();\r\n                        }\r\n                    })\r\n\r\n                }, 10000)\r\n            } else {\r\n                // User has no write permission to repository => no lock needed.\r\n                this.attachToWorkspaceAndRepository(workspace);\r\n                this.repositoryIsWritable = false;\r\n                this.show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    gainRepositoryLock(repository_id: number, callback: (success: boolean) => void) {\r\n        let request: GainRepositoryLockRequest = { repository_id: repository_id };\r\n        ajax('gainRepositoryLock', request, (response: GainRepositoryLockResponse) => {\r\n            callback(response.success);\r\n            // console.log(\"Lock for repository_id \" + repository_id + \" has been granted.\")\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(false);\r\n        });\r\n    }\r\n\r\n    attachToWorkspaceAndRepository(workspace: Workspace) {\r\n\r\n        this.currentUserSynchroWorkspace = new SynchroWorkspace(this).copyFromWorkspace(workspace);\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n\r\n        let that = this;\r\n\r\n        let request: GetRepositoryRequest = { repository_id: workspace.repository_id, workspace_id: workspace.id };\r\n        ajax(\"getRepository\", request, (response: GetRepositoryResponse) => {\r\n\r\n            that.attachToRepository(response.repository);\r\n\r\n        }, (message: string) => {\r\n            alert(message);\r\n            window.history.back();\r\n        })\r\n\r\n    }\r\n\r\n    attachToRepository(repository: Repository) {\r\n        this.currentRepository = repository;\r\n        RepositoryTool.deserializeRepository(this.currentRepository);\r\n        this.currentRepositorySynchroWorkspace = new SynchroWorkspace(this).copyFromRepository(this.currentRepository, true);\r\n\r\n        this.rightSynchroWorkspace = this.currentRepositorySynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.setupHistoryElements();\r\n    }\r\n\r\n    setupHistoryElements() {\r\n        this.$historyScrollDiv.empty();\r\n        this.historyElements = [];\r\n        this.lastShownHistoryElement = null;\r\n\r\n        this.currentRepository.historyEntries.forEach((he, index) => {\r\n            this.historyElements.push(new HistoryElement(this, this.currentRepository, he, index));\r\n        });\r\n    }\r\n\r\n    setupSynchronizationListElements() {\r\n\r\n        let lastSynchroFileLeft = null;\r\n        let lastSynchroFileRight = null;\r\n        if (this.lastShownSynchronizationElement != null) {\r\n            lastSynchroFileLeft = this.lastShownSynchronizationElement.leftSynchroFile;\r\n            lastSynchroFileRight = this.lastShownSynchronizationElement.rightSynchroFile;\r\n        }\r\n\r\n        this.$fileListDivs.forEach($div => $div.empty());\r\n\r\n        this.synchronizationListElements.forEach(se => se.emptyGUI());\r\n        this.synchronizationListElements = [];\r\n        this.lastShownSynchronizationElement = null;\r\n\r\n        let fileElements: FileElement[] = [];\r\n        let synchroFileMap: { [id: string]: FileElement } = {};\r\n\r\n        this.leftSynchroWorkspace.files.forEach(sfile => {\r\n            let fileElement = {\r\n                id: sfile.idInsideRepository,\r\n                name: sfile.name,\r\n                leftSynchroFile: sfile,\r\n                rightSynchroFile: null\r\n            };\r\n\r\n            fileElements.push(fileElement);\r\n            if (sfile.idInsideRepository != null) {\r\n                synchroFileMap[\"r\" + sfile.idInsideRepository] = fileElement;\r\n            } else {\r\n                synchroFileMap[\"w\" + sfile.idInsideWorkspace] = fileElement;\r\n            }\r\n        });\r\n\r\n        this.rightSynchroWorkspace.files.forEach(sfile => {\r\n            let fileElement: FileElement = null;\r\n            if (sfile.idInsideRepository != null){\r\n                fileElement = synchroFileMap[\"r\" + sfile.idInsideRepository];\r\n            }  else {\r\n                fileElement = synchroFileMap[\"w\" + sfile.idInsideWorkspace];\r\n            }\r\n            if (fileElement == null) {\r\n                fileElement = {\r\n                    id: sfile.idInsideRepository,\r\n                    name: sfile.name,\r\n                    leftSynchroFile: null,\r\n                    rightSynchroFile: sfile\r\n                };\r\n                fileElements.push(fileElement);\r\n            } else {\r\n                fileElement.rightSynchroFile = sfile;\r\n            }\r\n        });\r\n\r\n        fileElements.sort((fe1, fe2) => fe1.name.localeCompare(fe2.name));\r\n\r\n        fileElements.forEach(fe => {\r\n\r\n            let synchroListElement = new SynchronizationListElement(this, fe.leftSynchroFile, fe.rightSynchroFile, this.leftSynchroWorkspace, this.rightSynchroWorkspace);\r\n            this.synchronizationListElements.push(synchroListElement);\r\n            synchroListElement.compareFilesAndAdaptGUI();\r\n\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: monaco.editor.createModel(\"Wählen Sie oben eine Datei aus!\", \"myJava\"),\r\n            modified: monaco.editor.createModel(\"Wählen Sie oben eine Datei aus!\", \"myJava\")\r\n        });\r\n\r\n        this.diffEditor.updateOptions({\r\n            originalEditable: false\r\n        })\r\n\r\n        if (this.leftSynchroWorkspace == this.currentUserSynchroWorkspace) {\r\n            this.setHeader(\"left\", \"Dein Workspace:\");\r\n            this.$backToWorkspaceButton.hide();\r\n        } else {\r\n            this.setHeader(\"left\", this.leftSynchroWorkspace.name + \":\");\r\n            this.$backToWorkspaceButton.show();\r\n            this.$writeWorkspaceChangesButton.hide();\r\n        }\r\n\r\n        if (this.rightSynchroWorkspace == this.currentRepositorySynchroWorkspace) {\r\n            let writable: string = this.repositoryIsWritable ? \", mit Schreibzugriff\" : \", ohne Schreibzugriff\";\r\n            this.setHeader(\"right\", \"Repository (aktuelle Version\" + writable + \"):\");\r\n            this.$backToCurrentRepositoryVersionButton.hide();\r\n        } else {\r\n            this.setHeader(\"right\", this.rightSynchroWorkspace.name + \":\");\r\n            this.$backToCurrentRepositoryVersionButton.show();\r\n            this.$writeRepositoryChangesButton.hide();\r\n        }\r\n\r\n        jQuery('#jo_synchro_main_heading_text').text(`Synchronisieren mit Repository \"${this.currentRepository.name}\"`);\r\n\r\n        let lastFileSelected: boolean = false;\r\n        if (lastSynchroFileLeft != null || lastSynchroFileRight != null) {\r\n            for (let sle of this.synchronizationListElements) {\r\n                if (\r\n                    sle.leftSynchroFile != null && sle.leftSynchroFile == lastSynchroFileLeft ||\r\n                    sle.rightSynchroFile != null && sle.rightSynchroFile == lastSynchroFileRight\r\n                ) {\r\n                    sle.select();\r\n                    lastFileSelected = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!lastFileSelected && this.synchronizationListElements.length > 0) {\r\n            this.synchronizationListElements[0].select();\r\n        }\r\n\r\n    }\r\n\r\n    show() {\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        this.$writeWorkspaceChangesButton.hide();\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n        let that = this;\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n\r\n        clearInterval(this.timer);\r\n\r\n        if(this.currentRepository == null) return;   // Testuser...\r\n\r\n        let request: LeaseRepositoryLockRequest = { repository_id: this.currentRepository.id };\r\n        ajax('leaseRepositoryLock', request, (response: LeaseRepositoryLockResponse) => {\r\n            // console.log(\"Lock for repository_id \" + request.repository_id + \" has been released.\")\r\n        }, (message) => {\r\n        });\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        let that = this;\r\n\r\n        $synchroDiv.append(\r\n\r\n            this.$mainHeadingDiv = jQuery('<div id=\"jo_synchro_main_heading\"><span id=\"jo_synchro_main_heading_text\">Java-Online: Workspace mit Repository synchronisieren</span></div>'),\r\n\r\n            this.$belowMainHeadingDiv = makeDiv(\"jo_synchro_below_main_heading\"));\r\n\r\n        let $buttonsTopRightDiv = makeDiv(\"jo_synchro_buttonsTopRight\");\r\n        this.$mainHeadingDiv.append($buttonsTopRightDiv);\r\n\r\n        $buttonsTopRightDiv.append(this.$exitButton = jQuery('<div id=\"jo_synchro_exitButton\" class=\"jo_synchro_button\">Zurück zum Programmieren</div>'));\r\n\r\n        this.$exitButton.on('click', () => {\r\n            window.history.back();\r\n        });\r\n\r\n        this.$leftDiv = makeDiv(\"jo_synchro_leftDiv\");\r\n        this.$historyOuterDiv = makeDiv(\"jo_synchro_historyOuterDiv\");\r\n\r\n        this.$historyOuterDiv.append(jQuery('<div id=\"jo_synchro_historyHeader\"><div class=\"jo_synchro_tabHeading\">History:</div></div>)'));\r\n\r\n        this.$belowMainHeadingDiv.append(this.$leftDiv, this.$historyOuterDiv);\r\n\r\n        new EmbeddedSlider(this.$historyOuterDiv, true, false, () => { this.diffEditor.layout(); }).$sliderDiv.css('left', '-3px');\r\n        this.$historyOuterDiv.find('.joe_slider').css('position', 'absolute');\r\n\r\n        this.$historyScrollDiv = makeDiv(\"historyScrollDiv\", \"jo_scrollable\");\r\n        this.$historyOuterDiv.append(this.$historyScrollDiv);\r\n\r\n\r\n        this.$leftDiv.append(\r\n            this.$leftUpperDiv = makeDiv(\"jo_synchro_leftUpper\"),\r\n            this.$editorDiv = makeDiv(\"jo_synchro_editor\")\r\n        );\r\n\r\n        this.$leftUpperDiv.append(\r\n            this.$fileListHeaderOuterDiv = makeDiv(\"jo_synchro_fileListHeaderOuter\"),\r\n            this.$fileListOuterDiv = makeDiv(\"jo_synchro_fileListOuter\", \"jo_scrollable\"),\r\n            this.$fileListFooterDiv = makeDiv(\"jo_synchro_fileListFooter\")\r\n        )\r\n\r\n        this.$fileListHeaderContainerRight = makeDiv(null, \"jo_synchro_fileListHeaderContainerRight\");\r\n        let fileListHeaderRight = makeDiv(null, \"jo_synchro_fileListHeader\");\r\n        this.$fileListHeaderContainerRight.append(fileListHeaderRight);\r\n\r\n        let $fileListHeaderCenter = makeDiv(null, \"jo_synchro_fileListHeaderCenter\");\r\n        $fileListHeaderCenter.append(this.$updateAllButton = SynchronizationListElement.makeButton(\"updateAll\", \"left\", () => { that.updateAll() }, false));\r\n        $fileListHeaderCenter.append(this.$commitAllButton = SynchronizationListElement.makeButton(\"commitAll\", \"right\", () => { that.commitAll() }, false));\r\n\r\n        this.$fileListHeaderDivs.push(makeDiv(null, \"jo_synchro_fileListHeader\", \"\", { \"flex\": \"2 0\" }), $fileListHeaderCenter, this.$fileListHeaderContainerRight, makeDiv(null, \"jo_synchro_scrollbarPlaceholder\"));\r\n        this.$fileListDivs.push(makeDiv(null, \"jo_synchro_fileList\"), makeDiv(null, \"jo_synchro_fileListButtonsLeft\"), makeDiv(null, \"jo_synchro_fileListButtonsRight\"), makeDiv(null, \"jo_synchro_fileList\"));\r\n\r\n        this.$fileListHeaderOuterDiv.append(this.$fileListHeaderDivs);\r\n        this.$fileListOuterDiv.append(this.$fileListDivs);\r\n\r\n        this.$fileListHeaderDivs[0].append(\"<div class='jo_synchro_tabHeading'>Dein Workspace:</div>\");\r\n        fileListHeaderRight.append(\"<div class='jo_synchro_tabHeading'>Repository (aktuelle Version):</div>\");\r\n\r\n\r\n        this.$fileListHeaderDivs[0].append(this.$backToWorkspaceButton = jQuery('<div class=\"jo_synchro_button jo_synchro_backToButton\">Zeige eigenen Workspace</div>'));\r\n        this.$backToWorkspaceButton.on('click', () => {\r\n            that.backToWorkspace();\r\n        });\r\n        this.$backToWorkspaceButton.hide();\r\n\r\n\r\n\r\n\r\n        fileListHeaderRight.append(this.$backToCurrentRepositoryVersionButton = jQuery('<div class=\"jo_synchro_button jo_synchro_backToButton\">Zeige aktuelle Repository-Version</div>'));\r\n        this.$backToCurrentRepositoryVersionButton.on('click', () => {\r\n            that.backToCurrentRepositoryVersion();\r\n        });\r\n        this.$backToWorkspaceButton.hide();\r\n\r\n        this.$fileListHeaderDivs[0].append(this.$writeWorkspaceChangesButton = jQuery('<div id=\"jo_synchro_writeChangesButton\" class=\"jo_synchro_button\">Änderungen am Workspace (rot!) speichern</div>'));\r\n        this.$writeWorkspaceChangesButton.on('click', () => {\r\n            that.writeWorkspaceChanges();\r\n        });\r\n        this.$writeWorkspaceChangesButton.hide();\r\n\r\n        fileListHeaderRight.append(this.$writeRepositoryChangesButton = jQuery('<div id=\"jo_synchro_writeChangesButton\" class=\"jo_synchro_button\">Änderungen am Repository (rot!) speichern</div>'));\r\n        this.$writeRepositoryChangesButton.on('click', () => {\r\n            that.writeRepositoryChanges();\r\n        });\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n\r\n\r\n\r\n        let horizontalSlider = new EmbeddedSlider(this.$editorDiv, true, true, () => { this.diffEditor.layout(); });\r\n        horizontalSlider.setColor('var(--slider)');\r\n\r\n        this.makeDroppable(\"left\", this.$fileListDivs[0]);\r\n        this.makeDroppable(\"right\", this.$fileListDivs[3]);\r\n\r\n        this.initEditor();\r\n    }\r\n\r\n    backToWorkspace() {\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.onContentChanged(\"left\");\r\n    }\r\n\r\n    backToCurrentRepositoryVersion() {\r\n        this.rightSynchroWorkspace = this.currentRepositorySynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.onContentChanged(\"right\");\r\n    }\r\n\r\n    makeDroppable(leftRight: LeftRight, $dropZoneDiv: JQuery<HTMLDivElement>) {\r\n        let that = this;\r\n        $dropZoneDiv.on(\"dragover\", (e) => {\r\n            $dropZoneDiv.addClass('jo_synchro_dragZone');\r\n            e.preventDefault();\r\n        });\r\n        $dropZoneDiv.on(\"dragleave\", () => {\r\n            $dropZoneDiv.removeClass('jo_synchro_dragZone');\r\n        });\r\n        $dropZoneDiv.on(\"drop\", (e) => {\r\n            let sw = new SynchroWorkspace(that).copyFromHistoryElement(HistoryElement.currentlyDragged);\r\n            switch (leftRight) {\r\n                case \"left\":\r\n                    that.leftSynchroWorkspace = sw;\r\n                    break;\r\n                case \"right\":\r\n                    that.rightSynchroWorkspace = sw;\r\n                    break;\r\n            }\r\n            that.setupSynchronizationListElements();\r\n            $dropZoneDiv.removeClass('jo_synchro_dragZone');\r\n        })\r\n\r\n    }\r\n\r\n    setHeader(leftRight: LeftRight, caption: string) {\r\n        let index: number = leftRight == \"left\" ? 0 : 2;\r\n        this.$fileListHeaderDivs[index].find('.jo_synchro_tabHeading').text(caption);\r\n    }\r\n\r\n    writeRepositoryChanges() {\r\n\r\n        let that = this;\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n        let $dialogDiv = makeDiv(\"\", \"jo_synchro_commitDialogDiv\");\r\n        $dialogDiv.hide();\r\n        this.$fileListHeaderContainerRight.append($dialogDiv);\r\n\r\n        $dialogDiv.append(makeDiv(\"\", \"jo_synchro_commitDialogCaption\", \"Bitte beschreibe kurz die vorgenommenen Änderungen am Repository:\"));\r\n        let $dialogTextarea: JQuery<HTMLTextAreaElement> = jQuery('<textarea class=\"jo_synchro_commitDialogTextarea\"></textarea>');\r\n        $dialogDiv.append($dialogTextarea);\r\n\r\n        let $dialogButtonDiv = makeDiv(\"\", \"jo_synchro_commitDialogButtonDiv\");\r\n        $dialogDiv.append($dialogButtonDiv);\r\n\r\n        let $buttonCancel = makeDiv(\"\", \"jo_synchro_button\", \"Abbrechen\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" })\r\n        $dialogButtonDiv.append($buttonCancel);\r\n\r\n        $buttonCancel.on(\"click\", () => {\r\n            $dialogDiv.remove();\r\n            that.$writeRepositoryChangesButton.show();\r\n        })\r\n\r\n        let $buttonOK = makeDiv(\"\", \"jo_synchro_button\", \"OK\", { \"background-color\": \"var(--createButtonBackground)\", \"color\": \"var(--createButtonColor)\" })\r\n        $dialogButtonDiv.append($buttonOK);\r\n\r\n        $dialogDiv.show(600);\r\n\r\n        $buttonOK.on(\"click\", () => {\r\n            let comment = <string>$dialogTextarea.val();\r\n            $dialogDiv.remove();\r\n\r\n            this.currentRepositorySynchroWorkspace.commit(this.currentUserSynchroWorkspace.copiedFromWorkspace, this.currentRepository, comment,\r\n                this.main, (repository: Repository, errorMessage: string) => {\r\n\r\n                    if (errorMessage != null) {\r\n                        alert(errorMessage);\r\n                        this.attachToWorkspaceAndRepository(this.currentRepositorySynchroWorkspace.copiedFromWorkspace);\r\n                    } else {\r\n                        this.attachToRepository(repository);\r\n                        this.$writeRepositoryChangesButton.hide();\r\n                    }\r\n\r\n                });\r\n\r\n        })\r\n\r\n        $dialogTextarea.focus();\r\n\r\n    }\r\n\r\n    writeWorkspaceChanges() {\r\n        this.currentUserSynchroWorkspace.writeChangesToWorkspace();\r\n        this.currentUserSynchroWorkspace = new SynchroWorkspace(this).copyFromWorkspace(this.currentUserSynchroWorkspace.copiedFromWorkspace);\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.$writeWorkspaceChangesButton.hide();\r\n    }\r\n\r\n    initEditor() {\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"jo_synchro_editor\"), {\r\n            originalEditable: true, // for left pane\r\n            readOnly: true,         // for right pane\r\n            automaticLayout: true\r\n        });\r\n    }\r\n\r\n    onContentChanged(leftRight: LeftRight) {\r\n        let $button: JQuery<HTMLDivElement> = leftRight == \"left\" ? this.$writeWorkspaceChangesButton : this.$writeRepositoryChangesButton\r\n        let synchroWorkspace: SynchroWorkspace = leftRight == \"left\" ? this.currentUserSynchroWorkspace : this.currentRepositorySynchroWorkspace;\r\n\r\n        if (synchroWorkspace.hasChanges()) {\r\n            $button.show();\r\n        } else {\r\n            $button.hide();\r\n        }\r\n\r\n    }\r\n\r\n    updateAll() {\r\n        let updateButtons = this.$fileListDivs[1].find('.jo_synchro_updateButton');\r\n        updateButtons.click();\r\n    }\r\n\r\n    commitAll() {\r\n        let commitButtons = this.$fileListDivs[2].find('.jo_synchro_commitButton');\r\n        commitButtons.click();\r\n    }\r\n\r\n\r\n    updateCenterButtons() {\r\n        let updateButtons = this.$fileListDivs[1].find('.jo_synchro_updateButton');\r\n        if (updateButtons.length > 0) {\r\n            this.$updateAllButton.css(\"visibility\", \"inherit\");\r\n        } else {\r\n            this.$updateAllButton.css(\"visibility\", \"hidden\");\r\n        }\r\n\r\n        let commitButtons = this.$fileListDivs[2].find('.jo_synchro_commitButton');\r\n        if (commitButtons.length > 0) {\r\n            this.$commitAllButton.css(\"visibility\", \"inherit\");\r\n        } else {\r\n            this.$commitAllButton.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n\r\n}","import { Repository } from \"../../communication/Data.js\";\r\n\r\nexport class RepositoryTool {\r\n\r\n    static deserializeRepository(repo: Repository) {\r\n\r\n        if (repo.files != null && repo.files.startsWith('[')) {\r\n            repo.fileEntries = JSON.parse(repo.files);\r\n        } else {\r\n            repo.fileEntries = [];\r\n        }\r\n\r\n        repo.fileEntries.forEach(fe => fe.text = fe.text.replace(/\\r\\n/g, \"\\n\"));\r\n\r\n        if (!repo.history.endsWith(\"]\")) repo.history += \"]\";\r\n        repo.historyEntries = JSON.parse(repo.history);\r\n\r\n    }\r\n\r\n    static copyRepository(repo: Repository, withHistoryElements: boolean): Repository {\r\n\r\n        let crepo: Repository = Object.assign({}, repo);\r\n\r\n        if (repo.fileEntries != null) {\r\n            crepo.fileEntries = [];\r\n            for (let fe of repo.fileEntries) {\r\n                crepo.fileEntries.push(Object.assign({}, fe));\r\n            }\r\n        }\r\n\r\n        if (repo.historyEntries != null && withHistoryElements) {\r\n            crepo.historyEntries = [];\r\n            for (let he of repo.historyEntries) {\r\n                let che = Object.assign({}, he);\r\n\r\n                if (he.historyFiles != null) {\r\n                    che.historyFiles = [];\r\n                    for (let hfe of he.historyFiles) {\r\n                        che.historyFiles.push(Object.assign({}, hfe));\r\n                    }\r\n                }\r\n\r\n                crepo.historyEntries.push(che);\r\n            }\r\n        }\r\n\r\n        return crepo;\r\n\r\n    }\r\n\r\n    \r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, getSelectedObject, setSelectItems } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\n\r\n\r\n\r\nexport class RepositoryCreateManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n    $settingsDiv: JQuery<HTMLElement>;\r\n\r\n    $repoName: JQuery<HTMLInputElement>;\r\n    $repoDescription: JQuery<HTMLTextAreaElement>;\r\n    $repoPublishedTo: JQuery<HTMLSelectElement>;\r\n\r\n    $cancelButton: JQuery<HTMLElement>;\r\n    $createButton: JQuery<HTMLElement>;\r\n\r\n\r\n    publishedToItems: SelectItem[] = [];\r\n\r\n    workspace: Workspace;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $updateDiv = jQuery('#createRepo-div');\r\n\r\n        $updateDiv.append(this.$mainHeading = makeDiv('', \"createUpdateRepo-mainHeading\"));\r\n\r\n        $updateDiv.append(this.$settingsDiv = makeDiv('', \"createUpdateRepo-settingsDiv\"));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Name des Repositorys:</div>'));\r\n        this.$settingsDiv.append(this.$repoName = jQuery('<input type=\"text\" class=\"createUpdateRepo-inputcolumn\"></input>'));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Beschreibung:</div>'));\r\n        this.$settingsDiv.append(this.$repoDescription = jQuery('<textarea class=\"createUpdateRepo-inputcolumn\" style=\"min-height: 4em\"></textarea>'));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Veröffentlicht für:</div>'));\r\n        this.$settingsDiv.append(this.$repoPublishedTo = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n\r\n        let $buttonDiv = makeDiv(\"createRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$createButton = makeDiv(\"\", \"jo_synchro_button\", \"Repository erstellen\", { \"background-color\": \"var(--createButtonBackground)\", \"color\": \"var(--createButtonColor)\" }));\r\n        this.$createButton.on(\"click\", () => { that.createButtonClicked() })\r\n\r\n        $buttonDiv.append(this.$cancelButton = makeDiv(\"\", \"jo_synchro_button\", \"Abbrechen\", { \"background-color\": \"var(--cancelButtonBackground)\", \"color\": \"var(--cancelButtonColor)\" }));\r\n        this.$cancelButton.on(\"click\", () => { that.cancelButtonClicked() })\r\n\r\n        $updateDiv.append($buttonDiv);\r\n\r\n\r\n    }\r\n\r\n    show(workspace: Workspace) {\r\n\r\n        this.workspace = workspace;\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let user = this.main.user;\r\n        let isStudent = !(user.is_admin || user.is_schooladmin || user.is_teacher);\r\n\r\n        this.publishedToItems =\r\n            [\r\n                { value: \"0\", object: 0, caption: \"Keine Veröffentlichung (privates Repository)\" },\r\n                { value: \"1\", object: 1, caption: isStudent ? \"Veröffentlicht für alle Schüler/innen der Klasse\" : \"Veröffentlicht für alle Schüler/innen der unterrichteten Klassen\" },\r\n                { value: \"2\", object: 2, caption: \"Veröffentlicht für alle Schüler/innen der Schule\" },\r\n            ];\r\n        setSelectItems(this.$repoPublishedTo, this.publishedToItems, \"0\");\r\n\r\n\r\n        let $synchroDiv = jQuery('#createRepo-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n\r\n        this.initCreateMode(workspace);\r\n\r\n        let that = this;\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n    initCreateMode(workspace: Workspace) {\r\n        let user = this.main.user;\r\n\r\n        let userInfo: RepositoryUser = {\r\n            firstName: user.rufname,\r\n            lastName: user.familienname,\r\n            username: user.username,\r\n            user_id: user.id,\r\n            canWrite: true,\r\n            klasse: \"\"\r\n        }\r\n\r\n        this.$mainHeading.text(`Repository anlegen und mit Workspace \"${workspace.name}\" verknüpfen:`);\r\n        this.$createButton.show();\r\n        this.$repoName.val(workspace.name);\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#createRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    createButtonClicked() {\r\n\r\n        let publishedTo: number = getSelectedObject(this.$repoPublishedTo);\r\n        let repoName: string = <string>this.$repoName.val();\r\n        let repoDescription: string = <string>this.$repoDescription.val();\r\n\r\n        this.main.networkManager.sendCreateRepository(this.workspace, publishedTo, repoName, repoDescription, (error: string, repository_id?: number) => {\r\n            if (error == null) {\r\n                let projectExplorer = this.main.projectExplorer;\r\n                let element = projectExplorer.workspaceListPanel.findElement(this.workspace);\r\n                projectExplorer.workspaceListPanel.setElementClass(element, \"repository\");\r\n                this.workspace.renderSynchronizeButton(element);\r\n                projectExplorer.showRepositoryButtonIfNeeded(this.workspace);\r\n                window.history.back(); // close modal window\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    cancelButtonClicked() {\r\n        window.history.back(); // close modal window\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, setSelectItems, getSelectedObject, openContextMenu, copyTextToClipboard } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData, GetRepositoryListRequest, GetRepositoryListResponse, RepositoryInfo, UpdateRepositoryRequest, UpdateRepositoryResponse, RepositoryUserWriteAccessData, UpdateRepositoryUserWriteAccessRequest, UpdateRepositoryUserWriteAccessResponse, DeleteRepositoryRequest } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\n\r\nexport class RepositorySettingsManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n\r\n    $settingsDiv: JQuery<HTMLElement>;\r\n    $repoName: JQuery<HTMLInputElement>;\r\n    $repoDescription: JQuery<HTMLTextAreaElement>;\r\n    $repoPublishedTo: JQuery<HTMLSelectElement>;\r\n    $repoOwner: JQuery<HTMLSelectElement>;\r\n\r\n    $repoListDiv: JQuery<HTMLElement>;\r\n\r\n    $userlistDiv: JQuery<HTMLElement>;\r\n\r\n    $exitButton: JQuery<HTMLElement>;\r\n    $saveButton: JQuery<HTMLElement>;\r\n    $deleteButton: JQuery<HTMLElement>;\r\n\r\n    $settingsSecretRead: JQuery<HTMLElement>;\r\n    $settingsSecretWrite: JQuery<HTMLElement>;\r\n\r\n    publishedToItems: SelectItem[] = [];\r\n\r\n    repositoryOwnerItems: SelectItem[] = [];\r\n\r\n    users: RepositoryUser[] = [];\r\n\r\n    workspace: Workspace;\r\n    repositoryInfo: RepositoryInfo;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $updateDiv = jQuery('#updateRepo-div');\r\n\r\n        $updateDiv.append(this.$mainHeading = makeDiv('updateRepo-mainHeading', \"createUpdateRepo-mainHeading\", \"\"));\r\n        this.$mainHeading.append(makeDiv(\"\", \"\", \"Repositories verwalten\"));\r\n        this.$mainHeading.append(this.$exitButton = makeDiv(\"\", \"jo_synchro_button\", \"Zurück zum Programmieren\", { \"background-color\": \"var(--speedcontrol-grip)\", \"color\": \"var(--fontColorLight)\", \"font-size\": \"10pt\" }));\r\n        this.$exitButton.on(\"click\", () => { that.exitButtonClicked() })\r\n\r\n\r\n        let $divBelow = makeDiv(\"updateRepo-divBelow\");\r\n        $updateDiv.append($divBelow);\r\n\r\n        let $divLeft = makeDiv(\"updateRepo-divLeft\");\r\n        $divBelow.append($divLeft);\r\n\r\n        $divLeft.append(makeDiv('', 'updateRepo-minorHeading', 'Repositories:'));\r\n\r\n        this.$repoListDiv = makeDiv(\"updateRepo-repoListDiv\");\r\n        $divLeft.append(this.$repoListDiv);\r\n\r\n        let $rightDiv = makeDiv(\"updateRepo-divRight\");\r\n        $divBelow.append($rightDiv);\r\n\r\n        this.$settingsDiv = makeDiv(\"\", \"createUpdateRepo-settingsDiv\");\r\n        $rightDiv.append(this.$settingsDiv);\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Name des Repositorys:</div>'));\r\n        this.$settingsDiv.append(this.$repoName = jQuery('<input type=\"text\" class=\"createUpdateRepo-inputcolumn\"></input>'));\r\n        this.$repoName.on(\"input\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Beschreibung:</div>'));\r\n        this.$settingsDiv.append(this.$repoDescription = jQuery('<textarea class=\"createUpdateRepo-inputcolumn\" style=\"min-height: 4em\"></textarea>'));\r\n        this.$repoDescription.on(\"input\", () => { that.enableSaveButton() });\r\n\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Veröffentlicht für:</div>'));\r\n        this.$settingsDiv.append(this.$repoPublishedTo = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n        this.$repoPublishedTo.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Eigentümer:</div>'));\r\n        this.$settingsDiv.append(this.$repoOwner = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n        this.$repoOwner.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Code zum lesenden Zugriff aufs Repository:</div>'));\r\n        let $setSecrDivRead = jQuery('<div class=\"createUpdateRepo-settingsSecret\"></div>');\r\n        this.$settingsDiv.append($setSecrDivRead);\r\n        this.$settingsSecretRead = jQuery('<div class=\"createUpdateRepo-settingsSecretSecret\">---</div>')\r\n        $setSecrDivRead.append(this.$settingsSecretRead);\r\n\r\n        let $setSecrReadCopyButton = jQuery('<button class=\"jo_button jo_copy_secret_button jo_active\">Kopieren</button>');\r\n        $setSecrDivRead.append($setSecrReadCopyButton);\r\n        $setSecrReadCopyButton.on(\"pointerdown\", () => {copyTextToClipboard(this.$settingsSecretRead.text())})\r\n\r\n        let $setSecrReadButton = jQuery('<button class=\"jo_button jo_set_secret_button jo_active\">Ändern</button>');\r\n        $setSecrDivRead.append($setSecrReadButton);\r\n        $setSecrReadButton.on(\"pointerdown\", () => {that.setSecret(true, false)})\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Code zum schreibenden Zugriff aufs Repository:</div>'));\r\n        let $setSecrDivWrite = jQuery('<div class=\"createUpdateRepo-settingsSecret\"></div>');\r\n        this.$settingsDiv.append($setSecrDivWrite);\r\n        this.$settingsSecretWrite = jQuery('<div class=\"createUpdateRepo-settingsSecretSecret\">---</div>')\r\n        $setSecrDivWrite.append(this.$settingsSecretWrite);\r\n\r\n        let $setSecrWriteCopyButton = jQuery('<button class=\"jo_button jo_copy_secret_button jo_active\">Kopieren</button>');\r\n        $setSecrDivWrite.append($setSecrWriteCopyButton);\r\n        $setSecrWriteCopyButton.on(\"pointerdown\", () => {copyTextToClipboard(this.$settingsSecretWrite.text())})\r\n\r\n        let $setSecrWriteButton = jQuery('<button class=\"jo_button jo_set_secret_button jo_active\">Ändern</button>');\r\n        $setSecrDivWrite.append($setSecrWriteButton);\r\n        $setSecrWriteButton.on(\"pointerdown\", () => {that.setSecret(false, true)})\r\n\r\n        $rightDiv.append(this.$userlistDiv = makeDiv(\"updateRepo-userlistDiv\"));\r\n\r\n        this.$userlistDiv.append(makeDiv(null, \"updateRepo-userlistheading\", \"Benutzer, die das Repository nutzen\", { \"grid-column\": 1 }))\r\n        this.$userlistDiv.append(makeDiv(null, \"updateRepo-userlistheading\", \"Schreibberechtigung\", { \"grid-column\": 2 }))\r\n\r\n        let $buttonDiv = makeDiv(\"updateRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$saveButton = makeDiv(\"\", \"jo_synchro_button\", \"Änderungen speichern\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" }));\r\n        this.$saveButton.on(\"click\", () => { that.saveButtonClicked() })\r\n        this.$saveButton.hide();\r\n\r\n        $rightDiv.append($buttonDiv);\r\n\r\n    }\r\n\r\n    setSecret(read: boolean, write: boolean){\r\n\r\n        this.main.networkManager.sendSetSecret(this.repositoryInfo.id, read, write, (response) => {\r\n            let praefix = this.repositoryInfo.id + \"T\";\r\n            this.$settingsSecretRead.text(praefix + response.secret_read);\r\n            this.$settingsSecretWrite.text(praefix + response.secret_write);\r\n        })\r\n\r\n    }\r\n\r\n    enableSaveButton() {\r\n        this.$saveButton.show();\r\n    }\r\n\r\n    show(repository_id: number) {\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let $synchroDiv = jQuery('#updateRepo-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        let user = this.main.user;\r\n        let is_student = !(user.is_teacher || user.is_admin || user.is_schooladmin);\r\n\r\n        this.publishedToItems = [\r\n            { value: 0, object: 0, caption: \"Keine Veröffentlichung (privates Repository)\" },\r\n            { value: 1, object: 1, caption: is_student ? \"Veröffentlicht für alle Schüler/innen der Klasse\" : \"Veröffentlicht für alle Schüler/innen der unterrichteten Klassen\" },\r\n            { value: 2, object: 2, caption: \"Veröffentlicht für alle Schüler/innen der Schule\" },\r\n        ];\r\n\r\n        setSelectItems(this.$repoPublishedTo, this.publishedToItems, 0);\r\n\r\n        this.$saveButton.show();\r\n\r\n        this.showRepositoryList();\r\n\r\n        let that = this;\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n    deleteRepository(repInfo: RepositoryInfo) {\r\n\r\n        let that = this;\r\n        let request: DeleteRepositoryRequest = { repository_id: repInfo.id };\r\n        ajax('deleteRepository', request, () => {\r\n            that.showRepositoryList();\r\n            let workspaces = that.main.workspaceList.filter((ws) => {return ws.repository_id == repInfo.id});\r\n            for(let ws of workspaces){\r\n                ws.repository_id = null;\r\n                ws.panelElement.iconClass = \"workspace\";\r\n                ws.panelElement.$htmlFirstLine.removeClass(\"jo_repository\");\r\n                ws.panelElement.$htmlFirstLine.addClass(\"jo_workspace\");\r\n                ws.panelElement.$htmlFirstLine.find(\".jo_additionalButtonRepository\").empty();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    showRepositoryList() {\r\n        this.emptyRepositoryInfo();\r\n        let grlq: GetRepositoryListRequest = {\r\n            onlyOwnRepositories: true\r\n        }\r\n\r\n        this.$repoListDiv.empty();\r\n        let that = this;\r\n        ajax('getRepositoryList', grlq, (response: GetRepositoryListResponse) => {\r\n\r\n            let $firstDiv: JQuery<HTMLDivElement>;\r\n            let firstRepInfo: RepositoryInfo;\r\n\r\n            if(response.repositories.length == 0){\r\n                alert('Sie haben noch keine Repositories, und\\nkönnen daher keine verwalten.\\nTipp: Ein Repository können Sie durch Rechtsklick auf einen Workspace anlegen.');\r\n                that.exitButtonClicked();\r\n                return;\r\n            }\r\n\r\n            response.repositories.forEach(repInfo => {\r\n                let $div = makeDiv('', 'updateRepo-repoListItem');\r\n                let $namediv = makeDiv('', '', repInfo.name);\r\n                let $deleteDiv = jQuery('<div class=\"img_delete jo_button jo_active\" title=\"Repository löschen...\"></div>');\r\n                $div.append($namediv, $deleteDiv);\r\n                this.$repoListDiv.append($div);\r\n                $div.on('click', (e) => {\r\n                    that.selectRepository($div, repInfo);\r\n                })\r\n                $div.data('repoInfo', repInfo);\r\n                if (firstRepInfo == null) {\r\n                    firstRepInfo = repInfo;\r\n                    $firstDiv = $div;\r\n                }\r\n\r\n                $deleteDiv.on(\"click\", (ev) => {\r\n                    ev.preventDefault();\r\n                    openContextMenu([{\r\n                        caption: \"Abbrechen\",\r\n                        callback: () => { }\r\n                    }, {\r\n                        caption: \"Ich bin mir sicher: löschen!\",\r\n                        color: \"#ff6060\",\r\n                        callback: () => {\r\n                            that.deleteRepository(repInfo);\r\n                        }\r\n                    }], ev.pageX + 2, ev.pageY + 2);\r\n                    ev.stopPropagation();\r\n                });\r\n            });\r\n\r\n            if ($firstDiv != null) {\r\n                this.selectRepository($firstDiv, firstRepInfo);\r\n            }\r\n\r\n        }, (message) => {\r\n            console.log(message);\r\n            alert('Sie haben noch keine Repositories, und\\nkönnen daher keine verwalten.\\nTipp: Ein Repository können Sie durch Rechtsklick auf einen Workspace anlegen.');\r\n            that.exitButtonClicked();\r\n            return;\r\n        });\r\n    }\r\n\r\n    selectRepository($repoDiv: JQuery<HTMLDivElement>, repInfo: RepositoryInfo) {\r\n        this.repositoryInfo = repInfo;\r\n        \r\n        this.emptyRepositoryInfo();\r\n        if (this.$saveButton.is(\":visible\")) {\r\n            let selectedItem = this.$repoListDiv.find('.active').first();\r\n            let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n            if (repoData) {\r\n                alert(`Deine Änderungen am Repository \"${repoData.name}\" wurden nicht gespeichert.`);\r\n            }\r\n        }\r\n\r\n        this.$saveButton.hide();\r\n        this.$repoListDiv.find('.updateRepo-repoListItem').removeClass('active');\r\n        $repoDiv.addClass('active');\r\n        this.$repoName.val(repInfo.name);\r\n        this.$repoDescription.val(repInfo.description);\r\n        this.$repoPublishedTo.val(repInfo.published_to);\r\n        this.$settingsSecretRead.text(repInfo.secret_read == null ? \"--------\" : repInfo.id + \"T\" + repInfo.secret_read);\r\n        this.$settingsSecretWrite.text(repInfo.secret_write == null ? \"--------\" : repInfo.id + \"T\" + repInfo.secret_write);\r\n\r\n        this.$repoOwner.empty();\r\n        this.$userlistDiv.children().not('.updateRepo-userlistheading').remove();\r\n\r\n        let req: GetRepositoryUserListRequest = { repository_id: repInfo.id };\r\n        let that = this;\r\n\r\n        ajax('getRepositoryUserList', req, (response: GetRepositoryUserListResponse) => {\r\n\r\n            response.repositoryUserList.forEach(userData => {\r\n\r\n                let $userDiv = makeDiv(\"\", \"updateRepo-userDiv\", `${userData.firstName} ${userData.lastName} (${userData.username})`, { 'grid-column': 1 });\r\n\r\n                let $canWriteDiv = makeDiv(\"\", \"canWriteDiv\", \"\", { 'grid-column': 2 });\r\n                let $canWriteCheckBox = jQuery('<input type=\"checkbox\">');\r\n                $canWriteDiv.append($canWriteCheckBox);\r\n\r\n                //@ts-ignore\r\n                $canWriteCheckBox.attr('checked', userData.canWrite);\r\n                $canWriteCheckBox.data('user', userData);\r\n                $canWriteCheckBox.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n                that.$userlistDiv.append($userDiv, $canWriteDiv);\r\n            });\r\n\r\n            that.$repoOwner.empty();\r\n            let selectedItems = response.repositoryUserList.map(userData => {\r\n                let se: SelectItem = {\r\n                    caption: `${userData.firstName} ${userData.lastName} (${userData.username})`,\r\n                    object: userData,\r\n                    value: userData.user_id + \"\"\r\n                }\r\n                return se;\r\n            });\r\n\r\n            if(!response.repositoryUserList.some(user => user.user_id == repInfo.owner_id)){\r\n                selectedItems.push({\r\n                    caption: `${repInfo.owner_name} (${repInfo.owner_username})`,\r\n                    object: {\r\n                        user_id: repInfo.owner_id,\r\n                        username: repInfo.owner_username,\r\n                        firstName: \"\",\r\n                        lastName: \"\",\r\n                        klasse: \"\",\r\n                        canWrite: true\r\n                    },\r\n                    value: repInfo.owner_id + \"\"\r\n                })\r\n            }\r\n\r\n            setSelectItems(that.$repoOwner, selectedItems, repInfo.owner_id + \"\")\r\n\r\n        });\r\n\r\n    }\r\n\r\n    emptyRepositoryInfo() {\r\n        this.$repoOwner.empty();\r\n        this.$repoName.val('');\r\n        this.$repoDescription.val('');\r\n        this.$userlistDiv.find('.updateRepo-userDiv').remove();\r\n        this.$userlistDiv.find('.canWriteDiv').remove();\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#updateRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    saveButtonClicked() {\r\n\r\n        let that = this;\r\n\r\n        let selectedItem = this.$repoListDiv.find('.active').first();\r\n        let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n\r\n        let name: string = <string>this.$repoName.val();\r\n        let owner: RepositoryUser = getSelectedObject(this.$repoOwner);\r\n        let published_to: number = getSelectedObject(this.$repoPublishedTo);\r\n\r\n        let updateRepositoryRequest: UpdateRepositoryRequest = {\r\n            owner_id: owner.user_id,\r\n            description: <string>this.$repoDescription.val(),\r\n            published_to: published_to,\r\n            repository_id: repoData.id,\r\n            name: name\r\n        };\r\n\r\n\r\n        // update user write access:\r\n\r\n        let writeAccessList: RepositoryUserWriteAccessData[] = [];\r\n\r\n        that.$userlistDiv.find('input').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            let user: RepositoryUser = <any>$element.data('user');\r\n            writeAccessList.push({\r\n                has_write_access: <any>jQuery(element).is(':checked'),\r\n                user_id: user.user_id\r\n            });\r\n        });\r\n\r\n        let request: UpdateRepositoryUserWriteAccessRequest = {\r\n            repository_id: repoData.id,\r\n            writeAccessList: writeAccessList\r\n        }\r\n\r\n        if (repoData.owner_id == owner.user_id || \r\n              confirm(\"Soll die Eigentümerschaft über das Repository \" + repoData.name + \" wirklich an \" + owner.firstName + \" \" + owner.lastName + \" übertragen werden?\")) {\r\n            ajax('updateRepositoryUserWriteAccess', request, (response: UpdateRepositoryUserWriteAccessResponse) => {\r\n\r\n\r\n                ajax(\"updateRepository\", updateRepositoryRequest, (response: UpdateRepositoryResponse) => {\r\n\r\n                    repoData.name = name;\r\n                    repoData.owner_id = owner.user_id;\r\n                    repoData.owner_name = owner.firstName + \" \" + owner.lastName;\r\n                    repoData.owner_username = owner.username;\r\n                    repoData.published_to = published_to;\r\n                    repoData.description = updateRepositoryRequest.description;\r\n\r\n                    alert('Die Änderungen wurden erfolgreich gespeichert.')\r\n                    that.$saveButton.hide();\r\n                    that.showRepositoryList();\r\n\r\n\r\n                }, (errorMessage: string) => {\r\n                    alert(\"Fehler: \" + errorMessage);\r\n                    that.exitButtonClicked();\r\n                });\r\n\r\n            }, (errorMessage: string) => {\r\n                alert(\"Fehler: \" + errorMessage);\r\n                that.exitButtonClicked();\r\n            }\r\n            );\r\n        } else {\r\n            alert(\"Der Speichervorgang wurde nicht durchgeführt.\");\r\n        }\r\n    }\r\n\r\n\r\n    exitButtonClicked() {\r\n        window.history.back();\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, setSelectItems, getSelectedObject } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData, GetRepositoryListRequest, GetRepositoryListResponse, RepositoryInfo, UpdateRepositoryRequest, UpdateRepositoryResponse, AttachWorkspaceToRepositoryRequest, WorkspaceData, AttachWorkspaceToRepositoryResponse } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { TeachersWithClassesMI } from \"../../administration/TeachersWithClasses.js\";\r\nimport { ProjectExplorer } from \"../../main/gui/ProjectExplorer.js\";\r\n\r\n\r\nexport class RepositoryCheckoutManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n\r\n    $repoListDiv: JQuery<HTMLElement>;\r\n\r\n    $exitButton: JQuery<HTMLElement>;\r\n    $checkoutButton: JQuery<HTMLElement>;\r\n\r\n    $workspaceDropdown: JQuery<HTMLSelectElement>;\r\n    $filterButtonDiv: JQuery<HTMLElement>;\r\n    $filterInput: JQuery<HTMLInputElement>;\r\n\r\n    filterbuttonOptions = [\"alle\", \"private\", \"für die Klasse freigegebene\", \"für die Schule freigegebene\"];\r\n\r\n    workspace: Workspace;\r\n\r\n    repositories: RepositoryInfo[] = [];\r\n    $codeInput: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $checkoutDiv = jQuery('#checkoutRepo-div');\r\n\r\n        $checkoutDiv.append(this.$mainHeading = makeDiv('checkoutRepo-mainHeading', \"createUpdateRepo-mainHeading\", \"\"));\r\n        this.$mainHeading.append(makeDiv(\"\", \"\", \"Checkout Repository - Workspace mit Repository verbinden\"));\r\n        this.$mainHeading.append(this.$exitButton = makeDiv(\"\", \"jo_synchro_button\", \"Zurück zum Programmieren\", { \"background-color\": \"var(--speedcontrol-grip)\", \"color\": \"var(--fontColorLight)\", \"font-size\": \"10pt\" }));\r\n        this.$exitButton.on(\"click\", () => { that.exitButtonClicked() })\r\n\r\n\r\n        let $divBelow = makeDiv(\"checkoutRepo-divBelow\");\r\n        $checkoutDiv.append($divBelow);\r\n\r\n        let $chooseWorkspaceDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($chooseWorkspaceDiv);\r\n        $chooseWorkspaceDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Diesen Worspace mit dem Repository verbinden:\"));\r\n        this.$workspaceDropdown = jQuery('<select></select>');\r\n        $chooseWorkspaceDiv.append(this.$workspaceDropdown);\r\n\r\n        let $codeDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($codeDiv);\r\n        $codeDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Alternativ zur Auswahl unten Eingabe eines Repository-Codes:\"));\r\n        this.$codeInput = jQuery('<input type=\"text\"></input>');\r\n        $codeDiv.append(this.$codeInput);\r\n\r\n        this.$codeInput.on(\"input\", (e) => {\r\n            let text = that.$codeInput.val();\r\n            if(text == ''){\r\n                this.$repoListDiv.show();\r\n            } else {\r\n                this.$repoListDiv.hide();\r\n            }\r\n        });\r\n\r\n        let $publishedToFilterDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($publishedToFilterDiv);\r\n        $publishedToFilterDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Diese Repositories anzeigen:\"));\r\n        this.$filterButtonDiv = jQuery('<fieldset></fieldset>');\r\n        $publishedToFilterDiv.append(this.$filterButtonDiv);\r\n\r\n        this.filterbuttonOptions.forEach((value, index) => {\r\n            let $radioButton = jQuery(`<input type=\"radio\" id=\"b${index}\" name=\"publishedFilter\" value=\"${index}\" ${index == 0 ? \"checked\" : \"\"}>`);\r\n            $radioButton.data('value', index);\r\n            $radioButton.on(\"change\", (e) => {\r\n                that.showRepositories();\r\n            })\r\n            this.$filterButtonDiv.append($radioButton);\r\n            this.$filterButtonDiv.append(jQuery(`<label for=\"b${index}\">${value}</label>`));\r\n        })\r\n\r\n        let $inputFilterDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($inputFilterDiv);\r\n        $inputFilterDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Filter/Suche:\"));\r\n        this.$filterInput = jQuery('<input type=\"text\"></input>');\r\n        $inputFilterDiv.append(this.$filterInput);\r\n\r\n        this.$filterInput.on(\"input\", (e) => {\r\n            that.showRepositories();\r\n        });\r\n\r\n        $divBelow.append(makeDiv('', 'updateRepo-minorHeading', 'Repositories:', {'margin-bottom': '10px', 'margin-top': '20px'}));\r\n\r\n        this.$repoListDiv = makeDiv('checkoutRepo-repoListDiv', 'jo_scrollable');\r\n        $divBelow.append(this.$repoListDiv);\r\n\r\n        let $buttonDiv = makeDiv(\"updateRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$checkoutButton = makeDiv(\"\", \"jo_synchro_button\", \"Checkout\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" }));\r\n        this.$checkoutButton.on(\"click\", () => { that.checkoutButtonClicked() })\r\n\r\n        $divBelow.append($buttonDiv);\r\n\r\n    }\r\n\r\n    show(workspace: Workspace) {\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let $checkoutDiv = jQuery('#checkoutRepo-div');\r\n        $checkoutDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        let user = this.main.user;\r\n\r\n        let grlq: GetRepositoryListRequest = {\r\n            onlyOwnRepositories: false\r\n        }\r\n\r\n        this.$repoListDiv.empty();\r\n        let that = this;\r\n        ajax('getRepositoryList', grlq, (response: GetRepositoryListResponse) => {\r\n\r\n            this.repositories = response.repositories;\r\n\r\n            this.showRepositories();\r\n\r\n        });\r\n\r\n        // Init Workspace-Dropdown\r\n        this.$workspaceDropdown.empty();\r\n        setSelectItems(this.$workspaceDropdown, [{\r\n            caption: \"Neuen Workspace erstellen\",\r\n            object: null,\r\n            value: -1\r\n        }].concat(this.main.workspaceList.filter(ws => ws.repository_id == null && !ws.isFolder).map(ws => {\r\n            return {\r\n                caption: ws.name,\r\n                object: ws,\r\n                value: ws.id\r\n            }\r\n        }))\r\n        , -1);\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n\r\n    showRepositories(){\r\n\r\n        let that = this;\r\n\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').remove();\r\n\r\n        let published_to = this.$filterButtonDiv.find('input:checked').data('value') - 1;\r\n\r\n        let filteredRepositories: RepositoryInfo[] = published_to < 0 ? this.repositories :\r\n            this.repositories.filter(repoInfo => repoInfo.published_to == published_to);\r\n\r\n        let filterSearch: string = <string>this.$filterInput.val();\r\n        filterSearch = filterSearch.toLocaleLowerCase();\r\n\r\n        if(filterSearch != \"\"){\r\n            filteredRepositories = filteredRepositories.filter(\r\n                repInfo => [repInfo.owner_username , repInfo.owner_name , repInfo.name , repInfo.description].join(\" \").toLocaleLowerCase().indexOf(filterSearch) >= 0\r\n            )\r\n        }\r\n\r\n        filteredRepositories.forEach(repInfo => {\r\n            let $div = makeDiv('', 'checkoutRepo-repoListItem');\r\n            let $divLeft = makeDiv('', 'checkoutRepo-repoListItemLeft');\r\n            $div.append($divLeft);\r\n\r\n            $divLeft.append(makeDiv('', 'checkoutRepo-repoListName', repInfo.name));\r\n            $divLeft.append(makeDiv('', 'checkoutRepo-repoListOwner', repInfo.owner_name + \" (\" + repInfo.owner_username + \")\"));\r\n\r\n            let $divRight = makeDiv('', 'checkoutRepo-repoListItemRight', repInfo.description);\r\n            $div.append($divRight);\r\n\r\n            this.$repoListDiv.append($div);\r\n            $div.data('repoInfo', repInfo);\r\n            $div.on(\"click\", () => {\r\n                that.selectRepository($div, repInfo);\r\n            })\r\n        });\r\n\r\n        this.selectFirstRepository();\r\n\r\n    }\r\n\r\n    selectRepository($repoDiv: JQuery<HTMLDivElement>, repInfo: RepositoryInfo) {\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').removeClass('active');\r\n        if($repoDiv != null){\r\n            $repoDiv.addClass('active');\r\n        }\r\n    }\r\n\r\n    selectFirstRepository(){\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').removeClass('active');\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').first().addClass('active');\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#checkoutRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    checkoutButtonClicked() {\r\n\r\n        let repositoryId: number = -1;\r\n        let secret: string = null;\r\n\r\n        let combinedSecret = <string>this.$codeInput.val();\r\n        if(combinedSecret != \"\"){\r\n            let tIndex = combinedSecret.indexOf('T');\r\n            if(tIndex < 0){\r\n                alert(\"Der Code muss den Buchstaben T enthalten.\");\r\n                return;\r\n            }\r\n            let number = Number.parseInt(combinedSecret.substring(0, tIndex));\r\n            if(number >= 0){\r\n                repositoryId = number;\r\n                secret = combinedSecret.substring(tIndex + 1);\r\n            } else {\r\n                alert (\"Im Code muss vor dem T eine Zahl stehen.\");\r\n                return;\r\n            }\r\n        } else {\r\n            let selectedItem = this.$repoListDiv.find('.active').first();\r\n            let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n            repositoryId = repoData.id;\r\n        }\r\n\r\n        let workspace: Workspace = getSelectedObject(this.$workspaceDropdown);\r\n\r\n        let request: AttachWorkspaceToRepositoryRequest = {\r\n            repository_id: repositoryId,\r\n            createNewWorkspace: workspace == null,\r\n            workspace_id: workspace == null ? null : workspace.id,\r\n            secret: secret\r\n        }\r\n\r\n        let that = this;\r\n        ajax('attachWorkspaceToRepository', request, (response: AttachWorkspaceToRepositoryResponse) => {\r\n\r\n            if(response.message != null){\r\n                alert(response.message);\r\n                return;\r\n            }\r\n\r\n            if(workspace == null && response.new_workspace != null){\r\n\r\n                let newWorkspace = that.main.networkManager.createNewWorkspaceFromWorkspaceData(response.new_workspace);\r\n                that.main.projectExplorer.workspaceListPanel.sortElements();\r\n                setTimeout(() => {\r\n                    that.main.projectExplorer.setWorkspaceActive(newWorkspace, true);                    \r\n                }, 400);\r\n\r\n                alert('Der neue Workspace ' + response.new_workspace.name + \" wurde erfolgreich angelegt.\");\r\n\r\n            } else {\r\n\r\n                workspace.repository_id = repositoryId;\r\n                let explorer = that.main.projectExplorer;\r\n                explorer.workspaceListPanel.setElementClass(workspace.panelElement, \"repository\");\r\n                alert(`Der Workspace ${workspace.name} wurde erfolgreich mit dem Repository verknüpft.`);\r\n\r\n            }\r\n\r\n            window.history.back();\r\n\r\n        });\r\n\r\n        // let updateRepositoryRequest: UpdateRepositoryRequest = {\r\n        //     owner_id: owner.user_id,\r\n        //     description: <string>this.$repoDescription.val(),\r\n        //     published_to: published_to,\r\n        //     repository_id: repoData.id\r\n        // };\r\n\r\n        // ajax(\"updateRepository\", updateRepositoryRequest, (response: UpdateRepositoryResponse) => {\r\n\r\n        //     //TODO: update user write access..\r\n\r\n\r\n        // });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    exitButtonClicked() {\r\n        this.hide();\r\n    }\r\n\r\n\r\n}","import { Main } from \"./Main.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n        main.checkStartupComplete();\r\n\r\n        if(main.repositoryOn){\r\n            main.synchronizationManager = new SynchronizationManager(main);\r\n            main.synchronizationManager.initGUI();\r\n            main.repositoryCreateManager = new RepositoryCreateManager(main);\r\n            main.repositoryCreateManager.initGUI();\r\n            main.repositoryUpdateManager = new RepositorySettingsManager(main);\r\n            main.repositoryUpdateManager.initGUI();\r\n            main.repositoryCheckoutManager = new RepositoryCheckoutManager(main);\r\n            main.repositoryCheckoutManager.initGUI();\r\n\r\n        }\r\n        // main.loadWorkspace();\r\n\r\n        \r\n    });\r\n    \r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n    .shared.add(\"spritesheet\", \"assets/graphics/spritesheet.json\")\r\n    .add(\"steve\", \"assets/graphics/robot/minecraft_steve/scene.gltf\")\r\n    .load(() => { });\r\n    \r\n    main.initGUI();\r\n\r\n});"],"sourceRoot":""}